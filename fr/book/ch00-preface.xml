<!-- -*- sgml -*- -->

<preface id="svn.preface">
<!--
  <title>Preface</title>
-->
  <title>Préface</title>

<!--
  <blockquote>
    <attribution>Greg Hudson, Subversion developer</attribution>
    <para><quote>It is important not to let the perfect become the
      enemy of the good, even when you can agree on what perfect is.
      Doubly so when you can't.  As unpleasant as it is to be trapped by
      past mistakes, you can't make any progress by being afraid of your
      own shadow during design.</quote></para>
  </blockquote>
-->

  <blockquote>
    <attribution>Greg Hudson, développeur de Subversion</attribution>
    <para><quote>Il est important de ne pas laisser la perfection devenir
     l'ennemi du bien, même lorsque vous pouvez être d'accord sur ce qu'est
     la perfection. Encore plus lorsque vous ne le pouvez pas. Aussi
     déplaisant qu'il soit d'être piégé par les erreurs du passé,
     vous ne pouvez pas faire de progrès en ayant peur de votre propre
     ombre pendant la conception.</quote></para>
  </blockquote>


<!--
  <para>
    <indexterm>
      <primary>Concurrent Versions System</primary>
    </indexterm>
    <indexterm>
      <primary>CVS</primary>
      <see>Concurrent Versions System</see>
    </indexterm>In the world of open source software, the Concurrent
    Versions System (CVS) was the tool of choice for version control
    for many years.  And rightly so.  CVS was open source software
    itself, and its nonrestrictive modus operandi and support for
    networked operation allowed dozens of geographically dispersed
    programmers to share their work.  It fit the collaborative nature
    of the open source world very well.  CVS and its semi-chaotic
    development model have since become cornerstones of open source
    culture.</para>

-->
  <para>
    <indexterm>
      <primary>Concurrent Versions System</primary>
    </indexterm>
    <indexterm>
      <primary>CVS</primary>
      <see>Concurrent Versions System</see>
    </indexterm>Dans le monde du logiciel libre, le logiciel
     <quote>Concurrent Versions System</quote> (CVS) fut l'outil de choix
     pour la gestion de versions pendant de nombreuses années. Et à
     juste titre. CVS était lui-même libre et son mode de
     fonctionnement non-restrictif couplé à son support des opérations
     réseau permettait à des dizaines de programmeurs dispersés aux
     quatre coins du monde de partager leur travail. Cela collait très
     bien à la nature collaborative du logiciel libre. CVS et son modèle
     de développement semi-chaotique sont depuis devenus des pierres
     angulaires de la culture du logiciel libre.</para>
<!--
  <para>But CVS was not without its flaws, and simply fixing those
    flaws promised to be an enormous effort.  Enter Subversion.
    Subversion was designed to be a successor to CVS, and its
    originators set out to win the hearts of CVS users in two
    ways&mdash;by creating an open source system with a design
    (and <quote>look and feel</quote>) similar to CVS, and by
    attempting to avoid most of CVS's noticeable flaws.  While the
    result wasn't&mdash;and isn't&mdash;the next great evolution in
    version control design, Subversion <emphasis>is</emphasis> very
    powerful, very usable, and very flexible.</para>
-->

  <para>Mais CVS n'était pas parfait et simplement corriger ses défauts
    promettait d'être un énorme effort. C'est ici que Subversion entre en
    jeu. Les créateurs de Subversion l'ont créé pour être un successeur
    de CVS et l'ont fait de façon à gagner le cœur des utilisateurs de
    CVS de deux façons&nbsp;: en concevant un logiciel libre doté d'une
    interface similaire à CVS et en tentant d'éviter la plupart des
    défauts majeurs de CVS. Bien que le résultat ne soit pas forcément
    la prochaine évolution majeure dans les systèmes de gestion de
    versions, Subversion <emphasis>est</emphasis> très puissant,
    parfaitement utilisable et très flexible.</para>

<!--
  <para>This book is written to document the 1.8 series of the
    Apache&trade; Subversion&reg;<footnote><para>We'll refer to it
    simply as <quote>Subversion</quote> throughout this book.  You'll
    thank us when you realize just how much space that
    saves!</para></footnote> version control system.  We have made
    every attempt to be thorough in our coverage.  However, Subversion
    has a thriving and energetic development community, so already a
    number of features and improvements are planned for future
    versions that may change some of the commands and specific notes
    in this book.</para>
-->
  <para>Ce livre est écrit pour documenter les versions 1.8 du système
    de gestion de versions Apache&trade; Subversion&reg;<footnote>
    <para>Nous y ferons référence simplement par <quote>Subversion</quote>
    dans ce livre. Vous nous remercierez quand vous vous rendrez compte
    de l'espace que cela a économisé&nbsp;!</para></footnote>. Nous
    avons tenté d'être aussi complet que possible dans cet ouvrage.
    Cependant, Subversion a une communauté prospère et dynamique&nbsp;;
    il y a donc déjà un certain nombre de fonctionnalités et
    d'améliorations prévues pour des versions futures de Subversion qui
    peuvent modifier quelques commandes ou rendre caduques certaines
    notes spécifiques de ce livre.</para>


  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.intro.whatis">
<!--
    <title>What Is Subversion?</title>
-->
    <title>Qu'est-ce que Subversion&nbsp;?</title>

<!--
    <para>
      <indexterm>
        <primary>Subversion</primary>
      </indexterm>
      <indexterm>
        <primary>version control systems</primary>
      </indexterm>
      <indexterm>
        <primary>VCS</primary>
        <see>version control systems</see>
      </indexterm>Subversion is a free/open source <firstterm>version
      control system</firstterm> (VCS).  That is, Subversion manages
      files and directories, and the changes made to them, over time.
      This allows you to recover older versions of your data, or
      examine the history of how your data changed.  In this regard,
      many people think of a version control system as a sort
      of <quote>time machine.</quote></para>
-->
    <para>
      <indexterm>
        <primary>Subversion</primary>
      </indexterm>
      <indexterm>
        <primary>systèmes de gestion de versions</primary>
      </indexterm>
      <indexterm>
        <primary>VCS</primary>
        <see>systèmes de gestion de versions</see>
      </indexterm>Subversion est un logiciel libre de la catégorie
      <firstterm>systèmes de gestion de versions</firstterm>
      (<foreignphrase>VCS</foreignphrase> en anglais, pour
      <foreignphrase>Version Control System</foreignphrase>). Cela
      signifie que Subversion gère les fichiers et les répertoires,
      ainsi que les changements dont ils font l'objet, à travers le
      temps. Vous pouvez ainsi retrouver d'anciennes versions de vos
      données ou parcourir l'historique des changements de vos données.
      Cela fait dire à certains que les systèmes de gestion de versions
      sont en quelque sorte des <quote>machines à remonter le
      temps</quote>.</para>
<!--
    <para>Subversion can operate across networks, which allows it to
      be used by people on different computers.  At some level, the
      ability for various people to modify and manage the same set of
      data from their respective locations fosters collaboration.
      Progress can occur more quickly without a single conduit through
      which all modifications must occur.  And because the work is
      versioned, you need not fear that quality is the trade-off for
      losing that conduit&mdash;if some incorrect change is made to
      the data, just undo that change.</para>
-->
    <para>Subversion peut fonctionner en réseau, ce qui autorise un
      partage des données sur des ordinateurs différents. D'une
      certaine manière, la possibilité pour un groupe de personnes de
      modifier et gérer le même ensemble de données en restant derrière
      son propre poste de travail renforce la collaboration. Le travail
      peut avancer sans nécessiter un circuit unique de validation. Et
      comme ce qui est réalisé est suivi en versions, vous n'avez pas à
      craindre que la disparition du circuit de validation ne se fasse
      au détriment de la qualité&mdash; si de mauvaises données sont
      entrées, vous n'avez qu'à annuler la modification.</para>

<!--
    <para>
      <indexterm>
        <primary>software configuration management</primary>
      </indexterm>
      <indexterm>
        <primary>SCM</primary>
        <see>software configuration management</see>
      </indexterm>Some version control systems are
      also <firstterm>software configuration management</firstterm>
      (SCM) systems.  These systems are specifically tailored to
      manage trees of source code and have many features that are
      specific to software development&mdash;such as natively
      understanding programming languages, or supplying tools for
      building software.  Subversion, however, is not one of these
      systems.  It is a general system that can be used to manage
      <emphasis>any</emphasis> collection of files.  For you, those
      files might be source code&mdash;for others, anything from
      grocery shopping lists to digital video mixdowns and
      beyond.</para>
-->
    <para>
      <indexterm>
        <primary>système de gestion de configuration logicielle</primary>
      </indexterm>
      <indexterm>
        <primary>GCL</primary>
        <see>système de gestion de configuration logicielle</see>
      </indexterm>
      <indexterm>
        <primary>SCM</primary>
        <see>système de gestion de configuration logicielle</see>
      </indexterm>
      <indexterm>
        <primary>software configuration management</primary>
        <see>système de gestion de configuration logicielle</see>
      </indexterm>
      Certains systèmes de gestion de versions sont aussi des
      <firstterm>systèmes de gestion de configuration logicielle
      (GCL)</firstterm>. Ces systèmes sont spécialement conçus pour
      gérer des arborescences de code source et possèdent de nombreuses
      fonctionnalités propres au développement logiciel, comme la
      reconnaissance des langages de programmation ou des outils de
      construction/compilation de logiciel. Subversion, cependant, ne
      fait pas partie de cette catégorie. C'est un système généraliste
      qui peut être utilisé pour gérer <emphasis>n'importe quel
      ensemble</emphasis> de fichiers. Pour vous ce peut être du
      code source&nbsp;; pour d'autres cela va de la liste de courses
      jusqu'aux vidéos des vacances et bien au-delà.
    </para>


    <!-- =============================================================== -->
    <sect2 id="svn.intro.righttool">
<!--
      <title>Is Subversion the Right Tool?</title>

-->
      <title>Subversion est-il l'outil approprié&nbsp;?</title>

<!--
      <para>If you're a user or system administrator pondering the use
        of Subversion, the first question you should ask yourself is:
        "Is this the right tool for the job?"  Subversion is a
        fantastic hammer, but be careful not to view every problem as
        a nail.</para>
-->
      <para>Si, en tant qu'utilisateur ou administrateur système, vous
        réfléchissez à la mise en place de Subversion, la première
        question à vous poser est&nbsp;:<quote>est-ce bien l'outil
        adéquat pour ce que je veux faire&nbsp;?</quote> Subversion est
        un marteau fantastique, mais il faut faire attention à ne pas
        assimiler tout problème à un clou.</para>

<!--
      <para>As a first step, you need to decide if version control in
        general is required for your purposes.  If you need to archive
        old versions of files and directories, possibly resurrect
        them, and examine logs of how they've changed over time, then
        version control tools can do that.  If you need to collaborate
        with people on documents (usually over a network) and keep
        track of who made which changes, a version control tool can do
        that, too.  In fact, this is why version control tools such as
        Subversion are so often used in software development
        environments&mdash;working on a development team is an
        inherently social activity where changes to source code files
        are constantly being discussed, made, evaluated, and even
        sometimes unmade.  Version control tools facilitate that sort
        of collaboration.</para>
-->

      <para>En premier lieu, vous devez décider si la gestion de
        versions en général répond à votre besoin. Si vous voulez
        archiver de vieilles versions de vos fichiers et dossiers,
        éventuellement de les ressusciter, ou d'examiner les journaux
        détaillant leurs évolutions, les systèmes de gestion de versions
        le font très bien. Si vous avez besoin de travailler
        sur des documents en collaboration avec d'autres personnes
        (habituellement via un réseau) et de conserver la trace de qui a
        apporté quelles modifications, les systèmes de gestion de
        versions font également l'affaire. En fait, c'est pour ces
        raisons que les systèmes de gestion de versions tels que
        Subversion sont souvent utilisés dans des environnements de
        développement logiciel&nbsp;; travailler
        au sein d'une équipe de développement est par nature une
        activité sociale où les modifications au code source sont
        constamment discutées, réalisées, évaluées et parfois retirées.
        Les outils de gestion de versions rendent très facile ce type de
        collaboration.</para>

<!--
      <para>There is cost associated with using version control, too.
        Unless you can outsource the administration of your version
        control system to a third-party, you'll have the obvious costs
        of performing that administration yourself.  When working with
        the data on a daily basis, you won't be able to copy, move,
        rename, or delete files the way you usually do.  Instead,
        you'll have to do all of those things through the version
        control system.</para>
-->
      <para>Bien sûr il existe aussi un coût lié à
        l'utilisation de la gestion de versions. À moins de pouvoir
        externaliser l'administration du système de gestion de versions,
        vous devrez évidemment en assumer l'administration système.
        En travaillant au jour le jour avec les données, vous ne pourrez
        pas copier, déplacer, renommer ou supprimer des fichiers de la
        façon dont vous le faisiez auparavant. À la place, vous devrez
        accomplir ces tâches <foreignphrase>via</foreignphrase>
        Subversion.</para>

<!--
      <para>Even assuming that you are okay with the cost/benefit
        tradeoff afforded by a version control system, you shouldn't
        choose to use one merely because it <emphasis>can</emphasis>
        do what you want.  Consider whether your needs are better
        addressed by other tools.  For example, because Subversion
        replicates data to all the collaborators involved, a common
        misuse is to treat it as a generic distribution system.
        People will sometimes use Subversion to distribute huge
        collections of photos, digital music, or software packages.
        The problem is that this sort of data usually isn't changing
        at all.  The collection itself grows over time, but the
        individual files within the collection aren't being changed.
        In this case, using Subversion is
        <quote>overkill.</quote><footnote><para>Or as a friend puts
        it, <quote>swatting a fly with a
        Buick.</quote></para></footnote> There are simpler tools that
        efficiently replicate data <emphasis>without</emphasis> the
        overhead of tracking changes, such as <command>rsync</command>
        or <command>unison</command>.</para>
-->
      <para>En supposant que cette quantité de travail supplémentaire ne
        vous pose pas de problème, vous devriez quand même vérifier que
        vous n'allez pas utiliser Subversion pour résoudre un problème
        que d'autres outils pourraient résoudre de manière bien plus
        efficace. Par exemple, parce que Subversion fournit une copie
        des données à tous les utilisateurs concernés, une erreur
        courante est de le traiter comme un système de distribution
        générique. Les gens utilisent parfois Subversion pour partager
        d'immenses collections de photos, de musique numérique ou de
        packs logiciels. Le problème est que ce type de donnée ne change
        en général jamais. La collection grandit au fil du temps, mais
        les fichiers individuels à l'intérieur de la collection ne
        changent pas. Dans ce cas, utiliser Subversion est
        <quote>disproportionné</quote>.
        <footnote>
          <para>Ou comme le dit un de mes amis, c'est <quote>tuer les
            mouches à coup de canon</quote>.</para>
        </footnote>
        Il existe des outils plus simples, capables de copier des données
        efficacement <emphasis>sans</emphasis> s'embarrasser de toute la
        gestion du suivi des modifications, tels que
        <command>rsync</command> ou <command>unison</command>.</para>

<!--
      <para>
        <indexterm>
          <primary>version control systems</primary>
          <secondary>centralized</secondary>
        </indexterm>Once you've decided that you need a version
        control solution, you'll find no shortage of available
        options.  When Subversion was first designed and released, the
        predominant methodology of version control
        was <firstterm>centralized version control</firstterm>&mdash;a
        single remote master storehouse of versioned data with
        individual users operating locally against shallow copies of
        that data's version history.  Subversion quickly emerged after
        its initial introduction as the clear leader in this field of
        version control, earning widespread adoption and supplanting
        installations of many older version control systems.  It
        continues to hold that prominent position today.</para>
-->
      <para>
        <indexterm>
          <primary>systèmes de gestion de versions</primary>
          <secondary>centralisés</secondary>
        </indexterm>Une fois que vous avez décidé d'utiliser un système
          de gestion de versions, vous aurez pléthore de choix. Au
          moment où la première version de Subversion a été conçue et
          est sortie, la version prédominante de la gestion de versions
          était la <firstterm>gestion centralisée de
          versions</firstterm>&mdash; un serveur maître distant
          hébergeait les données suivies en versions et les utilisateurs
          travaillaient localement avec des copies dont l'historique
          était restreint. Subversion s'est rapidement imposé lors de
          sa sortie comme le leader incontesté de ce paradigme, étant
          largement adopté et remplaçant de nombreux systèmes de
          conception plus anciennes. Il conserve toujours cette position
          de leader aujourd'hui.</para>

<!--
      <para>
        <indexterm>
          <primary>version control systems</primary>
          <secondary>distributed</secondary>
        </indexterm>
        <indexterm>
          <primary>DVCS</primary>
          <see>version control systems, distributed</see>
        </indexterm>Much has changed since that time, though.  In the
        years since the Subversion project began its life, a newer
        methodology of version control called <firstterm>distributed
        version control</firstterm> has likewise garnered widespread
        attention and adoption.  Tools such as Git
        (<ulink url="http://git-scm.com/" />) and Mercurial
        (<ulink url="http://mercurial-scm.org/" />) have risen
        to the tops of the distributed version control system (DVCS)
        ranks.  Distributed version control harnesses the growing
        ubiquity of high-speed network connections and low storage
        costs to offer an approach which differs from the centralized
        model in key ways.  First and most obvious is the fact that
        there is no remote, central storehouse of versioned data.
        Rather, each user keeps and operates against very
        deep&mdash;complete, in a sense&mdash;local version history
        data stores.  Collaboration still occurs, but is accomplished
        by trading collections of changes made to versioned items
        directly between users' local data stores, not via a
        centralized master data store.  In fact, any semblance of a
        canonical <quote>master</quote> source of a project's
        versioned data is by convention only, a status imputed by
        the various collaborators on that project.</para>
-->
      <para>
        <indexterm>
          <primary>systèmes de gestion de versions</primary>
          <secondary>distribués</secondary>
        </indexterm>
        <indexterm>
          <primary>DVCS</primary>
          <see>systèmes de gestion de versions, distribués</see>
        </indexterm>Beaucoup de choses ont changé depuis ce temps. Dans
        les années qui ont suivi la sortie de Subversion, un nouveau
        concept de gestion de versions, appelé <firstterm>gestion de
        versions distribuée</firstterm>
        (<foreignphrase>DVCS</foreignphrase> en anglais, pour
        <foreignphrase>distributed version control
        system</foreignphrase>), a également suscité beaucoup d'intérêt
        et a largement été adopté. Des outils tels que Git
        (<ulink url="http://git-scm.com/" />) et Mercurial
        (<ulink url="http://mercurial-scm.org/" />) se sont imposés
        dans ce créneau des DVCS. Les systèmes de gestion de versions
        distribués tirent parti du haut débit disponible pour les accès
        au réseau et du faible coût de stockage pour offrir une approche
        différente du modèle centralisé de gestion de versions.
        D'abord, et ce qui est le plus évident, c'est qu'il n'y a plus
        de serveur central hébergeant seul les données suivies en
        versions. Chaque utilisateur conserve dans, et travaille sur, des
        dépôts locaux l'historique (complet dans un sens) des données
        suivies en versions. Le travail collaboratif a toujours lieu, mais
        s'accomplit par l'échange direct entre utilisateurs d'ensembles de
        modifications faites à chacun des éléments suivis en versions,
        sans passer par un serveur central maître. En fait, toute
        déclaration de données <quote>maîtres</quote> d'un projet suivi
        en versions est une pure convention, adoptée par les différents
        collaborateurs à ce projet.</para>

<!--
      <para>There are pros and cons to each version control approach.
        Perhaps the two biggest benefits delivered by the DVCS tools
        are incredible performance for day-to-day operations (because
        the primary data store is locally held) and vastly better
        support for merging between branches (because merge algorithms
        serve as the very core of how DVCSes work at all).  The
        downside is that distributed version control is an inherently
        more complicated model, which can present a non-negligible
        challenge to comfortable collaboration.  Also, DVCS tools do
        what they do well in part because of a certain degree of
        control withheld from the user which centralized systems freely
        offer&mdash;the ability to implement path-based access
        control, the flexibility to update or backdate individual
        versioned data items, etc.  Fortunately, many wise
        organizations have discovered that this needn't be a religious
        debate, and that Subversion and a DVCS tool such as Git can be
        used together harmoniously within the organization, each
        serving the purposes best suited to the tool.</para>
-->
      <para>il existe des avantages et des inconvénients à chacune des
        approches. Les deux principaux bénéfices que l'on peut tirer
        des outils décentralisés sont les incroyables performances des
        opérations quotidiennes (parce que le dépôt des données est
        stocké localement) et une meilleure gestion des fusions entre
        branches (parce que les algorithmes de fusion sont ceux qui
        constituent le cœur même de ce type de logiciel). La contrepartie
        est que ces systèmes possèdent de manière inhérente un modèle de
        gestion plus compliqué, qui peut constituer un frein certain au
        travail collaboratif. Par ailleurs, les DVCS font bien leur
        travail en partie grâce au contrôle délégué à l'utilisateur,
        alors que les systèmes centralisés prennent ce contrôle à leur
        compte &mdash; la possibilité de gérer les accès en fonction du
        chemin dans l'arborescence, la flexibilité pour mettre à jour ou
        recouvrer individuellement des éléments suivis en versions, etc.
        Heureusement, beaucoup de grandes organisations ont convenu que
        le débat n'avait pas à être dogmatique et que Subversion ainsi
        que les DVCS tels que Git peuvent être utilisés harmonieusement
        ensemble dans l'organisation, chacun étant utilisé dans
        l'environnement qui lui convient le mieux.</para>

<!--
      <para>Alas, this book is about Subversion, so we'll not attempt
        a full comparison of Subversion and other tools.  Readers
        empowered to choose their version control system are
        encouraged to research the available options and make the
        determination that works best for themselves and their fellow
        collaborators.  And if, after doing so, Subversion is the
        chosen tool, there's <emphasis>plenty</emphasis> of detailed
        information about how to use it successfully in the chapters
        that follow!</para>
-->
      <para>Hélas, ce livre traite de Subversion, donc nous ne tenterons
        pas de mener une comparaison exhaustive de Subversion avec les
        autres outils. Le lecteur à qui il revient de choisir un système
        de gestion de versions est encouragé à s'enquérir de toutes les
        options qui s'offrent à lui et à choisir l'outil qui convient
        le mieux, à lui et à ses collaborateurs. Et si c'est Subversion
        qui a retenu ses faveurs, ce livre fournit, dans les chapitres
        qui suivent, des <emphasis>myriades</emphasis> d'informations
        détaillées pour conduire avec succès la mise en œuvre de
        Subversion&nbsp;!</para>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.intro.history">

<!--
      <title>Subversion's History</title>
-->
      <title>L'histoire de Subversion</title>

<!--

      <para>
        <indexterm>
          <primary>Subversion</primary>
          <secondary>history of</secondary>
        </indexterm>
        <indexterm>
          <primary>CollabNet</primary>
        </indexterm>In early 2000, CollabNet,
        Inc. (<ulink url="http://www.collab.net"/>) began seeking
        developers to write a replacement for CVS.  CollabNet
        offered<footnote><para>CollabNet Enterprise Edition has since
        been replaced by a new product line called CollabNet
        TeamForge.</para></footnote> a collaboration software suite
        called CollabNet Enterprise Edition (CEE), of which one
        component was version control.  Although CEE used CVS as its
        initial version control system, CVS's limitations were obvious
        from the beginning, and CollabNet knew it would eventually
        have to find something better.  Unfortunately, CVS had become
        the de facto standard in the open source world largely because
        there <emphasis>wasn't</emphasis> anything better, at least
        not under a free license.  So CollabNet determined to write a
        new version control system from scratch, retaining the basic
        ideas of CVS, but without the bugs and misfeatures.</para>

-->
      <para>
        <indexterm>
          <primary>Subversion</primary>
          <secondary>historique de</secondary>
        </indexterm>
        <indexterm>
          <primary>CollabNet</primary>
          </indexterm>Au début des années 2000, CollabNet, Inc.(<ulink
        url="http://www.collab.net"/>) commença à rechercher des
        développeurs pour écrire un remplaçant à CVS. CollabNet
        fournissait <footnote><para>CollabNet Enterprise Edition a depuis
        été remplacé par une nouvelle ligne de produits appelée Collabnet
        TeamForge</para></footnote>
        une suite logicielle collaborative appelée
        <quote>CollabNet Enterprise Edition (CEE)</quote> dont l'un des
        composants est la gestion de versions. Même si CEE utilisait CVS
        comme système de gestion de versions initial, les limitations de
        celui-ci étaient évidentes depuis le début, et CollabNet savait
        qu'il lui faudrait au final trouver quelque chose de mieux.
        Malheureusement, CVS était devenu le standard de fait dans le
        monde du logiciel libre, essentiellement parce
        qu'<emphasis>il n'y avait rien de mieux</emphasis>, en tout cas
        sous licence libre. Donc CollabNet décida d'écrire un nouveau
        système de gestion de versions ex nihilo, en conservant les idées
        de base de CVS, mais sans ses bogues ni ses limitations
        fonctionnelles.</para>

<!--
      <para>In February 2000, they contacted Karl Fogel, the author of
        <citetitle>Open Source Development with CVS</citetitle>
        (Coriolis, 1999), and asked if he'd like to work on this new
        project.  Coincidentally, at the time Karl was already
        discussing a design for a new version control system with his
        friend Jim Blandy.  In 1995, the two had started Cyclic
        Software, a company providing CVS support contracts, and
        although they later sold the business, they still used CVS
        every day at their jobs.  Their frustration with CVS had led
        Jim to think carefully about better ways to manage versioned
        data, and he'd already come up with not only the Subversion
        name, but also the basic design of the Subversion data store.
        When CollabNet called, Karl immediately agreed to work on the
        project, and Jim got his employer, Red Hat Software, to
        essentially donate him to the project for an indefinite period
        of time.  CollabNet hired Karl and Ben Collins-Sussman, and
        detailed design work began in May 2000.  With the help of some
        well-placed prods from Brian Behlendorf and Jason Robbins of
        CollabNet, and from Greg Stein (at the time an independent
        developer active in the WebDAV/DeltaV specification process),
        Subversion quickly attracted a community of active developers.
        It turned out that many people had encountered the same
        frustrating experiences with CVS and welcomed the chance to
        finally do something about it.</para>

-->
      <para>En février 2000, CollabNet contacta Karl Fogel, l'auteur de
        <citetitle>Open Source Development with CVS</citetitle>
        (Coriolis, 1999), et lui demanda s'il aimerait travailler sur ce
        nouveau projet. Il se trouve qu'au même moment Karl ébauchait la
        conception d'un nouveau système de gestion de versions avec son
        ami Jim Blandy. En 1995, ils avaient créé ensemble
        Cyclic Software, une société fournissant des contrats de support
        pour CVS, et bien qu'ils aient plus tard revendu la société, ils
        utilisaient toujours CVS quotidiennement dans leur travail. Leurs
        frustrations à propos de CVS avaient conduit Jim à élaborer
        mentalement de meilleures façons de gérer les données suivies
        en versions.
        Il avait déjà non seulement trouvé le nom de
        <quote>Subversion</quote>, mais aussi les principes de base du
        stockage de données de Subversion. Quand CollabNet les appela,
        Karl accepta immédiatement de travailler sur le projet et Jim
        obtint de son employeur, Red Hat Software, qu'il le délègue au
        projet pour une durée indéterminée. CollabNet embaucha Karl et
        Ben Collins-Sussman, et le travail de conception détaillée
        commença en mai. Grâce à des coups de pouce efficaces de
        Brian Behlendorf et Jason Robbins de CollabNet, et de
        Greg Stein (qui travaillait alors en tant que développeur
        indépendant, et participait aux spécifications du projet
        WebDAV/DeltaV), Subversion attira rapidement une communauté de
        développeurs actifs. Il s'avéra que beaucoup d'entre eux avaient
        ressenti les mêmes frustrations avec CVS et ils saisirent
        l'opportunité de pouvoir enfin y faire quelque chose.</para>

<!--
      <para>The original design team settled on some simple goals.  They
        didn't want to break new ground in version control methodology,
        they just wanted to fix CVS.  They decided that Subversion would
        match CVS's features and preserve the same development model,
        but not duplicate CVS's most obvious flaws.  And although it did
        not need to be a drop-in replacement for CVS, it should be
        similar enough that any CVS user could make the switch with
        little effort.</para>

-->
      <para>L'équipe d'origine se mit d'accord sur quelques objectifs
        simples. Ils ne voulaient pas inventer de nouvelles méthodes de
        gestion de versions, ils voulaient juste corriger ce qui
        n'allait pas dans CVS. Ils décidèrent que Subversion reprendrait
        les  fonctionnalités de CVS et préserverait son modèle de
        développement, mais ne reproduirait pas ses faiblesses les plus
        évidentes. Malgré le fait que Subversion devait pouvoir avoir
        ses propres spécificités, il devait être suffisamment semblable
        à CVS pour que n'importe lequel de ses utilisateurs puisse
        facilement passer à Subversion.</para>

<!--
      <para>After 14 months of coding, Subversion became
        <quote>self-hosting</quote> on August 31, 2001.  That is,
        Subversion developers stopped using CVS to manage Subversion's
        own source code and started using Subversion instead.</para>
-->
      <para>Le 31 août 2001, après 14 mois de codage, Subversion devint
        <quote>auto-hébergeant</quote>. Ce qui veut dire que les
        développeurs de Subversion cessèrent d'utiliser CVS pour gérer
        le propre code source de Subversion et commencèrent à utiliser
        Subversion à la place.</para>

<!--
      <para>
        <indexterm>
          <primary>Apache Subversion</primary>
          <seealso>Subversion</seealso>
        </indexterm>While CollabNet started the project, and still
        funds a large chunk of the work (it pays the salaries of a few
        full-time Subversion developers), Subversion is run like most
        open source projects, governed by a loose, transparent set of
        rules that encourage meritocracy.  In 2009, CollabNet worked
        with the Subversion developers towards the goal of integrating
        the Subversion project into the Apache Software Foundation
        (ASF), one of the most well-known collectives of open source
        projects in the world.  Subversion's technical roots,
        community priorities, and development practices were a perfect
        fit for the ASF, many of whose members were already active
        Subversion contributors.  In early 2010, Subversion was fully
        adopted into the ASF's family of top-level projects, moved its
        web presence to
        <ulink url="http://subversion.apache.org"/>, and was
        rechristened <quote>Apache Subversion</quote>.</para>
-->
      <para>
        <indexterm>
          <primary>Apache Subversion</primary>
          <seealso>Subversion</seealso>
        </indexterm>Bien que CollabNet ait initié le projet et qu'elle
        subventionne encore une grosse partie du travail (en payant
        les salaires complets de quelques développeurs de Subversion),
        Subversion fonctionne comme la plupart des projets de logiciel
        libre, dirigé par un ensemble de règles vagues et transparentes
        qui encouragent la méritocratie. En 2009, Collabnet a travaillé
        avec les développeurs de Subversion pour intégrer le projet dans
        la Apache Software Foundation (ASF), un des regroupement les plus
        mondialement connus de projets de logiciels libres. Les racines
        techniques de Subversion, les priorités de sa communauté et les
        pratiques de développement collaient parfaitement aux de l'ASF,
        dont beaucoup de membres étaient déjà des contributeurs actifs
        à Subversion. Début 2010, Subversion a été complètement adopté
        par la famille des projets phares de l'ASF, a déplacé son point
        d'ancrage sur le Web vers
        <ulink url="http://subversion.apache.org"/>  et a été rebaptisé
        <quote>Apache Subversion</quote>.</para>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.intro.architecture">

<!--
      <title>Subversion's Architecture</title>

-->
      <title>L'architecture de Subversion</title>


<!--
      <para>
        <indexterm>
          <primary>Subversion</primary>
          <secondary>architecture</secondary>
        </indexterm><xref linkend="svn.intro.architecture.dia-1"/>
        illustrates a <quote>mile-high</quote> view of Subversion's
        design.</para>

-->
      <para><indexterm>
          <primary>Subversion</primary>
          <secondary>architecture</secondary>
        </indexterm>La <xref linkend="svn.intro.architecture.dia-1"/>
        donne une <quote>vue d'ensemble</quote> du schéma de conception
        de Subversion.</para>

      <figure id="svn.intro.architecture.dia-1">
<!--
        <title>Subversion's architecture</title>
-->
        <title>L'architecture de Subversion</title>
        <graphic width="5in" depth="6.25in"
                 fileref="images/svn-arch-diagram.png"/>
      </figure>

<!--
      <para>On one end is a Subversion repository that holds all of
        your versioned data.  On the other end is your Subversion
        client program, which manages local reflections of portions of
        that versioned data.  Between these extremes are multiple
        routes through a Repository Access (RA) layer, some of which
        go across computer networks and through network servers which
        then access the repository, others of which bypass the network
        altogether and access the repository directly.</para>

-->
      <para>D'un côté, nous avons un dépôt Subversion qui contient
        toutes vos données suivies en versions. De l'autre côté, il y a
        votre programme client Subversion, qui gère des versions locales
        d'une partie de ces données suivies en versions. Entre ces deux
        extrêmes, il y a des chemins variés utilisant différentes
        couches d'accès au dépôt. Certains de ces chemins passent par
        des réseaux informatiques et des serveurs réseau avant
        d'atteindre le dépôt. D'autres court-circuitent complètement le
        réseau et accèdent directement au dépôt.</para>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.intro.components">

<!--
      <title>Subversion's Components</title>

-->
      <title>Les composantes de Subversion</title>


<!--
      <para>
        <indexterm>
          <primary>Subversion</primary>
          <secondary>components</secondary>
        </indexterm>Subversion, once installed, has a number of
        different pieces.  The following is a quick overview of what
        you get.  Don't be alarmed if the brief descriptions leave you
        scratching your head&mdash;<emphasis>plenty</emphasis> more
        pages in this book are devoted to alleviating that
        confusion.</para>

-->
      <para>
        <indexterm>
          <primary>Subversion</primary>
          <secondary>composants</secondary>
        </indexterm>Une fois installé, Subversion est constitué de
        nombreux composants. Ce qui suit est un survol rapide de ce que
        vous obtenez. Ne vous inquiétez pas si certaines de ces brèves
        descriptions vous laissent dubitatif&nbsp;; ce livre contient
        de <emphasis>nombreuses</emphasis> pages destinées à dissiper
        toute confusion.</para>

      <variablelist>
        <indexterm>
          <primary>svn</primary>
        </indexterm>
        <indexterm>
          <primary>svnversion</primary>
        </indexterm>
        <indexterm>
          <primary>svnlook</primary>
        </indexterm>
        <indexterm>
          <primary>svnadmin</primary>
        </indexterm>
        <indexterm>
          <primary>mod_dav_svn</primary>
        </indexterm>
        <indexterm>
          <primary>svnserve</primary>
        </indexterm>
        <indexterm>
          <primary>svndumpfilter</primary>
        </indexterm>
        <indexterm>
          <primary>svnsync</primary>
        </indexterm>
        <indexterm>
          <primary>svnrdump</primary>
        </indexterm>
        <indexterm>
          <primary>svnmucc</primary>
        </indexterm>

        <varlistentry>
          <term>svn</term>
          <listitem>
<!--
            <para>The command-line client program</para>
-->
            <para>Le programme client texte interactif.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>svnversion</term>
          <listitem>
<!--
            <para>A program for reporting the state (in terms of
              revisions of the items present) of a working copy</para>
-->
            <para>Un programme permettant d'examiner l'état d'une copie
              de travail (en termes de révisions des éléments
              présents).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>svnlook</term>
          <listitem>
<!--
            <para>A tool for directly inspecting a Subversion repository</para>
-->
            <para>Un outil qui permet d'examiner directement un dépôt
              Subversion.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>svnadmin</term>
          <listitem>
<!--
            <para>A tool for creating, tweaking, or repairing a Subversion
              repository</para>
-->
            <para>Un outil destiné à la création, la modification ou la
              réparation d'un dépôt Subversion.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>mod_dav_svn</term>
          <listitem>
<!--
           <para>A plug-in module for the Apache HTTP Server, used to
              make your repository available to others over a
              network</para>
-->
            <para>Un greffon pour le serveur HTTP Apache, utilisé pour
              rendre votre dépôt disponible à d'autres personnes
              à travers un réseau.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>svnserve</term>
          <listitem>
<!--
            <para>A custom standalone server program, runnable as a
              daemon process or invokable by SSH; another way to make
              your repository available to others over a network</para>
-->
            <para>Un serveur autonome créé sur mesure pour Subversion,
              pouvant fonctionner comme un processus démon ou pouvant
              être invoqué par SSH&nbsp;; une autre façon de rendre
              votre dépôt accessible à d'autres personnes à travers un
              réseau.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>svndumpfilter</term>
          <listitem>
<!--
            <para>A program for filtering Subversion repository dump
              streams</para>
-->
            <para>Un programme qui permet de filtrer les flux d'exports
              de l'historique de vos dépôts.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>svnsync</term>
          <listitem>
<!--
            <para>A program for incrementally mirroring one repository
              to another over a network</para>
-->
            <para>Un programme capable de synchroniser de manière
              incrémentale un dépôt avec un autre dépôt à travers un
              réseau.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>svnrdump</term>
          <listitem>
<!--
            <para>A program for performing repository history dumps
              and loads over a network</para>
-->
            <para>Un programme destiné à réaliser des exports et des
              chargements de l'historique d'un dépôt à travers un
              réseau.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>svnmucc</term>
          <listitem>
<!--
            <para>A program for performing multiple repository
              URL-based operations in a single commit and without the
              use of a working copy</para>
-->
            <para>Un programme capable d'effectuer des opérations basées
              sur les URL sur plusieurs dépôts en une seule opération
              et sans avoir besoin de passer par des copies de travail.
            </para>
          </listitem>
        </varlistentry>

      </variablelist>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.intro.whatsnew">

<!--
      <title>What's New in Subversion</title>
-->
      <title>Ce qui a changé dans Subversion</title>

<!--
      <para>
        <indexterm>
          <primary>Subversion</primary>
          <secondary>history of</secondary>
        </indexterm>The first edition of this book was published by
        O'Reilly Media in 2004, shortly after Subversion had reached
        1.0.  Since that time, the Subversion project has continued to
        release new major releases of the software.  Here's a quick
        summary of major new changes since Subversion 1.0.  Note that
        this is not a complete list; for full details, please visit
        Subversion's web site at
        <ulink url="http://subversion.apache.org"/>.</para>
-->
      <para>
        <indexterm>
          <primary>Subversion</primary>
          <secondary>Historique de</secondary>
        </indexterm> La première édition de ce livre a été publiée par
        O'Reilly Media en 2004, peu après que Subversion ait atteint la
        version 1.0. Depuis, le projet Subversion a régulièrement publié
        de nouvelles versions majeures du logiciel. Voici un résumé
        rapide des changements majeurs qui ont eu lieu depuis
        Subversion 1.0. Cette liste n'est pas exhaustive&nbsp;; pour
        tous les détails, merci de vous rendre sur le site web de
        Subversion à l'adresse
        <ulink url="http://subversion.apache.org"/>.</para>

      <variablelist>

        <varlistentry>
<!--
          <term>Subversion 1.1 (September 2004)</term>
-->
          <term>Subversion 1.1 (septembre 2004)</term>
          <listitem>
<!--
            <para>Release 1.1 introduced FSFS, a flat-file repository
              storage option for the repository.  While the Berkeley DB
              backend is still widely used and supported, FSFS has
              since become the default choice for
              newly created repositories due to its low barrier to
              entry and minimal maintenance requirements.  Also in
              this release came the ability to put symbolic links
              under version control, auto-escaping of URLs, and a
              localized user interface.</para>
-->
            <para>En version 1.1 fut introduit FSFS qui permet de
              stocker le dépôt sous forme de fichiers textes. Bien que
              les bases Berkeley DB soient toujours très utilisées et
              supportées par la communauté, FSFS est devenu le choix par
              défaut pour la création de nouveaux dépôts, grâce à sa
              prise en main facile et à ses besoins minimes en termes de
              maintenance. Dans cette version ont également été ajoutées
              les possibilités de suivre en versions des liens
              symboliques et de prendre en compte automatiquement des
              URL, ainsi qu'une interface utilisateur régionalisée.
              </para>
          </listitem>
        </varlistentry>

        <varlistentry>
<!--
          <term>Subversion 1.2 (May 2005)</term>
-->
          <term>Subversion 1.2 (mai 2005)</term>
          <listitem>
<!--
            <para>Release 1.2 introduced the ability to create
              server-side locks on files, thus serializing commit
              access to certain resources.  While Subversion is still
              a fundamentally concurrent version control system,
              certain types of binary files (e.g. art assets)
              cannot be merged together.  The locking feature fulfills
              the need to version and protect such resources.  With
              locking also came a complete WebDAV auto-versioning
              implementation, allowing Subversion repositories to be
              mounted as network folders.  Finally, Subversion 1.2
              began using a new, faster binary-differencing algorithm
              to compress and retrieve old versions of files.</para>
-->
            <para>La version 1.2 introduisit la possibilité de créer des
              verrous sur les fichiers côté serveur, sérialisant ainsi
              l'accès des propagations à certaines ressources. Bien que
              Subversion soit toujours fondamentalement un système de
              gestion de versions à accès simultanés, certains types de
              fichiers binaires (par exemple des images de synthèse) ne
              peuvent pas être fusionnés. Le mécanisme de verrouillage
              répond aux besoins de suivi en versions et de protection
              de ces données. Avec le verrouillage est également apparue
              une implémentation complète de l'auto-versionnement WebDAV,
              permettant aux dépôts Subversion d'être accessibles sous
              la forme de dossiers partagés sur le réseau. Enfin,
              Subversion 1.2 commença à utiliser un nouvel algorithme
              plus rapide de différenciation de données binaires pour
              compresser et récupérer de vieilles versions de fichiers.
              </para>
          </listitem>
        </varlistentry>

        <varlistentry>
<!--
          <term>Subversion 1.3 (December 2005)</term>
-->
          <term>Subversion 1.3 (décembre 2005)</term>
          <listitem>
<!--
            <para>Release 1.3 brought path-based authorization
              controls to the <command>svnserve</command> server,
              matching a feature formerly found only in the Apache
              server.  The Apache server, however, gained some new
              logging features of its own, and Subversion's API
              bindings to other languages also made great leaps
              forward.</para>
-->
            <para>Avec la version 1.3, le serveur
              <command>svnserve</command> sait contrôler les droits en
              fonction des chemins, ce qui correspondait à une
              fonctionnalité existant uniquement à cette époque dans le
              serveur Apache. Cependant, le serveur Apache bénéficia
              lui-même de nouvelles fonctionnalités de journalisation et
              les API de connexion entre Subversion et d'autres langages
              firent également de grands pas en avant.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
<!--
          <term>Subversion 1.4 (September 2006)</term>
-->
          <term>Subversion 1.4 (septembre 2006)</term>
          <listitem>
<!--
            <para>Release 1.4 introduced a whole new
              tool&mdash;<command>svnsync</command>&mdash;for doing
              one-way repository replication over a network.  Major
              parts of the working copy metadata were revamped to no
              longer use XML (resulting in client-side speed gains),
              while the Berkeley DB repository backend gained the
              ability to automatically recover itself after a server
              crash.</para>
-->
            <para>En version 1.4 fut introduit un tout nouvel outil,
            <command>svnsync</command>, permettant la réplication, dans
            une seule direction, d'un dépôt via le réseau. Des parties
            importantes des métadonnées des copies de travail changèrent
            de format afin de ne plus utiliser XML (avec pour
            conséquence des gains en rapidité côté client), tandis que
            le gestionnaire de base de données des dépôts Berkeley DB
            acquit la capacité de rétablir les bases automatiquement
            suite à un crash du serveur.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
<!--
          <term>Subversion 1.5 (June 2008)</term>
-->
          <term>Subversion 1.5 (juin 2008)</term>
          <listitem>
<!--
            <para>Release 1.5 took much longer to finish than prior
              releases, but the headliner feature was gigantic:
              semi-automated tracking of branching and merging.  This
              was a huge boon for users, and pushed Subversion far
              beyond the abilities of CVS and into the ranks of
              commercial competitors such as Perforce and ClearCase.
              Subversion 1.5 also introduced a bevy of other
              user-focused features, such as interactive resolution of
              file conflicts, sparse checkouts, client-side
              management of changelists, powerful new syntax for
              externals definitions, and SASL authentication support for
              the <command>svnserve</command> server.</para>
-->
            <para>Sortir la version 1.5 prit beaucoup plus de temps que
              les autres versions, mais la fonctionnalité vedette était
              titanesque&nbsp;: le suivi semi-automatisé des branches et
              des fusions. Ce fut une véritable bénédiction pour les
              utilisateurs et propulsa Subversion bien au-delà des
              possibilités de CVS, le plaçant à la hauteur de ses
              concurrents commerciaux tels que Perforce et Clearcase. En
              version 1.5 tout un tas d'autres fonctionnalités axées sur
              l'utilisateur furent introduites, telles que la résolution
              interactive des conflits entre fichiers, les extractions
              partielles, la gestion des listes de modifications côté
              client, une nouvelle syntaxe très puissante pour les
              définitions externes et le support par le serveur
              <command>svnserve</command> de l'authentification par
              SASL.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
<!--
          <term>Subversion 1.6 (March 2009)</term>
-->
          <term>Subversion 1.6 (mars 2009)</term>
          <listitem>
<!--
            <para>Release 1.6 continued to make branching and merging
              more robust by introducing tree conflicts, and offered
              improvements to several other existing features: more
              interactive conflict resolution options; de-telescoping
              and outright exclusion support for sparse checkouts;
              file-based externals definitions; and operational
              logging support for <command>svnserve</command> similar
              to what <command>mod_dav_svn</command> offered.  Also,
              the command-line client introduced a new shortcut syntax
              for referring to Subversion repository URLs.</para>
-->
            <para>La version 1.6 renforça la gestion des branches et des
              fusions en introduisant la notion de conflits
              d'arborescences. Elle améliorait également plusieurs
              fonctionnalités déjà existantes&nbsp;: davantage d'options
              pour la résolution interactive des conflits,
              support d'exclusions pour les extractions partielles,
              définitions externes à partir de fichiers, journalisation
              opérationnelle pour la commande <command>svnserve</command>
              similaire à celle fournie par
              <command>mod_dav_svn</command>. Par ailleurs, le  client
              texte interactif introduisit de nouveaux raccourcis
              pour référencer les URL de dépôts Subversion.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
<!--
          <term>Subversion 1.7 (October 2011)</term>
-->
          <term>Subversion 1.7 (octobre 2011)</term>
          <listitem>
<!--
            <para>Release 1.7 was primarily a delivery vehicle for two
              big plumbing overhauls of existing Subversion
              components.  The largest and most impactful of these was
              the so-called <quote>WC-NG</quote>&mdash;a complete
              rewrite of the <command>libsvn_wc</command> working copy
              management library.  The second change was the
              introduction of a sleeker HTTP protocol for Subversion
              client/server interaction.  Subversion 1.7 delivered a
              handful of additional features, many bug fixes, and some
              notable performance improvements, too.</para>
-->
            <para>La version 1.7 constituait en premier lieu un moyen
              de livrer deux grosses évolutions à des composants un peu
              vieillissants de Subversion. Celle ayant le plus d'impact
              s'appelait <quote>WC-NG</quote>&nbsp;; une réécriture
              complète de la bibliothèque <command>libsvn_wc</command>
              de gestion des copies de travail. La deuxième évolution
              était l'introduction d'un protocole HTTP plus léger
              pour l'interaction entre le client et le serveur
              Subversion. Subversion 1.7 offrait une poignée de
              nouvelles fonctionnalités, beaucoup de résolutions de bugs
              et aussi quelques notables améliorations de
              performances.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
<!--
          <term>Subversion 1.8 (June 2013)</term>
-->
          <term>Subversion 1.8 (juin 2013)</term>
          <listitem>
<!--
            <para>In release 1.8, Subversion's client now tracks
              renamed files and directories more thoroughly, and
              its <command>svn merge</command> command has grown
              intelligent enough to make the
              <option>- -reintegrate</option> option unnecessary.
              Certain new versioned property values can be inherited
              from parent directories.  That feature now allows a
              repository to dictate default values for automatic
              property settings and ignorable file patterns, bringing
              consistency across the user base of that repository in a
              way which previously had to be managed socially.  There
              is also a new built-in command-line file merge tool for
              interactive conflict resolution.  As always, Subversion
              1.8 includes many additional features, defect fixes, and
              improvements in behavior and performance.</para>
-->
            <para>Dans la version 1.8, le client Subversion améliore le suivi
              des renommages de fichiers et de répertoires&nbsp;; la commande
              <command>svn merge</command> a suffisamment muri pour rendre
              l'utilisation de l'option <option>--reintegrate</option>
              inutile. Certaines nouvelles valeurs de propriétés suivies en
              versions peuvent être héritées des dossiers parents. Cette
              fonctionnalité permet maintenant de fixer des valeurs par
              défaut pour la définition des propriétés automatiques et les
              motifs de noms de fichiers à ignorer, ce qui apporte de la
              cohérence pour tous les utilisateurs d'un dépôt alors que,
              auparavant, cela devait se gérer de manière collaborative. Il
              intègre aussi un nouvel outil de fusion en ligne de commande
              pour la résolution interactive des conflits. Et comme toujours,
              Subversion 1.8 inclut beaucoup  de fonctionnalités
              supplémentaires, la résolution de bugs et des améliorations
              dans le comportement et les performances.</para>
          </listitem>
        </varlistentry>

      </variablelist>

    </sect2>

  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.preface.audience">

<!--
    <title>Audience</title>

-->
    <title>Public visé</title>

<!--
    <para>This book is written for computer-literate folk who want to
      use Subversion to manage their data.  While Subversion runs on a
      number of different operating systems, its primary user
      interface is command-line-based.  That command-line tool
      (<command>svn</command>), and some additional auxiliary
      programs, are the focus of this book.</para>
-->

    <para>Ce livre est écrit pour les personnes désirant utiliser
      Subversion pour gérer leurs données. Subversion fonctionne sur un
      grand nombre de systèmes d'exploitation et son interface première
      est en ligne de commande. Ce programme (<command>svn</command>) et
      certains programmes auxiliaires sont le sujet de ce livre.</para>

<!--
    <para>For consistency, the examples in this book assume that the reader
      is using a Unix-like operating system and is relatively comfortable
      with Unix and command-line interfaces.  That said, the
      <command>svn</command> program also runs on non-Unix platforms
      such as Microsoft Windows.  With a few minor exceptions, such as
      the use of backward slashes (<literal>\</literal>) instead of
      forward slashes (<literal>/</literal>) for path separators, the
      input to and output from this tool when run on Windows are
      identical to those of its Unix counterpart.</para>

-->
    <para>Par souci de cohérence, les exemples du livre supposent que le
      lecteur utilise un système de type Unix et qu'il est relativement
      à l'aise avec ce système ainsi qu'avec les interfaces en ligne de
      commande. Cela dit, le programme <command>svn</command> fonctionne
      également sur les systèmes qui ne sont pas basés sur Unix, tel que
      Microsoft Windows. Avec quelques petites exceptions, telles que
      l'utilisation d'anti-slashs (<literal>\</literal>) au lieu de
      slashs (<literal>/</literal>) dans les chemins, les entrées et
      sorties de ce programme sous Windows sont identiques à leurs
      équivalentes Unix.</para>
<!--
    <para>Most readers are probably programmers or system
      administrators who need to track changes to source code.  This
      is the most common use for Subversion, and therefore it is the
      scenario underlying all of the book's examples.  But Subversion
      can be used to manage changes to any sort of
      information&mdash;images, music, databases, documentation, and
      so on.  To Subversion, all data is just data.</para>

-->
    <para>La plupart des lecteurs sont probablement des programmeurs ou
      des administrateurs systèmes qui ont besoin de suivre les
      changements faits à du code source. C'est l'utilisation la plus
      courante de Subversion et c'est ce que l'on supposera tout au long
      des exemples du livre. Cependant, Subversion peut être utilisé pour
      gérer les changements pour toutes sortes de données&nbsp;: images,
      musique, bases de données, documentation, etc. Pour
      Subversion, toutes les données sont juste des données.</para>
<!--
    <para>While this book is written with the assumption that the
      reader has never used a version control system, we've also tried
      to make it easy for users of CVS (and other systems) to make a
      painless leap into Subversion.  Special sidebars may mention
      other version control systems from time to time, and
      <xref linkend="svn.forcvs"/> summarizes many of the differences
      between CVS and Subversion.</para>

-->
    <para>Bien que ce livre soit écrit en supposant que le lecteur n'a
      jamais utilisé un système de gestion de versions, nous avons aussi
      essayé de rendre facile le passage de CVS (et autres systèmes) à
      Subversion. De temps en temps, quelques encadrés mentionnent
      d'autres systèmes de gestion de versions et
      l'<xref linkend="svn.forcvs"/>
      résume la plupart des différences entre CVS et Subversion.</para>
<!--
    <para>Note also that the source code examples used throughout the
      book are only examples.  While they will compile with the proper
      compiler incantations, they are intended to illustrate a
      particular scenario and not necessarily to serve as examples of good
      programming style or practices.</para>
-->
    <para>Notez également que les exemples de code source présentés au
      cours du livre ne sont que des exemples. Même s'ils compilent
      avec les commandes de compilation adéquates, ils n'ont pour but
      que d'illustrer une situation particulière et ne sont pas
      nécessairement de bons exemples de style ou techniques de
      programmation.</para>

  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.preface.howread">
<!--
    <title>How to Read This Book</title>
-->
    <title>Comment lire ce livre</title>

<!--
    <para>Technical books always face a certain dilemma: whether to
      cater to <quote>top-down</quote> or to <quote>bottom-up</quote>
      learners.  A top-down learner prefers to read or skim
      documentation, getting a large overview of how the system works;
      only then does she actually start using the software.  A
      bottom-up learner is a <quote>learn by doing</quote>
      person&mdash;someone who just wants to dive into the software
      and figure it out as she goes, referring to book sections when
      necessary.  Most books tend to be written for one type of person
      or the other, and this book is undoubtedly biased toward
      top-down learners.  (And if you're actually reading this
      section, you're probably already a top-down learner yourself!)
      However, if you're a bottom-up person, don't despair.  While the
      book may be laid out as a broad survey of Subversion topics, the
      content of each section tends to be heavy with specific examples
      that you can try-by-doing.  For the impatient folks who just
      want to get going, you can jump right to
      <xref linkend="svn.intro"/>.</para>
-->
    <para>Les manuels techniques doivent toujours faire face au dilemme
      suivant&nbsp;: choisir une approche d'apprentissage
      <firstterm>descendante</firstterm> ou
      <firstterm>ascendante</firstterm> pour le lecteur&nbsp;? Un adepte
      de l'approche descendante préférera lire ou survoler la
      documentation, pour obtenir une vision globale du fonctionnement
      du système&nbsp;; à partir de ce moment seulement, il commence à
      utiliser le logiciel. Un adepte de l'approche ascendante est plus
      un autodidacte, il se jette directement dans le logiciel et en
      comprend au fur et à mesure les fonctionnalités, se référant au
      manuel en tant que de besoin. La plupart des livres sont écrits
      pour un certain type de lecteur et celui-ci est indubitablement
      orienté pour les adeptes de l'approche descendante (d'ailleurs,
      si vous lisez ce chapitre, c'est que vous êtes probablement dans
      cette catégorie&nbsp;!). Mais si vous êtes autodidacte, ne fuyez
      pas. Bien que le livre puisse être vu comme un large survol des
      fonctionnalités de Subversion, le contenu de chaque paragraphe
      est gorgé d'exemples et d'exercices pratiques. Pour les plus
      impatients, rendez-vous directement à l' <xref linkend="svn.intro"/>.</para>

<!--
    <para>Regardless of your learning style, this book aims to be
      useful to people of widely different backgrounds&mdash;from
      those with no previous experience in version control to
      experienced system administrators.  Depending on your own
      background, certain chapters may be more or less important to
      you.  The following can be considered a
      <quote>recommended reading list</quote> for various types of
      readers:</para>
-->
    <para>Quelle que soit votre manière d'apprendre, ce livre se veut
      utile pour des gens ayant des parcours et des compétences très
      variés, depuis le novice en gestion de versions jusqu'à
      l'administrateur système expérimenté. En fonction de votre
      expérience, certains chapitres vous sembleront plus ou moins
      importants. Nous proposons ci-dessous quelques <quote>parcours</quote>
      adaptés à différents types de lecteurs&nbsp;:</para>

    <variablelist>
      <varlistentry>
<!--
        <term>Experienced system administrators</term>
        <listitem>
          <para>The assumption here is that you've probably used
            version control before and are dying to get a
            Subversion server up and running ASAP.
            <xref linkend="svn.reposadmin"/> and
            <xref linkend="svn.serverconfig"/> will show you how to
            create your first repository and make it available over
            the network.  After that's done,
            <xref linkend="svn.tour"/> and
            <xref linkend="svn.forcvs"/> are the fastest routes to
            learning the Subversion client.</para>
        </listitem>
-->
        <term>Administrateur système expérimenté</term>
        <listitem>
          <para>Nous supposons dans ce cas que vous avez déjà utilisé
            un système de gestion de versions et que vous voulez
            monter un serveur Subversion le plus rapidement possible.
            Le <xref linkend="svn.reposadmin"/> et le
            <xref linkend="svn.serverconfig"/> expliquent comment créer
            votre premier dépôt et le mettre à disposition sur le réseau.
            Ceci fait, le <xref linkend="svn.tour"/> et
            l'<xref linkend="svn.forcvs"/> sont le plus court chemin pour
            apprendre à utiliser le client Subversion.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
<!--
        <term>New users</term>
        <listitem>
          <para>Your administrator has probably set up Subversion
            already, and you need to learn how to use the client.  If
            you've never used a version control system, then
            <xref linkend="svn.basic"/> is a vital introduction to the
            ideas behind version control.  <xref linkend="svn.tour"/>
            is a guided tour of the Subversion client.</para>
        </listitem>
-->
        <term>Novice</term>
        <listitem>
          <para>Votre administrateur vient probablement de mettre en
            place Subversion et vous devez apprendre à utiliser le
            client. Si vous n'avez jamais utilisé de système de gestion
            de versions, alors le <xref linkend="svn.basic"/> est une
            introduction indispensable aux concepts de la gestion de
            versions. Le <xref linkend="svn.tour"/> est un tour du
            propriétaire du client Subversion.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
<!--
        <term>Advanced users</term>
        <listitem>
          <para>Whether you're a user or administrator, eventually
            your project will grow larger.  You're going to want to
            learn how to do more advanced things with Subversion, such
            as how to use Subversion's property support
            (<xref linkend="svn.advanced"/>), how to use branches and
            perform merges (<xref linkend="svn.branchmerge"/>), how to
            configure runtime options
            (<xref linkend="svn.customization"/>), and other things.
            These chapters aren't critical at first, but be sure to
            read them once you're comfortable with the basics.</para>
        </listitem>
-->
        <term>Utilisateur avancé</term>
        <listitem>
          <para>Que vous soyez utilisateur ou administrateur, votre
            projet va finir par prendre de l'importance. Il vous faudra
            apprendre comment effectuer des opérations plus pointues
            avec Subversion, comme utiliser des branches ou
            effectuer des fusions (<xref linkend="svn.branchmerge"/>),
            utiliser les propriétés des objets Subversion
            (<xref linkend="svn.advanced"/>), configurer les options
            d'exécution (<xref linkend="svn.customization"/>) et
            d'autres choses encore.
            Ces chapitres ne sont pas indispensables au début, mais
            pensez bien à les lire une fois que vous vous sentirez à
            l'aise avec les bases.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
<!--
        <term>Developers</term>
        <listitem>
          <para>Presumably, you're already familiar with Subversion,
            and now want to either extend it or build new software on
            top of its many APIs.  <xref linkend="svn.developer"/> is
            just for you.</para>
        </listitem>
-->
        <term>Développeur</term>
        <listitem>
          <para>Vous êtes certainement déjà habitué à Subversion et vous
            voulez à présent étendre ses fonctionnalités ou développer
            un nouveau logiciel utilisant ses nombreuses API. Le
            <xref linkend="svn.developer"/> est écrit pour vous.</para>
        </listitem>
      </varlistentry>
    </variablelist>

<!--
    <para>The book ends with reference material&mdash;<xref
      linkend="svn.ref"/> is a reference guide for all Subversion
      commands, and the appendixes cover a number of useful topics.
      These are the chapters you're most likely to come back to
      after you've finished the book.</para>
    </variablelist>
-->

  <para>Le livre se termine par le <xref linkend="svn.ref"/>. C'est le
      guide de référence pour toutes les commandes de Subversion, les
      annexes couvrant certaines notions particulièrement utiles. Ce sont
      certainement les chapitres vers lesquels vous retournerez une fois
      la première lecture terminée.</para>

  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.preface.organization">
<!--
    <title>Organization of This Book</title>
-->
    <title>Organisation de ce livre</title>

<!--
    <para>The chapters that follow and their contents are listed
      here:</para>
-->

    <para>Les chapitres qui suivent, ainsi que leur contenu, sont listés
      ci-dessous&nbsp;:</para>

    <variablelist>

      <varlistentry>
        <term><xref linkend="svn.basic"/></term>
        <listitem>
<!--
          <para>Explains the basics of version control and different
            versioning models, along with Subversion's repository,
            working copies, and revisions.</para>
-->
          <para>Explique les bases de la gestion de versions ainsi que
              les différents modèles associés, les notions de
              dépôts Subversion, de copies de travail et de
              révisions.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><xref linkend="svn.tour"/></term>
        <listitem>
<!--
          <para>Walks you through a day in the life of a Subversion
            user.  It demonstrates how to use a Subversion client to
            obtain, modify, and commit data.</para>
-->
          <para>Une balade dans l'utilisation quotidienne de Subversion.
            Ce chapitre explique comment récupérer, modifier et propager
            des données à l'aide du client Subversion.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><xref linkend="svn.advanced"/></term>
        <listitem>
<!--
          <para>Covers more complex features that regular users will
            eventually come into contact with, such as versioned
            metadata, file locking, and peg revisions.</para>
-->
          <para>Ce chapitre couvre des fonctionnalités plus complexes,
            que les utilisateurs réguliers auront à utiliser un jour,
            comme les métadonnées suivies en versions, le
            verrouillage de fichiers et les piquets de révisions.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><xref linkend="svn.branchmerge"/></term>
        <listitem>
<!--
          <para>Discusses branches, merges, and tagging, including
            best practices for branching and merging, common
            use cases, how to undo changes, and how to easily swing
            from one branch to the next.</para>
-->
          <para>Ce chapitre traite des branches, des fusions et des
            étiquettes, y compris les bonnes pratiques pour la gestion et
            la fusion de branches, des cas d'école, comment revenir en
            arrière sur des modifications et comment passer facilement
            d'une branche à une autre.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><xref linkend="svn.reposadmin"/></term>
        <listitem>
<!--
          <para>Describes the basics of the Subversion repository,
            how to create, configure, and maintain a repository, and
            the tools you can use to do all of this.</para>
-->
          <para>Ce chapitre décrit les bases d'un dépôt Subversion,
              comment le créer, le configurer et en assurer la
              maintenance. Il présente également les outils disponibles
              pour toutes ces actions.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><xref linkend="svn.serverconfig"/></term>
        <listitem>
<!--
          <para>Explains how to configure your Subversion server and
            offers different ways to access your repository:
            <literal>HTTP</literal>, the <literal>svn</literal>
            protocol, and local disk access.  It also covers the details
            of authentication, authorization and anonymous
            access.</para>
-->
          <para>Ce chapitre explique comment configurer votre serveur
            Subversion et présente différentes manières d'accéder à
            votre dépôt&nbsp;: <literal>HTTP</literal>, le protocole
            <literal>svn</literal> et l'accès au disque en local. Il
            couvre aussi l'authentification, les autorisations et les
            accès anonymes.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><xref linkend="svn.customization"/></term>
        <listitem>
<!--
          <para>Explores the Subversion client configuration files,
            the handling of internationalized text, and how to make
            external tools cooperate with Subversion.</para>
-->
          <para>Ce chapitre explore les fichiers de configuration du
            client Subversion, décrit la prise en compte des
            contenus internationaux et montre comment utiliser des
            programmes externes conjointement avec Subversion.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><xref linkend="svn.developer"/></term>
        <listitem>
<!--
          <para>Describes the internals of Subversion, the
            Subversion filesystem, and the working copy
            administrative areas from a programmer's point of view.
            It also demonstrates how to use the public APIs to write a
            program that uses Subversion.</para>
-->
          <para>Ce chapitre décrit l'architecture interne de
            Subversion, le système de fichiers associé et les zones
            administratives des copies de travail, du point de vue du
            programmeur. Il montre comment utiliser les API publiques
            pour écrire un programme qui utilise Subversion.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><xref linkend="svn.ref"/></term>
        <listitem>
<!--
          <para>Explains in great detail every subcommand of
            <command>svn</command>, <command>svnadmin</command>, and
            <command>svnlook</command> with plenty of examples for
            the whole family!</para>
-->
          <para>Ce chapitre explique de manière très détaillée chacune
            des sous-commandes <command>svn</command>,
            <command>svnadmin</command> et <command>svnlook</command>
            avec tout un tas d'exemples pour contenter l'ensemble de la
            famille&nbsp;!</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><xref linkend="svn.intro"/></term>
        <listitem>
<!--
          <para>For the impatient, a whirlwind explanation of how to
            install Subversion and start using it immediately.  You
            have been warned.</para>
-->
          <para>Pour les impatients, l'installation de Subversion et
            son utilisation en moins de deux minutes chrono.
            Vous êtes prévenu.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><xref linkend="svn.forcvs"/></term>
        <listitem>
<!--
          <para>Covers the similarities and differences between
            Subversion and CVS, with numerous suggestions on how to
            break all the bad habits you picked up from years of
            using CVS.  Included are descriptions of Subversion
            revision numbers, versioned directories, offline
            operations, <command>update</command>
            versus <command>status</command>, branches, tags, metadata,
            conflict resolution, and authentication.</para>
-->
          <para>Cette annexe couvre les similitudes et les différences
            entre Subversion et CVS, avec des suggestions pour perdre
            les mauvaises habitudes que vous avez acquises durant des
            années d'utilisation de CVS. Cela comprend les descriptions
            des numéros de révision de Subversion, les répertoires
            suivis en versions, les opérations sans connexion réseau,
            la distinction entre <command>status</command> et
            <command>update</command>, les branches, les étiquettes,
            les métadonnées, la résolution de conflits et
            l'authentification.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><xref linkend="svn.webdav"/></term>
        <listitem>
<!--
          <para>Describes the details of WebDAV and DeltaV and how
            you can configure your Subversion repository to be
            mounted read/write as a DAV share.</para>
-->
          <para>Cette annexe décrit en détail WebDAV et DeltaV&nbsp;;
            elle explique comment configurer votre dépôt Subversion pour
            qu'il puisse être monté en lecture/écriture par des
            clients DAV.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><xref linkend="svn.copyright"/></term>
        <listitem>
<!--
          <para>A copy of the Creative Commons Attribution License,
            under which this book is licensed.</para>
-->
          <para>Cette annexe contient une copie de la
            Licence Creative Commons dont ce livre fait l'objet.</para>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect1>


  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.preface.free">
<!--
    <title>This Book Is Free</title>
-->
    <title>Ce livre est libre</title>

<!--
    <para>This book started out as bits of documentation written by
      Subversion project developers, which were then coalesced into a
      single work and rewritten.  As such, it has always been under a
      free license (see <xref linkend="svn.copyright"/>).  In fact,
      the book was written in the public eye, originally as part of
      the Subversion project itself.  This means two things:</para>
-->
    <para>Ce livre est parti de quelques morceaux de documentation
      écrits par les développeurs du projet Subversion, qui furent
      alors fusionnés en un seul travail et réécrits. En tant que
      tel, il a toujours été sous licence libre
      (cf. l'<xref linkend="svn.copyright"/>). En fait, le livre a été
      écrit sous le regard du public, faisant au départ partie
      intégrante du projet Subversion. Cela veut dire deux
      choses&nbsp;:</para>

    <itemizedlist>
      <listitem>
<!--
        <para>You will always find the latest version of this book in
          the book's own Subversion repository.</para>
-->
        <para>Vous trouverez toujours la version la plus récente de ce
          livre dans le propre dépôt Subversion du livre.</para>
      </listitem>

      <listitem>
<!--
        <para>You can make changes to this book and redistribute it
          however you wish&mdash;it's under a free license.  Your only
          obligation is to maintain proper attribution to the original
          authors.  Of course, we'd much rather you send feedback and
          patches to the Subversion developer community, instead of
          distributing your private version of this book.</para>
-->
        <para>Vous pouvez modifier ce livre et le redistribuer comme
          vous le voulez, il est sous licence libre. Votre seule
          obligation est de conserver correcte l'attribution du
          copyright aux auteurs d'origine. Bien sûr, nous préférerions
          que vous envoyiez vos commentaires et vos correctifs à la
          communauté des développeurs Subversion, plutôt que de
          distribuer votre version privée de ce livre.</para>
      </listitem>
    </itemizedlist>

<!--
    <para>The online home of this book's development and most of the
      volunteer-driven translation efforts regarding it is
      <ulink url="http://svnbook.red-bean.com"/>.  There you can find
      links to the latest releases and tagged versions of the book in
      various formats, as well as instructions for accessing the
      book's Subversion repository (where its DocBook XML source
      code lives).  Feedback is welcomed&mdash;encouraged, even.  Please
      submit all comments, complaints, and patches against the book
      sources to <email>svnbook-dev@red-bean.com</email>.</para>
-->
    <para>Le portail internet de développement de ce livre, et de la
      plupart de ses traductions, est accessible à l'adresse&nbsp;:
      <ulink url="http://svnbook.red-bean.com"/>. Vous y trouverez des
      liens sur les dernières parutions et les versions étiquetées du
      livre dans différents formats, ainsi que des instructions pour
      accéder au dépôt Subversion du livre (où se trouve son code source
      XML DocBook). Vos réactions sont les bienvenues et même
      encouragées. Prière de soumettre tous vos commentaires,
      réclamations et correctifs concernant les sources du livre à
      <email>svnbook-dev@red-bean.com</email>.</para>

  </sect1>

  <!-- O'Reilly put its "Using Code Examples", "Safari Books Online",
       and "How to Contact Us" sections here.  -->

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.preface.acks">
<!--
    <title>Acknowledgments</title>
-->
    <title>Remerciements</title>

<!--
    <para>This book would not be possible (nor very useful) if
      Subversion did not exist.  For that, the authors would like to
      thank Brian Behlendorf and CollabNet for the vision to fund such
      a risky and ambitious new open source project; Jim Blandy for
      the original Subversion name and design&mdash;we love you, Jim;
      and Karl Fogel for being such a good friend and a great
      community leader, in that order.<footnote><para>Oh, and thanks,
      Karl, for being too overworked to write this book
      yourself.</para></footnote></para>
-->

    <para>Ce livre n'aurait pas été possible (ni très utile) si Subversion
      n'existait pas. C'est pourquoi les auteurs tiennent à remercier
      Biran Behlendorf et CollabNet pour avoir vu l'intérêt et avoir osé
      investir dans un nouveau projet de logiciel libre aussi risqué et
      ambitieux&nbsp;; Jim Blandy pour le nom et le design original de
      Subversion, on t'aime Jim&nbsp;; et Karl Fogel pour être, surtout,
      un si bon ami et, ensuite, un grand leader pour la communauté.
      <footnote>
        <para>Et puis merci, Karl, d'être trop occupé pour rédiger ce
          livre toi-même.</para>
      </footnote></para>

<!--
    <para>Thanks to O'Reilly and the team of professional editors who
      have helped us polish this text at various stages of its
      evolution: Chuck Toporek, Linda Mui, Tatiana Apandi, Mary Brady,
      and Mary Treseler.  Your patience and support has been
      tremendous.</para>
-->
    <para>Merci à O'Reilly et aux différents professionnels de
      l'édition qui nous ont aidés à rendre le contenu de ce livre plus
      attrayant à différentes étapes de sa construction&nbsp;:
      Chuck Toporek, Linda Mui, Tatiana Apandi, Mary Brady et
      Mary Treseler. Leur patience et leur soutien ont été
      extraordinaires.</para>

<!--
    <para>Finally, we thank the countless people who contributed to
      this book with informal reviews, suggestions, and patches.  An
      exhaustive listing of those folks' names would be impractical to
      print and maintain here, but may their names live on forever in
      this book's version control history!</para>
-->
    <para>Enfin, nous remercions le nombre incalculable de
      personnes qui ont contribué à ce livre par des relectures
      informelles, des suggestions et des corrections. La liste
      exhaustive de ces personnes serait impossible à imprimer et à
      maintenir ici, mais que leurs noms restent à jamais gravés dans
      l'historique de la gestion de versions de ce livre&nbsp;!</para>

  </sect1>

</preface>

<!--
local variables:
sgml-parent-document: ("book.xml" "chapter")
end:
-->
