<!-- -*- sgml -*- -->

<appendix id="svn.intro">

<!--
  <title>Subversion Quick-Start Guide</title>
-->
  <title>Guide de démarrage rapide avec Subversion</title>


<!--
  <para>If you're eager to get Subversion up and running (and you
    enjoy learning by experimentation), this appendix will show you how
    to create a repository, import code, and then check it back out
    again as a working copy.  Along the way, we give links to the
    relevant chapters of this book.</para>
-->
  <para>Si vous êtes pressé d'installer et d'utiliser Subversion (et que vous
    aimez apprendre en expérimentant), cette annexe vous indique comment
    créer un dépôt, importer votre code puis comment en extraire une copie de
    travail. Tout au long de l'exposé, nous vous fournissons des liens vers
    les chapitres correspondants de ce livre.</para>

  <warning>
<!--
  <para>If you're new to the entire concept of version control or to
    the <quote>copy-modify-merge</quote> model used by both CVS and
    Subversion, you should read <xref linkend="svn.basic"/>
    before going any further.</para>
-->
  <para>Si vous débutez avec les concepts de suivi de versions ou avec le
    modèle <quote>Copier-Modifier-Fusionner</quote> utilisé par CVS et
    Subversion, nous vous conseillons de lire le <xref linkend="svn.basic"/>
    avant d'aller plus loin.</para>
  </warning>


  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.intro.install">

<!--
    <title>Installing Subversion</title>
-->
    <title>Installation de Subversion</title>

<!--
    <para>Subversion is built on a portability layer called
      APR&mdash;the Apache Portable Runtime library.  The APR library
      provides all the interfaces that Subversion needs to function on
      different operating systems: disk access, network access, memory
      management, and so on.
      The abstraction layer provided by APR enables Subversion clients and
      servers to run on any operating system that other APR-based applications
      run on: Windows, Linux, all flavors of BSD, Mac OS X, NetWare, and
      others.</para>
-->
    <para>Subversion est construit sur une couche de portabilité
      appelée APR (<foreignphrase>Apache Portable Runtime</foreignphrase> en
      anglais, pour bibliothèque Apache de portabilité des exécutables).
      Cette bibliothèque APR fournit toutes les interfaces dont Subversion
      a besoin pour fonctionner sur différents systèmes d'exploitation&nbsp;:
      accès aux disques, au réseau, gestion de la mémoire, et bien d'autres
      choses encore. La couche d'abstraction apportée par APR permet aux 
      clients et serveurs Subversion de fonctionner sur tous les systèmes
      d'exploitation sur lesquels fonctionnent les applications utilisant
      l'APR&nbsp;: Windows, Linux, tous les systèmes BSD, Mac OS X, 
      NetWare entre autres.</para>

<!--
    <note>
      <para>Although the APR library is part of the Apache HTTP Server (or,
        <command>httpd</command>), and <command>httpd</command> can be
        configured to serve Subversion repositories, <command>httpd</command>
        is <emphasis>not</emphasis> a required component of a Subversion
        installation.</para>
    </note>
-->
    <note>
      <para>Bien que la bibliothèque APR fasse partie du serveur HTTP Apache
        (la commande <command>httpd</command>) et que <command>httpd</command>
        puisse être utilisée en tant que serveur de dépôts Subversion,
        <command>httpd</command> n'est <emphasis>pas</emphasis> un composant
        indispensable pour une installation de Subversion.</para>
    </note>

<!--
    <para>The easiest way to get Subversion is to download a binary
      package built for your operating system.  Subversion's web site
      (<ulink url="http://subversion.apache.org"/>) often has these
      packages available for download, posted by volunteers.  The site
      usually contains graphical installer packages for users of
      Microsoft operating systems.  If you run a Unix-like operating
      system, you can use your system's native package distribution
      system (RPMs, DEBs, the ports tree, etc.) to get
      Subversion.</para>
-->
    <para>La manière la plus simple d'obtenir Subversion est de télécharger
      un programme précompilé pour votre système d'exploitation. Le site Web
      de Subversion (<ulink url="http://subversion.apache.org"/>) tient à
      disposition de nombreux paquets produits par des volontaires. Le site
      contient généralement des exécutables avec une interface graphique
      d'installation pour les utilisateurs de systèmes Microsoft. Si votre
      système d'exploitation est de type Unix, vous pouvez utiliser le
      gestionnaire de paquets fourni avec votre distribution (RPM, DEB,
      l'arbre des ports, etc.) pour obtenir Subversion.</para>

<!--
    <para>Alternatively, you can build Subversion directly from source
      code, though it's not always an easy task. (If you're not
      experienced at building open source software packages, you're
      probably better off downloading a binary distribution instead!)
      From the Subversion web site, download the latest source code
      release.  After unpacking it, follow the instructions in
      the <filename>INSTALL</filename> file to build it.</para>
-->
    <para>Sinon, vous pouvez aussi compiler Subversion directement
      à partir des sources, bien que ce ne soit pas toujours facile
      (si vous n'avez pas l'habitude de compiler vos logiciels,
      choisissez plutôt de télécharger un paquet précompilé pour votre
      distribution). Sur le site Web de Subversion, téléchargez la
      dernière version du code source. Puis, après l'avoir décompacté,
      suivez les instructions fournies dans le fichier
      <filename>INSTALL</filename> pour la compilation.</para>

<!--
    <para>If you're one of those folks that likes to use bleeding-edge
      software, you can also get the Subversion source code from the
      Subversion repository in which it lives.  Obviously, you'll need
      to already have a Subversion client on hand to do this.  But
      once you do, you can check out a working copy from
      <ulink url="http://svn.apache.org/repos/asf/subversion"
      /><footnote><para>Note that the URL checked out in the example
      ends not with <literal>subversion</literal>, but with a
      subdirectory thereof called <literal>trunk</literal>.  See our
      discussion of Subversion's branching and tagging model for the
      reasoning behind this.</para></footnote>:</para>
-->
    <para>Si vous êtes de ceux qui aiment avoir la toute dernière version des
      logiciels, vous pouvez aussi obtenir le code source de Subversion
      depuis le dépôt Subversion. Évidemment, il faudra pour y parvenir que
      vous disposiez déjà d'un client Subversion&hellip; Mais, si c'est le
      cas, vous pouvez extraire une copie de travail du dépôt contenant le
      code source de Subversion à l'adresse
      <ulink url="http://svn.apache.org/repos/asf/subversion"/><footnote>
        <para>Notez que l'URL que l'on extrait dans cet exemple ne se
          termine pas par <literal>subversion</literal>, mais par un
          sous-répertoire nommé <literal>trunk</literal>. Reportez-vous
          à notre discussion sur le modèle de gestion des branches de
          Subversion pour en comprendre la raison.</para>
      </footnote>&nbsp;:</para>

    <informalexample>
      <screen>
$ svn checkout http://svn.apache.org/repos/asf/subversion/trunk subversion
A    subversion/HACKING
A    subversion/INSTALL
A    subversion/README
A    subversion/autogen.sh
A    subversion/build.conf
&hellip;
</screen>
    </informalexample>

<!--
    <para>The preceding command will create a working copy of the
      latest (unreleased) Subversion source code into a subdirectory
      named <filename>subversion</filename> in your current working
      directory.  You can adjust that last argument as you see fit.
      Regardless of what you call the new working copy directory,
      though, after this operation completes, you will now have the
      Subversion source code.  Of course, you will still need to fetch
      a few helper libraries (apr, apr-util, etc.)&mdash;see the
      <filename>INSTALL</filename> file in the top level of the
      working copy for details.</para>
-->
    <para>La commande précédente crée une copie de travail de la dernière
      version (non officielle) du code source de Subversion dans un
      sous-répertoire appelé <filename>subversion</filename> de votre
      répertoire de travail courant. Vous pouvez modifier le dernier
      argument à votre convenance. Indépendamment du nom que vous donnez
      au répertoire contenant la nouvelle copie de travail, une fois
      cette opération terminée, vous aurez à votre disposition le code
      source de Subversion. Bien sûr, il vous faudra encore récupérer
      quelques autres bibliothèques (apr, apr-util, etc.)&mdash; consultez
      le fichier <filename>INSTALL</filename> dans le répertoire racine
      de la copie de travail pour plus de détails.</para>

  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.intro.quickstart">

<!--
    <title>High-Speed Tutorial</title>
-->
    <title>Tutoriel rapide</title>

    <blockquote>
<!--
      <para><quote>Please make sure your seat backs are in their full,
        upright position and that your tray tables are stored.  Flight
        attendants, prepare for take-off&hellip;.</quote></para>
        </blockquote>
-->
      <para><quote>Vérifiez que le dossier de votre siège est relevé, que
        votre ceinture est correctement bouclée et que la tablette devant
        vous est rangée et verrouillée. Personnel de cabine, attention au
        décollage&hellip;</quote></para>
        </blockquote>

<!--
    <para>What follows is a quick tutorial that walks you through some
      basic Subversion configuration and operation.  When you finish
      it, you should have a general understanding of Subversion's
      typical usage.</para>
-->
    <para>Ce qui suit est un bref tutoriel qui couvre quelques opérations
      élémentaires, ainsi que la configuration de base de Subversion. Une
      fois que vous l'aurez terminé, vous devriez avoir une compréhension
      globale de la façon dont Subversion peut être utilisé.</para>

    <note>
<!--
      <para>The examples used in this appendix assume that you have
        <command>svn</command>, the Subversion command-line client,
        and <command>svnadmin</command>, the administrative tool,
        ready to go on a Unix-like operating system.  (This tutorial
        also works at the Windows command-line prompt, assuming you
        make some obvious tweaks.)  We also assume you are using
        Subversion 1.2 or later (run <userinput>svn - -version</userinput>
        to check).</para>
-->
      <para>Les exemples utilisés dans cette annexe supposent que vous
        disposez de <command>svn</command> (le client en ligne de commande
        de Subversion) et de <command>svnadmin</command> (l'outil
        d'administration) prêts à l'emploi sur un système de type Unix
        (ce tutoriel fonctionne également en ligne de commande sous
        Windows, sous réserve de quelques adaptations triviales). Nous
        supposons également que vous utilisez la version 1.2 ou ultérieure
        de Subversion (tapez <userinput>svn --version</userinput>
        pour vous en assurer).</para>
    </note>

<!--
    <para>Subversion stores all versioned data in a central
      repository.  To begin, create a new repository:</para>
-->
    <para>Subversion stocke toutes les données suivies en versions dans un
      dépôt central. Pour commencer, créez un nouveau dépôt&nbsp;:</para>

    <informalexample>
<!--
      <screen>
$ cd /var/svn
$ svnadmin create repos
$ ls repos
conf/  dav/  db/  format  hooks/  locks/  README.txt
$
</screen>
-->
      <screen>
$ cd /var/svn
$ svnadmin create depot
$ ls depot
conf/  dav/  db/  format  hooks/  locks/  README.txt
</screen>
    </informalexample>

<!--
    <para>This command creates a Subversion repository in the directory
      <filename>/var/svn/repos</filename>, creating
      the <filename>repos</filename> directory itself if it doesn't
      already exist.  This directory contains (among other things) a
      collection of database files.  You won't see your versioned
      files if you peek inside.  For more information about repository
      creation and maintenance, see
      <xref linkend="svn.reposadmin"/>.</para>
-->
    <para>Cette commande crée un nouveau dépôt Subversion dans le répertoire
      <filename>/var/svn/depot</filename>, en créant le répertoire
      <filename>depot</filename> s'il n'existe pas déjà. Ce répertoire
      contient (entre autres choses) un ensemble de fichiers constituant une
      base de données. Vous ne verrez pas vos fichiers suivis en versions si
      vous examinez le contenu de ces fichiers. Pour plus d'informations sur
      la création et la maintenance des dépôts, consultez le
      <xref linkend="svn.reposadmin"/>.</para>

<!--
    <para>Subversion has no concept of a <quote>project.</quote> The
      repository is just a virtual versioned filesystem, a large tree
      that can hold anything you wish.  Some administrators prefer to
      store only one project in a repository, and others prefer to
      store multiple projects in a repository by placing them into
      separate directories.  We discuss the merits of each approach
      in <xref linkend="svn.reposadmin.projects.chooselayout"/>.
      Either way, the repository manages only files and directories,
      so it's up to humans to interpret particular directories as
      <quote>projects.</quote>  So while you might see references to
      projects throughout this book, keep in mind that we're only ever
      talking about some directory (or collection of directories) in
      the repository.</para>
-->
    <para>Dans Subversion, il n'existe pas de concept de
      <quote>projet</quote>. Le dépôt est juste un système de fichiers
      virtuel suivi en versions, une arborescence qui peut contenir tout ce
      que vous voulez. Certains administrateurs préfèrent ne stocker qu'un
      seul projet par dépôt, d'autres préfèrent stocker plusieurs projets
      par dépôt en les plaçant dans des répertoires distincts. Les mérites
      de chacune de ces approches sont discutés dans
      <xref linkend="svn.reposadmin.projects.chooselayout"/>. De toute façon,
      le dépôt ne fait que gérer des fichiers et des répertoires, c'est donc
      aux humains de faire le lien entre répertoires et
      <quote>projets</quote>. Ainsi, bien que vous trouverez mention de
      projets dans ce livre, gardez en mémoire que nous ne parlons jamais que
      d'un répertoire (ou d'un ensemble de répertoires) du dépôt.</para>

<!--
    <para>In this example, we assume you already have some sort
      of project (a collection of files and directories) that you wish
      to import into your newly created Subversion repository.  Begin
      by organizing your data into a single directory called
      <filename>myproject</filename> (or whatever you wish).  For
      reasons explained in <xref linkend="svn.branchmerge"/>, your
      project's tree structure should contain three top-level
      directories named <filename>branches</filename>,
      <filename>tags</filename>, and <filename>trunk</filename>.  The
      <filename>trunk</filename> directory should contain all of your
      data, and the <filename>branches</filename> and
      <filename>tags</filename> directories should be empty:</para>
-->
    <para>Dans cet exemple, nous supposons que vous avez déjà une sorte de
      projet (c'est-à-dire un ensemble de fichiers et de répertoires) que
      vous voulez importer dans votre dépôt Subversion tout neuf.
      Commencez par organiser vos données dans un répertoire unique appelé
      <filename>mon-projet</filename> (ou quoi que ce soit d'autre). Pour
      des raisons que nous expliquons au
      <xref linkend="svn.branchmerge"/>, la structure de votre
      arborescence doit contenir trois répertoires à la racine&nbsp;:
      <filename>branches</filename>, <filename>tags</filename>, et
      <filename>trunk</filename>. Le répertoire <filename>trunk</filename>
      doit contenir toutes vos données et les répertoires
      <filename>branches</filename> et <filename>tags</filename>
      doivent être vides&nbsp;:</para>

    <informalexample>
<!--
      <literallayout>
/tmp/
   myproject/
      branches/
      tags/
      trunk/
         foo.c
         bar.c
         Makefile
         &hellip;
</literallayout>
-->
      <literallayout>
/tmp/
   mon-projet/
      branches/
      tags/
      trunk/
         machin.c
         truc.c
         Makefile
         &hellip;
</literallayout>
    </informalexample>

<!--
    <para>The <filename>branches</filename>, <filename>tags</filename>,
      and <filename>trunk</filename> subdirectories aren't actually
      required by Subversion.  They're merely a popular convention
      that you'll most likely want to use later on.</para>
-->
    <para>Les sous-répertoires <filename>branches</filename>,
      <filename>tags</filename> et <filename>trunk</filename>
      ne sont pas réellement requis par Subversion. Ils font simplement
      partie des conventions d'utilisation que vous voudrez certainement
      suivre par la suite. </para>

<!--
    <para>Once you have your tree of data ready to go, import it into
      the repository with the <command>svn import</command> command
      (see <xref linkend="svn.tour.importing"/>):</para>
-->
    <para>Une fois l'arborescence de vos données prête, importez-la dans
      le dépôt avec la commande <command>svn import</command> (reportez-vous
      à <xref linkend="svn.tour.importing"/>)&nbsp;:</para>

    <informalexample>
<!--
      <screen>
$ svn import /tmp/myproject file:///var/svn/repos/myproject \
      -m "initial import"
Adding         /tmp/myproject/branches
Adding         /tmp/myproject/tags
Adding         /tmp/myproject/trunk
Adding         /tmp/myproject/trunk/foo.c
Adding         /tmp/myproject/trunk/bar.c
Adding         /tmp/myproject/trunk/Makefile
&hellip;
Committed revision 1.
$
</screen>
-->
    <screen>
$ svn import /tmp/mon-projet file:///var/svn/depot/mon-projet \
             -m "Import initial"
Ajout          /tmp/mon-projet/branches
Ajout          /tmp/mon-projet/tags
Ajout          /tmp/mon-projet/trunk
Ajout          /tmp/mon-projet/trunk/Makefile
Ajout          /tmp/mon-projet/trunk/machin.c
Ajout          /tmp/mon-projet/trunk/truc.c
&hellip;
Révision 1 propagée.
$
</screen>
    </informalexample>

<!--
    <para>Now the repository contains this tree of data.  As mentioned
      earlier, you won't see your files by directly peeking into the
      repository;  they're all stored within a database.  But the
      repository's imaginary filesystem now contains a top-level
      directory named <filename>myproject</filename>, which in turn
      contains your data.</para>
-->
    <para>À présent, le dépôt contient cette arborescence de données. Comme
      indiqué précédemment, vous ne verrez pas vos fichiers directement en
      regardant dans le dépôt&nbsp;: ils sont stockés dans un magasin de
      données. Mais le système de fichiers imaginaire du dépôt contient
      désormais un répertoire racine appelé <filename>mon-projet</filename>,
      qui à son tour contient vos données.</para>

<!--
    <para>Note that the original <filename>/tmp/myproject</filename>
      directory is unchanged; Subversion is unaware of it.  (In fact,
      you can even delete that directory if you wish.)  To
      start manipulating repository data, you need to create a new
      <quote>working copy</quote> of the data, a sort of private
      workspace.  Ask Subversion to <quote>check out</quote> a working
      copy of the <filename>myproject/trunk</filename> directory in
      the repository:</para>
-->
    <para>Notez que le répertoire original
      <filename>/tmp/mon-projet</filename> n'a pas été modifié&nbsp;;
      Subversion ignore tout de son existence (en fait, vous pouvez même le
      supprimer si vous voulez). Pour commencer à manipuler les données du
      dépôt, vous devez créer une nouvelle <quote>copie de travail</quote>
      des données, une sorte d'espace de travail privé. Demandez à Subversion
      de vous <quote>extraire</quote> une copie de travail du répertoire
      <filename>mon-projet/trunk</filename> du dépôt&nbsp;:</para>

    <informalexample>
<!--
      <screen>
$ svn checkout file:///var/svn/repos/myproject/trunk myproject
A    myproject/foo.c
A    myproject/bar.c
A    myproject/Makefile
&hellip;
Checked out revision 1.
$
</screen>
-->
    <screen>
$ svn checkout file:///var/svn/depot/mon-projet/trunk monprojet
A  monprojet/Makefile
A  monprojet/machin.c
A  monprojet/truc.c
&hellip;
Révision 1 extraite.
</screen>
    </informalexample>

<!--
    <para>Now you have a personal copy of part of the repository in a
      new directory named <filename>myproject</filename>.  You can edit
      the files in your working copy and then commit those changes
      back into the repository.</para>
-->
    <para>À présent, vous disposez d'une copie personnelle d'une partie
      du dépôt, située dans un nouveau répertoire appelé
      <filename>monprojet</filename>. Vous pouvez éditer les fichiers
      dans votre copie de travail puis propager ces changements vers le
      dépôt.</para>

    <itemizedlist>
      <listitem>
<!--
        <para>Enter your working copy and edit a file's
          contents.</para>
-->
        <para>Entrez dans le répertoire de votre copie de travail et
          éditez le contenu d'un fichier&nbsp;;</para>
      </listitem>
      <listitem>
<!--
        <para>Run <userinput>svn diff</userinput> to see unified diff
          output of your changes.</para>
-->
        <para>lancez la commande <userinput>svn diff</userinput> pour
          obtenir la liste des différences que vos modifications ont
          engendrée&nbsp;;</para>
      </listitem>
      <listitem>
<!--
        <para>Run <userinput>svn commit</userinput> to commit the new
          version of your file to the repository.</para>
-->
        <para>lancez la commande <userinput>svn commit</userinput> pour
          propager la nouvelle version de votre fichier vers le
          dépôt&nbsp;;</para>
      </listitem>
      <listitem>
<!--
        <para>Run <userinput>svn update</userinput> to bring your working
          copy <quote>up to date</quote> with the repository.</para>
-->
        <para>lancez la commande <userinput>svn update</userinput> pour
          <quote>mettre à jour</quote> votre copie de travail à partir
          du dépôt.</para>
      </listitem>
    </itemizedlist>

<!--
    <para>For a full tour of all the things you can do with your
      working copy, read <xref linkend="svn.tour"/>.</para>
-->
    <para>Pour une description complète de ce que vous pouvez faire avec
      votre copie de travail, reportez-vous au
      <xref linkend="svn.tour"/>.</para>

<!--
    <para>At this point, you have the option of making your repository
      available to others over a network.  See <xref
      linkend="svn.serverconfig"/> to learn about the different sorts of
      server processes available and how to configure them.</para>
-->
    <para>Dès lors, vous pouvez mettre votre dépôt à disposition sur le
      réseau. Consultez le <xref linkend="svn.serverconfig"/> pour découvrir
      les différents serveurs disponibles et la manière de les
      configurer.</para>

    <!-- ### TODO: Let's make this into a full tutorial, rather than
             simply referring off to other sections. ### -->

  </sect1>


</appendix>

<!--
local variables:
sgml-parent-document: ("book.xml" "appendix")
end:
-->
