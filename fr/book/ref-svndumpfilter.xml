<!-- -*- sgml -*- -->

<reference id="svn.ref.svndumpfilter">
<!--
  <title>svndumpfilter Reference&mdash;Subversion History Filtering</title>
-->

  <title>guide de référence de svndumpfilter&nbsp;: outil de filtrage de
    l'historique de Subversion</title>

  <partintro>

<!--
    <para><command>svndumpfilter</command> is a command-line utility
      for removing history from a Subversion dump file by either
      excluding or including paths beginning with one or more named
      prefixes.  For details, see
      <xref linkend="svn.reposadmin.maint.tk.svndumpfilter"/>.</para>
-->
    <para><command>svndumpfilter</command> est un utilitaire en ligne de
      commande pour supprimer une partie de l'historique dans un fichier
      dump, soit en excluant, soit en ne gardant que, des chemins commençant
      par une ou plusieurs racines spéficiées. Pour plus de détails,
      référez-vous à
      <xref linkend="svn.reposadmin.maint.tk.svndumpfilter"/>.</para>

<!--
    <para>Options in <command>svndumpfilter</command> are global, just
      as they are in <command>svn</command> and
      <command>svnadmin</command>:</para>
-->
    <para>Les options de <command>svndumpfilter</command> sont globales, de
      la même manière que pour les commandes <command>svn</command> et
      <command>svnadmin</command>&nbsp;:</para>

    <variablelist id="svn.ref.svndumpfilter.sw">
<!--
      <title>svndumpfilter Options</title>
-->
      <title>Options de svndumpfilter</title>

      <varlistentry id="svn.ref.svndumpfilter.sw.drop_empty_revs">
        <term><option>--drop-empty-revs</option></term>
        <listitem>
<!--
          <para>If the current filtering invocation causes any revision to be
            empty (i.e., the revision causes no change to the repository),
            removes these revisions from the final dump file.
          </para>
-->
          <para>En cas de filtrage, supprimer toutes les révisions vides
            (c'est-à-dire celles qui ne modifient pas le dépôt) du flux dump
            résultant.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svndumpfilter.sw.drop_all_empty_revs">
        <term><option>--drop-all-empty-revs</option></term>
        <listitem>
<!--
          <para>Removes all empty revisions found in the dumpstream from the
            final dump file (except revision 0).</para>
-->
          <para>Supprimer toutes les révisions vides trouvées dans le flux
            dump (sauf la révision 0).</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svndumpfilter.sw.pattern">
        <term><option>--pattern</option></term>
        <listitem>
<!--
          <para>Treat the path prefixes provided to the filtering
            commands as file glob patterns rather than explicit path
            substrings.</para>
-->
          <para>Traiter les préfixes de chemins fournis à la commande de
            filtrage comme des motifs de recherche plutôt que comme des
            chemins explicites.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svndumpfilter.sw.renumber_revs">
        <term><option>--renumber-revs</option></term>
        <listitem>
<!--
          <para>Renumbers revisions that remain after
            filtering.</para>
-->
          <para>Renuméroter les révisions qui restent après le
            filtrage.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svndumpfilter.sw.skip_missing_merge_sources">
        <term><option>--skip-missing-merge-sources</option></term>
        <listitem>
<!--
          <para>Skips merge sources that have been removed as part of
            the filtering.  Without this
            option, <command>svndumpfilter</command> will exit with
            an error if the merge source for a retained path is
            removed by filtering.</para>
-->
          <para>Omettre les sources fusionnées qui ont été supprimées par le
            filtrage. Sans cette option, <command>svndumpfilter</command>
            termine avec une erreur si l'origine d'une fusion a été supprimée
            alors que le chemin fusionné a été gardé par le filtrage.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svndumpfilter.sw.preserve_revprops">
        <term><option>--preserve-revprops</option></term>
        <listitem>
<!--
          <para>If all nodes in a revision are removed by filtering
            and <option>- -drop-empty-revs</option> is not passed,
            the default behavior of <command>svndumpfilter</command>
            is to remove all revision properties except for the date
            and the log message (which will merely indicate that the
            revision is empty).  Passing this option will preserve
            existing revision properties (which may or may not make
            sense since the related content is no longer present in
            the dump file).</para>
-->
          <para>Si tous les noeuds d'une révision sont supprimés par le
            filtrage et que l'option <option>--drop-empty-revs</option> n'est
            pas spécifiée, le comportement par défaut de
            <command>svndumpfilter</command> consiste à supprimer toutes les
            propriétés de révision sauf la date et l'entrée du journal (qui
            indiquera simplement que la révision est vide). Spécifier cette
            option préserve les propriétés de révision (ce qui peut avoir du
            sens ou pas puisque les modifications afférentes ne figureront
            plus dans le flux dump).</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svndumpfilter.sw.targets">
<!--
        <term><option>- -targets</option> <replaceable>FILENAME</replaceable></term>
-->
        <term><option>--targets</option> <replaceable>NOM_FICHIER</replaceable></term>
        <listitem>
<!--
          <para>Instructs <command>svndumpfilter</command> to read
            additional path prefixes&mdash;one per line&mdash;from
            the file located at <replaceable>FILENAME</replaceable>.
            This is especially useful for complex filtering
            operations which require more prefixes than the
            operating system allows to be specified on a single
            command line.</para>
-->
          <para>Lire les préfixes de chemins contenus dans le fichier
            <replaceable>NOM_FICHIER</replaceable> (un préfixe par ligne).
            Cette option est particulièrement utile dans les filtrages
            complexes qui demandent davantage de préfixes que ce qu'autorise
            le système d'exploitation dans une seule ligne de
            commande.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svndumpfilter.sw.quiet">
        <term><option>--quiet</option></term>
        <listitem>
<!--
          <para>Does not display filtering statistics.</para>
-->
          <para>Ne pas afficher les statistiques de filtrage.</para>
        </listitem>
      </varlistentry>

    </variablelist>

  </partintro>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svndumpfilter.commands.c.exclude">

    <indexterm>
      <primary>svndumpfilter</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>sous-commandes</secondary>
      <tertiary>exclude</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svndumpfilter exclude</refname>
<!--
      <refpurpose>Filter out nodes with given prefixes from the dump stream.</refpurpose>
-->
      <refpurpose>Exclure du flux dump résultant les chemins
        spécifiés.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
<!--
      <para><literal>svndumpfilter exclude PATH_PREFIX...</literal></para>
-->
      <para><literal>svndumpfilter exclude PRÉFIXE...</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
      <title>Description</title>

<!--
      <para>This can be used to exclude nodes that begin with one or
        more <replaceable>PATH_PREFIX</replaceable>es from a
        filtered dump file.</para>
-->
      <para>Cette commande exclut du flux dump les chemins qui commencent par
        le ou les <replaceable>PRÉFIXE</replaceable> passés en
        paramètres.</para>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
      <title>Options</title>

      <informalexample>
        <screen>
<xref linkend="svn.ref.svndumpfilter.sw.drop_empty_revs" />
<xref linkend="svn.ref.svndumpfilter.sw.drop_all_empty_revs" />
<xref linkend="svn.ref.svndumpfilter.sw.pattern" />
<xref linkend="svn.ref.svndumpfilter.sw.preserve_revprops" />
<xref linkend="svn.ref.svndumpfilter.sw.quiet" />
<xref linkend="svn.ref.svndumpfilter.sw.renumber_revs" />
<xref linkend="svn.ref.svndumpfilter.sw.skip_missing_merge_sources" />
<xref linkend="svn.ref.svndumpfilter.sw.targets" />
</screen>
      </informalexample>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Exemples</title>

<!--
      <para>If we have a dump file from a repository with a number
        of different picnic-related directories in it, but we want
        to keep everything <emphasis>except</emphasis>
        the <filename>sandwiches</filename> part of the
        repository, we'll exclude only that path:</para>
-->
      <para>Nous avons un fichier dump issu d'un dépôt qui contient un
        certain nombre de répertoires concernant des piques-niques et nous
        voulons garder tout <emphasis>sauf</emphasis> la partie relative à
        <filename>sandwichs</filename> de ce dépôt. Nous excluons uniquement
        ce chemin&nbsp;:</para>

      <informalexample>
<!--
        <screen>
$ svndumpfilter exclude sandwiches &lt; dumpfile &gt; filtered-dumpfile
Excluding prefixes:
   '/sandwiches'

Revision 0 committed as 0.
Revision 1 committed as 1.
Revision 2 committed as 2.
Revision 3 committed as 3.
Revision 4 committed as 4.

Dropped 1 node(s):
   '/sandwiches'
$
</screen>
-->
        <screen>
$ svndumpfilter exclude sandwichs &lt; fichier-dump &gt; fichier-dump-filtré
Exclusion des préfixes :
   '/sandwichs'

Révision 0 propagée en 0
Révision 1 propagée en 1
Révision 2 propagée en 2
Révision 3 propagée en 3
Révision 4 propagée en 4

1 nœud éliminé :
   '/sandwichs'
$
</screen>
      </informalexample>

<!--
      <para>Beginning in Subversion 1.7,
        <command>svndumpfilter</command> can optionally treat
        the <replaceable>PATH_PREFIX</replaceable>s not merely as
        explicit substrings, but as file patterns instead.  So,
        for example, if you wished to filter out paths which ended
        with <filename>.OLD</filename>, you would do the
        following:</para>
-->
      <para>Depuis Subversion 1.7, <command>svndumpfilter</command> peut
        traiter l'argument <replaceable>PRÉFIXE</replaceable> non
        seulement comme une sous-chaîne ordinaire mais aussi en tant que
        motif de fichiers. Ainsi, par exemple, si vous voulez exclure les
        chemins qui se terminent par <filename>.OLD</filename>, vous pouvez
        entrer la commande suivante&nbsp;:</para>

      <informalexample>
<!--
        <screen>
$ svndumpfilter exclude - -pattern "*.OLD" &lt; dumpfile &gt; filtered-dumpfile
Excluding prefix patterns:
   '/*.OLD'

Revision 0 committed as 0.
Revision 1 committed as 1.
Revision 2 committed as 2.
Revision 3 committed as 3.
Revision 4 committed as 4.

Dropped 3 node(s):
   '/condiments/salt.OLD'
   '/condiments/pepper.OLD'
   '/toppings/cheese.OLD'
$
</screen>
-->
        <screen>
$ svndumpfilter exclude --pattern "*.OLD" &lt; fichier-dump &gt; fichier-dump-filtré
Exclusion des motifs de préfixes :
   '/*.OLD'

Révision 0 propagée en 0
Révision 1 propagée en 1
Révision 2 propagée en 2
Révision 3 propagée en 3
Révision 4 propagée en 4

3 nœuds éliminés :
   '/condiments/sel.OLD'
   '/condiments/poivre.OLD'
   '/garniture/fromage.OLD'
$
</screen>
      </informalexample>

    </refsect1>
  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svndumpfilter.commands.c.include">

    <indexterm>
      <primary>svndumpfilter</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>sous-commandes</secondary>
      <tertiary>include</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svndumpfilter include</refname>
<!--
      <refpurpose>Filter out nodes without given prefixes from
        dump stream.</refpurpose>
-->
      <refpurpose>Exclure du flux dump résultant tous les chemins qui ne sont
        pas spécifiés.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
<!--
      <para><literal>svndumpfilter include PATH_PREFIX...</literal></para>
-->
      <para><literal>svndumpfilter include PRÉFIXE...</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
      <title>Description</title>

<!--
      <para>Can be used to include nodes that begin with one or
        more <replaceable>PATH_PREFIX</replaceable>es in a
        filtered dump file (thus excluding all other paths).</para>
-->
      <para>Cette commande ne retient dans le flux dump que les chemins qui
        commencent par le ou les <replaceable>PRÉFIXE</replaceable> passés en
        paramètres (excluant de fait tous les autres chemins).</para>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
      <title>Options</title>

      <informalexample>
        <screen>
<xref linkend="svn.ref.svndumpfilter.sw.drop_empty_revs" />
<xref linkend="svn.ref.svndumpfilter.sw.drop_all_empty_revs" />
<xref linkend="svn.ref.svndumpfilter.sw.pattern" />
<xref linkend="svn.ref.svndumpfilter.sw.preserve_revprops" />
<xref linkend="svn.ref.svndumpfilter.sw.quiet" />
<xref linkend="svn.ref.svndumpfilter.sw.renumber_revs" />
<xref linkend="svn.ref.svndumpfilter.sw.skip_missing_merge_sources" />
<xref linkend="svn.ref.svndumpfilter.sw.targets" />
</screen>
      </informalexample>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Example</title>
-->
      <title>Exemples</title>

<!--
      <para>If we have a dump file from a repository with a number of
        different picnic-related directories in it, but want to
        keep only the <filename>sandwiches</filename> part of the
        repository, we'll include only that path:</para>
-->
      <para>Nous avons un fichier dump issu d'un dépôt qui contient un
        certain nombre de répertoires concernant des piques-niques et nous
        voulons garder <emphasis>uniquement</emphasis> la partie relative à
        <filename>sandwichs</filename> de ce dépôt. Nous allons inclure
        uniquement ce chemin&nbsp;:</para>

      <informalexample>
<!--
        <screen>
$ svndumpfilter include sandwiches &lt; dumpfile &gt; filtered-dumpfile
Including prefixes:
   '/sandwiches'

Revision 0 committed as 0.
Revision 1 committed as 1.
Revision 2 committed as 2.
Revision 3 committed as 3.
Revision 4 committed as 4.

Dropped 12 node(s):
   '/condiments'
   '/condiments/pepper'
   '/condiments/pepper.OLD'
   '/condiments/salt'
   '/condiments/salt.OLD'
   '/drinks'
   '/snacks'
   '/supplies'
   '/toppings'
   '/toppings/cheese'
   '/toppings/cheese.OLD'
   '/toppings/lettuce'
$
</screen>
-->
        <screen>
$ svndumpfilter include sandwichs &lt; fichier-dump &gt; fichier-dump-filtré
Inclusion des préfixes :
   '/sandwichs'

Revision 0 propagée en 0
Revision 1 propagée en 1
Revision 2 propagée en 2
Revision 3 propagée en 3
Revision 4 propagée en 4

12 nœuds éliminés :
   '/condiments'
   '/condiments/poivre'
   '/condiments/poivre.OLD'
   '/condiments/sel'
   '/condiments/sel.OLD'
   '/boissons'
   '/encas'
   '/fournitures'
   '/garnitures'
   '/garnitures/fromage'
   '/garnitures/fromage.OLD'
   '/garnitures/laitue'
$
</screen>

      </informalexample>

<!--
      <para>Beginning in Subversion 1.7,
        <command>svndumpfilter</command> can optionally treat
        the <replaceable>PATH_PREFIX</replaceable>s not merely as
        explicit substrings, but as file patterns instead.  So,
        for example, if you wished to include only paths which ended
        with <filename>ks</filename>, you would do the
        following:</para>
-->
      <para>Depuis Subversion 1.7, <command>svndumpfilter</command> peut
        traiter l'argument <replaceable>PRÉFIXE</replaceable> non
        seulement comme une sous-chaîne ordinaire mais aussi en tant que
        motif de fichiers. Ainsi, par exemple, si vous voulez n'inclure que
        les chemins qui se terminent par <filename>as</filename>, vous pouvez
        entrer la commande suivante&nbsp;:</para>

      <informalexample>
<!--
        <screen>
$ svndumpfilter include - -pattern "*ks" &lt; dumpfile &gt; filtered-dumpfile
Including prefix patterns:
   '/*ks'

Revision 0 committed as 0.
Revision 1 committed as 1.
Revision 2 committed as 2.
Revision 3 committed as 3.
Revision 4 committed as 4.

Dropped 11 node(s):
   '/condiments'
   '/condiments/pepper'
   '/condiments/pepper.OLD'
   '/condiments/salt'
   '/condiments/salt.OLD'
   '/sandwiches'
   '/supplies'
   '/toppings'
   '/toppings/cheese'
   '/toppings/cheese.OLD'
   '/toppings/lettuce'
$
</screen>
-->
        <screen>
$ svndumpfilter include --pattern "*ks" &lt; fichier-dump &gt; fichier-dump-filtré
Inclusion des motifs de préfixes :
   '/*as'

Revision 0 propagée en 0
Revision 1 propagée en 1
Revision 2 propagée en 2
Revision 3 propagée en 3
Revision 4 propagée en 4

11 nœuds éliminés :
   '/condiments'
   '/condiments/poivre'
   '/condiments/poivre.OLD'
   '/condiments/sel'
   '/condiments/sel.OLD'
   '/boissons'
   '/fournitures'
   '/garnitures'
   '/garnitures/fromage'
   '/garnitures/fromage.OLD'
   '/garnitures/laitue'
$
</screen>
      </informalexample>

    </refsect1>
  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svndumpfilter.commands.c.help">

    <indexterm>
      <primary>svndumpfilter</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>sous-commandes</secondary>
      <tertiary>help</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svndumpfilter help</refname>
<!--
      <refpurpose>Help!</refpurpose>
-->
      <refpurpose>À l'aide&nbsp;!</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
<!--
      <para><literal>svndumpfilter help [SUBCOMMAND...]</literal></para>
-->
      <para><literal>svndumpfilter help [SOUS_COMMANDE...]</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
      <title>Description</title>

<!--
      <para>Displays the help message
        for <command>svndumpfilter</command>.  Unlike other help
        commands documented in this chapter, there is no witty
        commentary for this help command.  The authors of this
        book deeply regret the omission.</para>
-->
      <para>Afficher le message d'aide pour <command>svndumpfilter</command>.
        Contrairement aux autres commandes d'aide documentées dans ce
        chapitre, il n'y a pas de commentaire spirituel pour cette commande.
        Les auteurs de ce livre sont vraiment désolés pour cette grave
        lacune.</para>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
      <title>Options</title>
<!--
      <para>None</para>
-->
      <para>Aucune</para>
    </refsect1>

  </refentry>

</reference>

<!--
local variables:
sgml-parent-document: ("book.xml" "reference")
end:
-->
