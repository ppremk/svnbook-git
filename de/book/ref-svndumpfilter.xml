<!-- -*- sgml -*- -->

<reference id="svn.ref.svndumpfilter">
<!--
  <title>svndumpfilter Reference&mdash;Subversion History Filtering</title>
-->
  <title>svndumpfilter-Referenz &ndash; Filterung der Subversion-Historie</title>

  <partintro>
<!--
    <para><command>svndumpfilter</command> is a command-line utility
      for removing history from a Subversion dump file by either
      excluding or including paths beginning with one or more named
      prefixes.  For details, see
      <xref linkend="svn.reposadmin.maint.tk.svndumpfilter"/>.</para>
-->
    <para><command>svndumpfilter</command> ist ein
      Kommandozeilenwerkzeug zum Entfernen von Geschichtsdaten aus
      einer Subversion-Auszugsdatei, indem Pfade mit einem oder
      mehreren Präfixen entweder ein- oder ausgeschlossen werden. Für
      Details siehe
      <xref linkend="svn.reposadmin.maint.tk.svndumpfilter"/>.</para>


<!--
    <para>Options in <command>svndumpfilter</command> are global, just
      as they are in <command>svn</command> and
      <command>svnadmin</command>:</para>
-->
    <para>Optionen für <command>svndumpfilter</command> sind global,
      genauso wie bei <command>svn</command> und
      <command>svnadmin</command>:</para>

    <variablelist id="svn.ref.svndumpfilter.sw">
      <title>svndumpfilter Options</title>

      <varlistentry id="svn.ref.svndumpfilter.sw.drop_empty_revs">
        <term><option>--drop-empty-revs</option></term>
        <listitem>
<!--
          <para>If the current filtering invocation causes any revision to be
            empty (i.e., the revision causes no change to the repository),
            removes these revisions from the final dump file.
          </para>
-->
          <para>Falls der aktuelle Aufruf des Filterns dazu führen sollte, dass
            irgendwelche Revisionen leer sein sollten (d.h., die
            Revision  führt zu keinerlei Änderungen im Projektarchiv),
            werden diese Revisionen aus der endgültigen Auszugsdatei
            entfernt.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svndumpfilter.sw.drop_all_empty_revs">
        <term><option>--drop-all-empty-revs</option></term>
        <listitem>
<!--
          <para>Removes all empty revisions found in the dumpstream from the
            final dump file (except revision 0).</para>
-->
          <para>Entfernt alle leeren Revisionen im Auszugsstrom aus der endgültigen
            Auszugsdatei (außer Revision 0).</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svndumpfilter.sw.pattern">
        <term><option>--pattern</option></term>
        <listitem>
<!--
          <para>Treat the path prefixes provided to the filtering
            commands as file glob patterns rather than explicit path
            substrings.</para>
-->
          <para>Die Pfad-Präfixe zu den Filterbefehlen sollen als
            Dateinamensmuster behandelt werden, anstatt
            ausdrücklicher Pfad-Teilzeichenketten.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svndumpfilter.sw.renumber_revs">
        <term><option>--renumber-revs</option></term>
        <listitem>
<!--
          <para>Renumbers revisions that remain after
            filtering.</para>
-->
          <para>Nach dem Filtern verbliebene Revisionen neu
            nummerieren.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svndumpfilter.sw.skip_missing_merge_sources">
        <term><option>--skip-missing-merge-sources</option></term>
        <listitem>
<!--
          <para>Skips merge sources that have been removed as part of
            the filtering.  Without this
            option, <command>svndumpfilter</command> will exit with
            an error if the merge source for a retained path is
            removed by filtering.</para>
-->
          <para>Überspringt Quellen von Zusammenführungen, die im
            Zuge der Filterung entfernt wurden. Ohne diese Option
            wird sich <command>svndumpfilter</command> mit einer
            Fehlermeldung beenden, falls die Quelle einer
            Zusammenführung auf einen beibehaltenen Pfad durch das
            Filtern entfernt worden ist.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svndumpfilter.sw.preserve_revprops">
        <term><option>--preserve-revprops</option></term>
        <listitem>
<!--
          <para>If all nodes in a revision are removed by filtering
            and <option>- -drop-empty-revs</option> is not passed,
            the default behavior of <command>svndumpfilter</command>
            is to remove all revision properties except for the date
            and the log message (which will merely indicate that the
            revision is empty).  Passing this option will preserve
            existing revision properties (which may or may not make
            sense since the related content is no longer present in
            the dump file).</para>
-->
          <para>Falls alle Knoten einer Revision durch das Filtern
            entfernt werden und die Option
            <option>--drop-empty-revs</option> nicht übergeben wird,
            verhält sich <command>svndumpfilter</command>
            standardmäßig so, dass alle Revisions-Eigenschaften außer
            dem Datum und der Protokollnachricht entfernt werden
            (was lediglich darauf hindeutet, dass die Revision leer
            ist). Wird diese Option übergeben, werden bestehende
            Revisions-Eigenschaften beibehalten (was mehr oder weniger
            sinnvoll sein kann, da der hiermit verbundene Inhalt
            sich nicht mehr in der Auszugsdatei befindet).</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svndumpfilter.sw.targets">
        <term><option>--targets</option> <replaceable>FILENAME</replaceable></term>
        <listitem>
<!--
          <para>Instructs <command>svndumpfilter</command> to read
            additional path prefixes&mdash;one per line&mdash;from
            the file located at <replaceable>FILENAME</replaceable>.
            This is especially useful for complex filtering
            operations which require more prefixes than the
            operating system allows to be specified on a single
            command line.</para>
-->
          <para>Veranlasst <command>svndumpfilter</command>,
            zusätzliche Pfad-Präfixe &ndash; einen pro Zeile &ndash;
            aus der Datei <replaceable>FILENAME</replaceable> zu
            lesen. Das ist vor allem nützlich für komplexe
            Filteroperationen, die mehr Präfixe erfordern als das
            Betriebssystem auf einer einzelnen Kommandozeile
            zulässt.</para>
        </listitem>
      </varlistentry>
      
      <varlistentry id="svn.ref.svndumpfilter.sw.quiet">
        <term><option>--quiet</option></term>
        <listitem>
<!--
          <para>Does not display filtering statistics.</para>
-->
          <para>Keine Filterstatistiken anzeigen.</para>
        </listitem>
      </varlistentry>

    </variablelist>

  </partintro>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svndumpfilter.commands.c.exclude">

    <indexterm>
      <primary>svndumpfilter</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>exclude</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svndumpfilter exclude</refname>
<!--
      <refpurpose>Filter out nodes with given prefixes from the dump stream.</refpurpose>
-->
      <refpurpose>Knoten mit gegebenen Präfixen aus dem
        Auszugsstrom herausfiltern.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svndumpfilter exclude PATH_PREFIX...</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>This can be used to exclude nodes that begin with one or
        more <replaceable>PATH_PREFIX</replaceable>es from a
        filtered dump file.</para>
-->
      <para>Dies kann verwendet werden, um Knoten aus einer
        gefilterten Auszugsdatei zu verwerfen, die mit einem
        oder mehreren <replaceable>PATH_PREFIX</replaceable>en
        beginnen.</para>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>

      <informalexample>
        <screen>
<xref linkend="svn.ref.svndumpfilter.sw.drop_empty_revs" />
<xref linkend="svn.ref.svndumpfilter.sw.drop_all_empty_revs" />
<xref linkend="svn.ref.svndumpfilter.sw.pattern" />
<xref linkend="svn.ref.svndumpfilter.sw.preserve_revprops" />
<xref linkend="svn.ref.svndumpfilter.sw.quiet" />
<xref linkend="svn.ref.svndumpfilter.sw.renumber_revs" />
<xref linkend="svn.ref.svndumpfilter.sw.skip_missing_merge_sources" />
<xref linkend="svn.ref.svndumpfilter.sw.targets" />
</screen>
      </informalexample>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Beispiel</title>

<!--
      <para>If we have a dump file from a repository with a number
        of different picnic-related directories in it, but we want
        to keep everything <emphasis>except</emphasis>
        the <filename>sandwiches</filename> part of the
        repository, we'll exclude only that path:</para>
-->
      <para>Falls wir eine Auszugsdatei eines Projektarchivs
        haben, das über eine Anzahl verschiedener Verzeichnisse
        mit Bezug zum Picknicken verfügt, wir jedoch alles
        <emphasis>außer</emphasis> dem Teil im Projektarchiv mit
        <filename>sandwiches</filename>  haben möchten, werden wir
        nur diesen Pfad verwerfen:</para>

      <informalexample>
        <screen>
$ svndumpfilter exclude sandwiches &lt; dumpfile &gt; filtered-dumpfile
<!--
Excluding prefixes:
   '/sandwiches'

Revision 0 committed as 0.
Revision 1 committed as 1.
Revision 2 committed as 2.
Revision 3 committed as 3.
Revision 4 committed as 4.

Dropped 1 node(s):
-->
Präfixe ausschließen:
   '/sandwiches'

Revision 0 als 0 übertragen.
Revision 1 als 1 übertragen.
Revision 2 als 2 übertragen.
Revision 3 als 3 übertragen.
Revision 4 als 4 übertragen.

1 Knoten verworfen:
   '/sandwiches'
$
</screen>
      </informalexample>

<!--
      <para>Beginning in Subversion 1.7,
        <command>svndumpfilter</command> can optionally treat
        the <replaceable>PATH_PREFIX</replaceable>s not merely as
        explicit substrings, but as file patterns instead.  So,
        for example, if you wished to filter out paths which ended
        with <filename>.OLD</filename>, you would do the
        following:</para>
-->
      <para>Seit Subversion 1.7 kann
        <command>svndumpfilter</command> optional die
        <replaceable>PATH_PREFIX</replaceable>e nicht bloß als
        ausdrückliche Teilzeichenketten behandeln, sondern
        stattdessen als Dateinamensmuster. Wenn Sie also
        beispielsweise alle Pfade herausfiltern möchten, die auf
        <filename>.OLD</filename> enden, würden Sie folgendes
        machen:</para>

      <informalexample>
        <screen>
$ svndumpfilter exclude --pattern "*.OLD" &lt; dumpfile &gt; filtered-dumpfile <!--
Excluding prefix patterns:
   '/*.OLD'

Revision 0 committed as 0.
Revision 1 committed as 1.
Revision 2 committed as 2.
Revision 3 committed as 3.
Revision 4 committed as 4.

Dropped 3 node(s):
   '/condiments/salt.OLD'
   '/condiments/pepper.OLD'
   '/toppings/cheese.OLD'
-->
Präfixmuster ausschließen:
   '/*.OLD'

Revision 0 als 0 übertragen.
Revision 1 als 1 übertragen.
Revision 2 als 2 übertragen.
Revision 3 als 3 übertragen.
Revision 4 als 4 übertragen.
$
3 Knoten verworfen:
   '/condiments/salt.OLD'
   '/condiments/pepper.OLD'
   '/toppings/cheese.OLD'
</screen>
      </informalexample>

    </refsect1>
  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svndumpfilter.commands.c.include">

    <indexterm>
      <primary>svndumpfilter</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>include</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svndumpfilter include</refname>
<!--
      <refpurpose>Filter out nodes without given prefixes from
        dump stream.</refpurpose>
-->
      <refpurpose>Knoten ohne gegebene Präfixe aus dem
        Auszugsstrom herausfiltern.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svndumpfilter include PATH_PREFIX...</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>Can be used to include nodes that begin with one or
        more <replaceable>PATH_PREFIX</replaceable>es in a
        filtered dump file (thus excluding all other paths).</para>
-->
      <para>Kann verwendet werden, um Knoten aus einer gefilterten
        Auszugsdatei einzuschließen, die mit einem oder mehreren
        <replaceable>PATH_PREFIX</replaceable>en beginnen.</para>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>

      <informalexample>
        <screen>
<xref linkend="svn.ref.svndumpfilter.sw.drop_empty_revs" />
<xref linkend="svn.ref.svndumpfilter.sw.drop_all_empty_revs" />
<xref linkend="svn.ref.svndumpfilter.sw.pattern" />
<xref linkend="svn.ref.svndumpfilter.sw.preserve_revprops" />
<xref linkend="svn.ref.svndumpfilter.sw.quiet" />
<xref linkend="svn.ref.svndumpfilter.sw.renumber_revs" />
<xref linkend="svn.ref.svndumpfilter.sw.skip_missing_merge_sources" />
<xref linkend="svn.ref.svndumpfilter.sw.targets" />
</screen>
      </informalexample>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Example</title>
-->
      <title>Beispiel</title>

<!--
      <para>If we have a dump file from a repository with a number of
        different picnic-related directories in it, but want to
        keep only the <filename>sandwiches</filename> part of the
        repository, we'll include only that path:</para>
-->
      <para>Falls wir eine Auszugsdatei eines Projektarchivs haben, das
        über eine Anzahl verschiedener Verzeichnisse mit Bezug zum
        Picknicken verfügt, wir jedoch nur den Teil im Projektarchiv mit
        <filename>sandwiches</filename>  haben möchten, werden wir
        nur diesen Pfad einschließen:</para>

      <informalexample>
        <screen>
$ svndumpfilter include sandwiches &lt; dumpfile &gt; filtered-dumpfile
<!--
Including prefixes:
   '/sandwiches'

Revision 0 committed as 0.
Revision 1 committed as 1.
Revision 2 committed as 2.
Revision 3 committed as 3.
Revision 4 committed as 4.

Dropped 12 node(s):
-->
Präfixe einschließen:
   '/sandwiches'

Revision 0 als 0 übertragen.
Revision 1 als 1 übertragen.
Revision 2 als 2 übertragen.
Revision 3 als 3 übertragen.
Revision 4 als 4 übertragen.

12 Knoten verworfen:
   '/condiments'
   '/condiments/pepper'
   '/condiments/pepper.OLD'
   '/condiments/salt'
   '/condiments/salt.OLD'
   '/drinks'
   '/snacks'
   '/supplies'
   '/toppings'
   '/toppings/cheese'
   '/toppings/cheese.OLD'
   '/toppings/lettuce'
$
</screen>
      </informalexample>

<!--
      <para>Beginning in Subversion 1.7,
        <command>svndumpfilter</command> can optionally treat
        the <replaceable>PATH_PREFIX</replaceable>s not merely as
        explicit substrings, but as file patterns instead.  So,
        for example, if you wished to include only paths which ended
        with <filename>ks</filename>, you would do the
        following:</para>
-->
      <para>Seit Subversion 1.7 kann
        <command>svndumpfilter</command> optional die
        <replaceable>PATH_PREFIX</replaceable>e nicht bloß als
        ausdrückliche Teilzeichenketten behandeln, sondern
        stattdessen als Dateinamensmuster. Wenn Sie also
        beispielsweise alle Pfade einschließen möchten, die auf
        <filename>ks</filename> enden, würden Sie folgendes
        machen:</para>

      <informalexample>
        <screen>
$ svndumpfilter include --pattern "*ks" &lt; dumpfile &gt; filtered-dumpfile <!--
Including prefix patterns:
   '/*ks'

Revision 0 committed as 0.
Revision 1 committed as 1.
Revision 2 committed as 2.
Revision 3 committed as 3.
Revision 4 committed as 4.

Dropped 11 node(s):
-->
Präfixe einschließen:
   '/*ks'

Revision 0 als 0 übertragen.
Revision 1 als 1 übertragen.
Revision 2 als 2 übertragen.
Revision 3 als 3 übertragen.
Revision 4 als 4 übertragen.

11 Knoten verworfen:
   '/condiments'
   '/condiments/pepper'
   '/condiments/pepper.OLD'
   '/condiments/salt'
   '/condiments/salt.OLD'
   '/sandwiches'
   '/supplies'
   '/toppings'
   '/toppings/cheese'
   '/toppings/cheese.OLD'
   '/toppings/lettuce'
$
</screen>
      </informalexample>

    </refsect1>
  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svndumpfilter.commands.c.help">

    <indexterm>
      <primary>svndumpfilter</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>help</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svndumpfilter help</refname>
<!--
      <refpurpose>Help!</refpurpose>
-->
      <refpurpose>Hilfe!</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svndumpfilter help [SUBCOMMAND...]</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>Displays the help message
        for <command>svndumpfilter</command>.  Unlike other help
        commands documented in this chapter, there is no witty
        commentary for this help command.  The authors of this
        book deeply regret the omission.</para>
-->
      <para>Zeigt die Hilfenachricht für
        <command>svndumpfilter</command> an. Anders als bei
        anderen in diesem Kapitel dokumentierten Hilfebefehlen,
        gibt es für diesen Hilfebefehl keinen geistreichen
        Kommentar. Die Autoren dieses Buchs bedauern diese
        Auslassung zutiefst.</para>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>
<!--
      <para>None</para>
-->
      <para>Keine</para>
    </refsect1>

  </refentry>

</reference>

<!--
local variables: 
sgml-parent-document: ("book.xml" "reference")
end:
-->
