<!-- -*- sgml -*- -->

<reference id="svn.ref.svnadmin">
<!--
  <title>svnadmin Reference&mdash;Subversion Repository Administration</title>
-->
  <title>svnadmin Referenz &ndash; Subversion Projektarchiv-Verwaltung</title>

  <partintro>
<!--
    <para><command>svnadmin</command> is the administrative tool for
      monitoring and repairing your Subversion repository.  For
      detailed information on repository administration, see the maintenance section for <xref
      linkend="svn.reposadmin.maint.tk.svnadmin"/>.</para>
-->
    <para><command>svnadmin</command> ist das Verwaltungswerkzeug zum
      Überwachen und Reparieren Ihres Subversion-Projektarchivs.
      Detaillierte Informationen zur Verwaltung von Projektarchiven finden
      Sie im Abschnitt zur Wartung für <xref
      linkend="svn.reposadmin.maint.tk.svnadmin"/>.</para>

<!--
    <para>Since <command>svnadmin</command> works via direct repository access
      (and thus can only be used on the machine that holds the
      repository), it refers to the repository with a path, not a URL.</para>
-->
    <para>Da <command>svnadmin</command> über direkten
      Projektarchiv-Zugriff arbeitet (und somit nur auf der Maschine
      verwendet werden kann, auf der sich das Projektarchiv befindet),
      greift es auf das Projektarchiv mittels eines Pfades statt eines
      URLs zu.</para>

<!--
    <para>Options in <command>svnadmin</command> are global, just
      as they are in <command>svn</command>:</para>
-->
    <para>Optionen für <command>svmadin</command> sind global, genau
      so wie in <command>svn</command>:</para>

    <variablelist id="svn.ref.svnadmin.sw">
<!--
      <title>svnadmin Options</title>
-->
      <title>svnadmin Optionen</title>

      <varlistentry id="svn.ref.svnadmin.sw.bdb_log_keep">
        <term><option>--bdb-log-keep</option></term>
        <listitem>
<!--
          <para>(Berkeley DB-specific.) Disable automatic log removal
            of database logfiles.  Having these logfiles around
            can be convenient if you need to restore from a
            catastrophic repository failure.</para>
-->
          <para>(Spezifisch für Berkeley DB.) Verhindert, dass
            Protokolldateien der Datenbank automatisch entfernt
            werden. Bei der Wiederherstellung nach einem
            katastrophalen Fehler kann es nützlich sein, auf diese
            Protokolldateien zurückzugreifen.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.bdb_txn_nosync">
        <term><option>--bdb-txn-nosync</option></term>
        <listitem>

<!--
          <para>(Berkeley DB-specific.) Disables fsync when
            committing database transactions.  Used with the
            <command>svnadmin create</command> command to create a
            Berkeley DB-backed repository with
            <literal>DB_TXN_NOSYNC</literal> enabled (which improves
            speed but has some risks associated with it).</para>
-->
          <para>(Spezifisch für Berkeley DB.) Verhindert fsync bei
            der Übergabe von Datenbanktransaktionen. In Verbindung
            mit dem Befehl <command>svnadmin create</command>
            verwendet, um ein Berkeley-DB-basiertes Projektarchiv mit
            aktiviertem <literal>DB_TXN_NOSYNC</literal> zu
            erstellen (was zu mehr Schnelligkeit führt, jedoch
            einige Risiken birgt).</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.bypass_hooks">
        <term><option>--bypass-hooks</option></term>
        <listitem>
<!--
          <para>Bypass the repository hook system.</para>
-->
          <para>Das Hook-System des Projektarchivs umgehen.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.bypass_prop_validation">
        <term><option>--bypass-prop-validation</option></term>
        <listitem>
<!--
          <para>When loading a dump file, disable the logic which
            validates property values.</para>
-->
          <para>Beim Laden einer Auszugsdatei die Validierung von
            Eigenschaftswerten unterbinden.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.clean_logs">
        <term><option>--clean-logs</option></term>
        <listitem>
<!--
          <para>Remove unused Berkeley DB logs.</para>
-->
          <para>Nicht benötigte Protokolldateien von Berkeley DB
            entfernen.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.compatible_version">
        <term><option>--compatible-version</option> <replaceable>ARG</replaceable></term>
        <listitem>
<!--
          <para>Use repository format compatible with Subversion version
            <replaceable>ARG</replaceable>.</para>
-->
          <para>Ein zur Version <replaceable>ARG</replaceable> von
            Subversion kompatibles Projektarchiv-Format
            verwenden.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.config_dir">
        <!-- Only 'svnadmin create' accepts it, and the underlying
             logic doesn't even use it.  Weird. -->
        <term><option>--config-dir</option> <replaceable>DIR</replaceable></term>
        <listitem>
<!--
          <para>Instructs Subversion to read configuration
            information from the specified directory instead of the
            default location (<filename>.subversion</filename> in
            the user's home directory).</para>
-->
          <para>Veranlasst Subversion, Informationen zur
            Konfiguration aus dem angegebenen Verzeichnis zu lesen,
            statt aus dem standardmäßigen Ort
            (<filename>.subversion</filename> im Heimatverzeichnis des
            Anwenders.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.deltas">
        <term><option>--deltas</option></term>
        <listitem>
<!--
          <para>When creating a repository dump file, specify
            changes in versioned properties and file contents as
            deltas against their previous state.</para>
-->
          <para>Bei der Erstellung einer Auszugsdatei sollen die
            Änderungen an versionierten Eigenschaften und
            Dateiinhalten als Deltas zum vorherigen Zustand
            angegeben werden.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.file">
        <term><option>--file</option> (<option>-F</option>) <replaceable>FILENAME</replaceable></term>
        <listitem>
<!--
          <para>Uses the contents of the named file for the
            specified subcommand.</para>
-->
          <para>Verwedet den Inhalt der benannten Datei für den
            angegebenen Unterbefehl.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.fs_type">
        <term><option>--fs-type</option> <replaceable>ARG</replaceable></term>
        <listitem>
<!--
          <para>When creating a repository,
            use <replaceable>ARG</replaceable> as the requested
            filesyste type.  <replaceable>ARG</replaceable> may be
            either <literal>bdb</literal>
            or <literal>fsfs</literal>.</para>
-->
          <para>Bei der Erstellung eines Projektarchivs soll
            <replaceable>ARG</replaceable> als gewünschter
            Dateisystem-Typ verwendet werden. 
            <replaceable>ARG</replaceable> kann entweder
            <literal>bdb</literal> oder <literal>fsfs</literal>
            sein.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.force_uuid">
        <term><option>--force-uuid</option></term>
        <listitem>
<!--
          <para>By default, when loading data into a repository that
            already contains revisions, <command>svnadmin</command>
            will ignore the UUID from the dump stream.  This option
            will cause the repository's UUID to be set to the UUID
            from the stream.</para>
-->
          <para>Beim Laden von Daten in ein Projektarchiv, das bereits
            Revisionen enthält, ignoriert <command>svnadmin</command>
            standardmäßig die UUID aus dem Auszugs-Datenstrom.
            Diese Option führt dazu, dass die UUID des
            Projektarchivs auf die UUID des Datenstroms gesetzt
            wird.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.ignore_uuid">
        <term><option>--ignore-uuid</option></term>
        <listitem>
<!--
          <para>By default, when loading data into an empty repository,
            <command>svnadmin</command> will set the repository's UUID
            to the UUID from the dump stream.  This option will cause
            the UUID from the stream to be ignored.</para>
-->
          <para>Beim Laden von Daten in ein leeres Projektarchivs
            setzt <command>svnadmin</command> standardmäßig die UUID
            des Projektarchivs auf die UUID des Auszugs-Datenstroms.
            Diese Option erzwingt, dass die UUID aus dem Datenstrom
            ignoriert wird,</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.incremental">
        <term><option>--incremental</option></term>
        <listitem>
<!--
          <para>Dump a revision only as a diff against the
            previous revision, instead of the usual
            fulltext.</para>
-->
          <para>Ein Auszug enthält nur die Unterschiede zur
            Vorgängerrevision anstatt des kompletten Textes.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.memory_cache_size">
        <term><option>--memory-cache-size</option> (<option>-M</option>) <replaceable>ARG</replaceable></term>
        <listitem>
<!--
          <para>Configures the size (in Megabytes) of the extra
            in-memory cache used to minimize redundant operations.
            The default value is <literal>16</literal>.  (This cache
            is used for FSFS-backed repositories only.)</para>
-->
          <para>Bestimmt die Größe (in Megabyte) des Extra-Caches im
            Hauptspeicher ein, der verwendet wird, um redundante
            Operationen zu minimieren. Der Standardwert ist
            <literal>16</literal>.  (Dieser Cache wird nur für
            FSFS-basierte Projektarchive verwendet.)</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.parent_dir">
        <term><option>--parent-dir</option> <replaceable>DIR</replaceable></term>
        <listitem>
<!--
          <para>When loading a dump file, root paths at
            <replaceable>DIR</replaceable> instead of
            <filename>/</filename>.</para>
-->
          <para>Beim Laden einer Auszugsdatei werden Pfade unter
            <replaceable>DIR</replaceable> statt unter
            <filename>/</filename> eingehängt.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.pre_1.4_compatible">
        <term><option>--pre-1.4-compatible</option></term>
        <listitem>
<!--
          <para><emphasis>Deprecated</emphasis>.  See option
            <option>- -compatible-version</option>.  When creating a new
            repository, use a format that is compatible with versions of
            Subversion earlier than Subversion 1.4.</para>
-->
          <para><emphasis>Veraltet</emphasis>. Siehe Option
            <option>--compatible-version</option>. Verwendet beim
            Erstellen eines Projektarchiv ein Format, das zu älteren
            Versionen als Subversion 1.4 kompatibel ist.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.pre_1.5_compatible">
        <term><option>--pre-1.5-compatible</option></term>
        <listitem>
<!--
          <para><emphasis>Deprecated</emphasis>.  See option
            <option>- -compatible-version</option>.  When creating a new
            repository, use a format that is compatible with versions of
            Subversion earlier than Subversion 1.5.</para>
-->
          <para><emphasis>Veraltet</emphasis>. Siehe Option
            <option>--compatible-version</option>. Verwendet beim
            Erstellen eines Projektarchiv ein Format, das zu älteren
            Versionen als Subversion 1.5 kompatibel ist.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.pre_1.6_compatible">
        <term><option>--pre-1.6-compatible</option></term>
        <listitem>
<!--
          <para><emphasis>Deprecated</emphasis>.  See option
            <option>- -compatible-version</option>.  When creating a new
            repository, use a format that is compatible with versions of
            Subversion earlier than Subversion 1.6.</para>
-->
          <para><emphasis>Veraltet</emphasis>. Siehe Option
            <option>--compatible-version</option>. Verwendet beim
            Erstellen eines Projektarchiv ein Format, das zu älteren
            Versionen als Subversion 1.5 kompatibel ist.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.revision">
        <term><option>--revision</option> (<option>-r</option>) <replaceable>ARG</replaceable></term>
        <listitem>
<!--
          <para>Specify a particular revision to operate
            on.</para>
-->
          <para>Gibt eine bestimmte Revision an, mit der gearbeitet
            werden soll.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.quiet">
        <term><option>--quiet</option> (<option>-q</option>)</term>
        <listitem>
<!--
          <para>Do not show normal progress&mdash;show only
            errors.</para>
-->
          <para>Zeigt nicht den normalen Fortgang an &mdash;
            lediglich Fehler.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.use_post_commit_hook">
        <term><option>--use-post-commit-hook</option></term>
        <listitem>
<!--
          <para>When loading a dump file, runs the repository's
            <literal>post-commit</literal> hook after finalizing each newly loaded
            revision.</para>
-->
          <para>Beim Laden einer Auszugsdatei wird der
            <literal>post-commit</literal>-Hook des Projektarchivs nach
            Fertigstellung jeder neu geladenen Revision aufgerufen.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.use_post_revprop_change_hook">
        <term><option>--use-post-revprop-change-hook</option></term>
        <listitem>
<!--
          <para>When changing a revision property, runs the
            repository's <literal>post-revprop-change</literal> hook after changing the
            revision property.</para>
-->
          <para>Beim Ändern einer Revisions-Eigenschaft wird
            anschließend der
            <literal>post-revprop-change</literal>-Hook des
            Projektarchivs aufgerufen.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.use_pre_commit_hook">
        <term><option>--use-pre-commit-hook</option></term>
        <listitem>
<!--
          <para>When loading a dump file, runs the repository's
            <literal>pre-commit</literal> hook before finalizing each newly loaded
            revision.  If the hook fails, aborts the commit and
            terminates the load process.</para>
-->
          <para>Beim Laden einer Auszugsdatei wird vor der
            Abschlussbehandlung jeder neu geladenen Revision der
            <literal>pre-commit</literal>-Hook des Projektarchiv
            ausgeführt. Falls der Hook fehlschlägt, wird die
            Übergabe abgebrochen und der Ladeprozess beendet.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.use_pre_revprop_change_hook">
        <term><option>--use-pre-revprop-change-hook</option></term>
        <listitem>
<!--
          <para>When changing a revision property, runs the
            repository's <literal>pre-revprop-change</literal> hook before changing the
            revision property.  If the hook fails, aborts the
            modification and terminates.</para>
-->
          <para>Beim Ändern einer Revisions-Eigenschaft wird
            vorher der <literal>pre-revprop-change</literal>-Hook
            des Projektarchivs aufgerufen. Falls der Hook fehlschlägt,
            wird die Änderung abgebrochen und beendet.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="svn.ref.svnadmin.sw.wait">
        <term><option>--wait</option></term>
        <listitem>
<!--
          <para>For operations which require exclusive repository
            access, wait until the requisite repository lock has
            been obtained instead of immediately erroring out when
            it cannot be.</para>
-->
          <para>Bei Operationen, die einen exklusiven Zugriff auf
            das Projektarchiv erfordern, soll gewartet werden, bis
            die benötigte Sperre des Projektarchivs verfügbar ist,
            anstatt bei Nichtverfügbarkeit sofort mit einer
            Fehlermeldung abzubrechen.</para>
        </listitem>
      </varlistentry>

    </variablelist>
  </partintro>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.crashtest">


    <indexterm>
      <primary>svnadmin</primary>
  <!--
      <secondary>subcommands</secondary>
  -->
      <secondary>Unterbefehle</secondary>
      <tertiary>crashtest</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin crashtest</refname>
<!--
      <refpurpose>Simulate a process that crashes.</refpurpose>
-->
      <refpurpose>Simuliert einen abstürzenden Prozess.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin crashtest REPOS_PATH</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
        <para>Open the repository at <replaceable>REPOS_PATH</replaceable>, then abort, thus
          simulating a process that crashes while holding an open
          repository handle.  This is used for testing automatic
          repository recovery (a new feature in Berkeley DB 4.4).
          It's unlikely that you'll need to run this
          command.</para>
-->
        <para>Öffnet das Projektarchiv bei
          <replaceable>REPOS_PATH</replaceable> und bricht dann
          ab; somit wird ein abstürzender Prozess simuliert, der
          eine offene Verbindung zum Projektarchiv hält. Dieser
          Befehl wird verwendet, um die automatische
          Wiederherstellung des Projektarchivs zu testen (eine
          Neuerung in Berkeley DB 4.4). Es ist eher
          unwahrscheinlich, dass Sie diesen Befehl aufrufen
          müssen.</para>

      </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>

<!--
      <para>None</para>
-->
      <para>Keine</para>

    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Beispiele</title>

      <informalexample>
        <screen>
$ svnadmin crashtest /var/svn/repos
Aborted
</screen>
      </informalexample>

<!--
      <para>Exciting, isn't it?</para>
-->
      <para>Hochinteressant, nicht wahr?</para>

    </refsect1>
  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.create">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>create</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin create</refname>
<!--
      <refpurpose>Create a new, empty repository.</refpurpose>
-->
      <refpurpose>Erstellt ein neues, leeres Projektarchiv.
      </refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin create REPOS_PATH</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
        <para>Create a new, empty repository at the path provided.
          If the provided directory does not exist, it will be
          created for
          you.<footnote><para>Remember, <command>svnadmin</command>
          works only with local <emphasis>paths</emphasis>, not
          <emphasis>URLs</emphasis>.</para></footnote>  As of
          Subversion 1.2, <command>svnadmin</command> creates new
          repositories with the
          <literal>FSFS</literal> filesystem backend by
          default.</para>
-->
        <para>Am angegebenen Ort wird ein neues, leeres Projektarchiv
          erstellt. Falls das angegebene Verzeichnis nicht
          vorhanden ist, wird es für Sie
          angelegt.<footnote><para>Denken Sie daran, dass
          <command>svnadmin</command> nur mit lokalen
          <emphasis>Pfaden</emphasis> funktioniert, nicht mit
          <emphasis>URLs</emphasis>.</para></footnote> Seit
          Subversion 1.2 basieren die von
          <command>svnadmin</command> erstellten neuen
          Projektarchive standardmäßig auf dem
          <literal>FSFS</literal>-Dateisystem.</para>

<!--
        <para>While <command>svnadmin create</command> will create
          the base directory for a new repository, it will not
          create intermediate directories.  For example, if you
          have an empty directory named
          <filename>/var/svn</filename>, creating
          <filename>/var/svn/repos</filename> will work, while
          attempting to create
          <filename>/var/svn/subdirectory/repos</filename> will
          fail with an error.  Also, keep in mind that, depending
          on where on your system you are creating your
          repository, you might need to run <command>svnadmin
          create</command> as a user with elevated privileges
          (such as the <literal>root</literal> user).</para>
-->
        <para>Obwohl <command>svnadmin create</command> das
          Basisverzeichnis für ein neues Projektarchiv erzeugt,
          werden keine zwischenliegenden Verzeichnisse angelegt.
          Wenn Sie beispielsweise ein leeres Verzeichnis
          <filename>/var/svn</filename> haben, wird das Anlegen
          von <filename>/var/svn/repos</filename> funktionieren,
          während der Versuch,
          <filename>/var/svn/subdirectory/repos</filename>
          anzulegen, mit einem Fehler abbricht. Denken Sie auch
          daran, dass Sie eventuell <command>svnadmin</command>
          als Anwender mit erweiterten Rechten ausführen müssen
          (wie etwa <literal>root</literal>), abhängig davon, wo
          Sie das Projektarchiv auf Ihrem System erstellen.</para>


      </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>

      <informalexample>
        <screen>
<xref linkend="svn.ref.svnadmin.sw.bdb_log_keep" />
<xref linkend="svn.ref.svnadmin.sw.bdb_txn_nosync" />
<xref linkend="svn.ref.svnadmin.sw.compatible_version" />
<xref linkend="svn.ref.svnadmin.sw.config_dir" />
<xref linkend="svn.ref.svnadmin.sw.fs_type" />
<xref linkend="svn.ref.svnadmin.sw.pre_1.4_compatible" />
<xref linkend="svn.ref.svnadmin.sw.pre_1.5_compatible" />
<xref linkend="svn.ref.svnadmin.sw.pre_1.6_compatible" />
</screen>
      </informalexample>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Beispiele</title>

<!--
      <para>Creating a new repository is this easy:</para>
-->
      <para>Das Erstellen eines neuen Projektarchivs ist so
        einfach:</para>

      <informalexample>
        <screen>
$ cd /var/svn
$ svnadmin create repos
$
</screen>
      </informalexample>
<!--
      <para>In Subversion 1.0, a Berkeley DB repository is always
        created.  In Subversion 1.1, a Berkeley DB repository is
        the default repository type, but an FSFS repository can be
        created using the <option>- -fs-type</option>
        option:</para>
-->
      <para>In Subversion 1.0, a rd stets ein
        Berkeley-DB-Projektarchiv erstellt. In Subversion 1.1 ist ein
        Berkeley-DB-Projektarchiv der Standardtyp für Projektarchive,
        obwohl mit der Option <option>--fs-type</option> ein
        FSFS-Projektarchiv erstellt werden kann:</para>

      <informalexample>
        <screen>
$ cd /var/svn
$ svnadmin create repos --fs-type fsfs
$
</screen>
      </informalexample>

    </refsect1>
  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.deltify">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>deltify</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin deltify</refname>
<!--
      <refpurpose>Deltify changed paths in a revision range.</refpurpose>
-->
      <refpurpose>Geänderte Pfade im Revisionsbereich
        deltifizieren.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin deltify [-r LOWER[:UPPER]] REPOS_PATH</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para><command>svnadmin deltify</command> exists in
        current versions of Subversion only for historical reasons.
        This command is deprecated and no longer needed.</para>
-->
      <para>In aktuellen Versionen von Subversion ist
        <command>svnadmin deltify</command> nur aus historischen
        Gründen vorhanden. Von diesem nicht mehr benötigten Befehl
        wird abgeraten.</para>

<!--
      <para>It dates from a time when Subversion offered
        administrators greater control over compression strategies
        in the repository.  This turned out to be a lot of
        complexity for <emphasis>very</emphasis> little gain, and
        this <quote>feature</quote> was deprecated.</para>
-->
      <para>Es stammt aus der Zeit, als Subversion Administratoren
        eine umfangreichere Kontrolle über Kompressionsstrategien
        im Projektarchiv einräumte. Es stellte sich heraus, dass es
        jede Menge Komplexität bei <emphasis>sehr</emphasis> wenig
        Gewinn bedeutete, deshalb wird hiervon abgeraten.</para>

        </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>

      <informalexample>
        <screen>
<xref linkend="svn.ref.svnadmin.sw.memory_cache_size" />
<xref linkend="svn.ref.svnadmin.sw.quiet" />
<xref linkend="svn.ref.svnadmin.sw.revision" />
</screen>
      </informalexample>
    </refsect1>
  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.dump">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>dump</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin dump</refname>
<!--
      <refpurpose>Dump the contents of the filesystem to <filename>stdout</filename>.</refpurpose>
-->
      <refpurpose>Den Inhalt des Dateisystems nach
        <filename>stdout</filename> schreiben.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin dump REPOS_PATH [-r LOWER[:UPPER]] [--incremental] [--deltas]</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>Dump the contents of the filesystem to <filename>stdout</filename> in a
        <quote>dump file</quote> portable format, sending feedback
        to <filename>stderr</filename>.  Dump revisions
        <replaceable>LOWER</replaceable> rev through
        <replaceable>UPPER</replaceable> rev.  If no revisions are
        given, dump all revision trees.  If only
        <replaceable>LOWER</replaceable> is given, dump that one
        revision tree.  See <xref linkend="svn.reposadmin.maint.migrate"/>
        for a practical use.</para>
-->
      <para>Schreibt den Inhalt des Dateisystems nach
        <filename>stdout</filename>, indem ein Format verwendet
        wird, dass portabel zu  <quote>Auszugsdateien</quote> ist;
        Rückmeldungen werden nach <filename>stderr</filename>
        geschrieben. Ausgegeben werden die Revisionen
        <replaceable>LOWER</replaceable> bis
        <replaceable>UPPER</replaceable>. Wenn keine Revisionen
        angegeben sind, werden alle Revisionsbäume ausgegeben.
        Wird nur <replaceable>LOWER</replaceable> angegeben, wird
        nur dieser Baum ausgegeben. Siehe <xref
        linkend="svn.reposadmin.maint.migrate"/> für einen
        praktischen Anwendungsfall.</para>

<!--
      <para>By default, the Subversion dump stream contains a
        single revision (the first revision in the requested
        revision range) in which every file and directory in the
        repository in that revision is presented as though that whole
        tree was added at once, followed by other revisions (the
        remainder of the revisions in the requested range), which
        contain only the files and directories that were modified
        in those revisions.  For a modified file, the complete
        full-text representation of its contents, as well as all of
        its properties, are presented in the dump file; for a
        directory, all of its properties are presented.</para>
-->
      <para>Standardmäßig beinhaltet der Auszugsstrom von
        Subversion eine einzige Revision (die erste im angegebenen
        Revisionsbereich) in der jede Datei und jedes Verzeichnis
        dieser Revision im Projektarchiv präsentiert wird, als sei
        der gesamte Baum auf einmal hinzugefügt worden. Es folgen
        die anderen Revisionen (der Rest der Revisionen aus dem
        angegebenen Bereich), die nur die in diesen Revisionen
        geänderten Dateien und Verzeichnisse umfassen. Für eine
        geänderte Datei werden sowohl die vollständige
        Textrepräsentation ihres Inhalts als auch ihre Eigenschaften
        in den Auszug übernommen; für ein Verzeichnis werden alle
        seine Eigenschaften übernommen.</para>

<!--
      <para>Two useful options modify the dump file
        generator's behavior.  The first is the
        <option>- -incremental</option> option, which simply causes
        that first revision in the dump stream to contain only
        the files and directories modified in that revision,
        instead of being presented as the addition of a new tree,
        and in exactly the same way that every other revision in
        the dump file is presented.  This is useful for generating
        a relatively small dump file to be loaded into another
        repository that already has the files and directories
        that exist in the original repository.</para>
-->
      <para>Zwei nützliche Optionen beeinflussen das Verhalten der
        Erstellung der Auszugsdatei. Die erste Option ist
        <option>--incremental</option>, die einfach bewirkt, dass
        bei der ersten Revision nur die in ihr geänderten Dateien
        und Verzeichnisse ausgegeben werden, statt es so aussehen
        zu lassen, als sei ein vollständiger Baum hinzugefügt
        worden; die Ausgabe erfolgt somit auf dieselbe Weise wie
        für die anderen Revisionen. Das ist nützlich, um eine
        relativ kleine Auszugsdatei zu erzeugen, die in ein
        anderes Projektarchiv geladen werden soll, welches bereits
        die Dateien und Verzeichnisse aus dem Original-Projektarchiv
        beinhaltet.</para>

<!--
      <para>The second useful option is <option>- -deltas</option>.
        This option causes <command>svnadmin dump</command> to,
        instead of emitting full-text representations of file
        contents and property lists, emit only deltas of those
        items against their previous versions.  This reduces (in
        some cases, drastically) the size of the dump file that
        <command>svnadmin dump</command> creates.  There are, however,
        disadvantages to using this option&mdash;deltified
        dump files are more CPU-intensive to create and tend
        not to compress as well as their nondeltified counterparts
        when using third-party tools such as <command>gzip</command>
        and <command>bzip2</command>.</para>
-->
      <para>Die zweite nützliche Option ist
        <option>--deltas</option>. Diese Option veranlasst
        <command>svnadmin dump</command>, statt
        Volltextrepräsentationen von Dateiinhalten und
        Eigenschafts-Listen nur die jeweiligen Unterschiede zu
        früheren Versionen auszugeben. Das verringert (in einigen
        Fällen erheblich) den Umfang der Auszugsdatei, die
        <command>svnadmin dump</command> erzeugt. Allerdings gibt
        es bei der Option auch Nachteile &ndash; deltifizierte
        Auszugsdateien erfordern bei der Erstellung mehr
        Rechenkapazität und tendieren dazu, sich mit Werkzeugen von
        Drittanbietern, so wie <command>gzip</command> oder
        <command>bzip2</command>, nicht so gut komprimieren zu lassen
        wie die entsprechenden undeltifizierten Auszugsdateien.</para>

      <tip>
<!--
        <para>Beginning with Subversion 1.8,
          <command>svndumpfilter</command> can operate on deltified
          dump streams.  Prior to this release,
          <command>svndumpfilter</command> would not work with dump
          streams created using <option>- -deltas</option>
          option.</para>
-->
        <para>Beginnend mit Subversion 1.8 kann
          <command>svndumpfilter</command> auf deltifizierten
          Ausgabeströmen arbeiten. Davor verweigerte
          <command>svndumpfilter</command> die Arbeit mit
          Auszugsströmen, die mit der Option
          <option>--deltas</option> erzeugt wurden.</para>
      </tip>

    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>

      <informalexample>
        <screen>
<xref linkend="svn.ref.svnadmin.sw.deltas" />
<xref linkend="svn.ref.svnadmin.sw.incremental" />
<xref linkend="svn.ref.svnadmin.sw.memory_cache_size" />
<xref linkend="svn.ref.svnadmin.sw.quiet" />
<xref linkend="svn.ref.svnadmin.sw.revision" />
</screen>
      </informalexample>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Beispiele</title>

<!--
      <para>Dump your whole repository:</para>
-->
      <para>Das gesamte Projektarchiv ausgeben:</para>

      <informalexample>
        <screen>
$ svnadmin dump /var/svn/repos &gt; full.dump <!--
* Dumped revision 0.
* Dumped revision 1.
* Dumped revision 2.
-->
* Revision 0 ausgegeben.
* Revision 1 ausgegeben.
* Revision 2 ausgegeben.
&hellip;
</screen>
      </informalexample>

<!--
      <para>Incrementally dump a single transaction from your
        repository:</para>
-->
      <para>Eine einzelne Transaktion Ihres Projektarchivs
        inkrementell ausgeben:</para>

      <informalexample>
        <screen>
$ svnadmin dump /var/svn/repos -r 21 --incremental &gt; incr.dump
<!--
* Dumped revision 21.
-->
* Revision 21 ausgegeben.
</screen>
      </informalexample>

    </refsect1>
  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.freeze">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>freeze</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin freeze</refname>
<!--
      <refpurpose>Prevent commits to the repository while running an arbitary program.</refpurpose>
-->
      <refpurpose>Während der Ausführung eines beliebigen Programms
        Übertragungen an das Projektarchiv unterbinden.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin freeze REPOS_PATH PROGRAM [ARG...]</literal></para>
      <para><literal>svnadmin freeze --file FILENAME PROGRAM [ARG...]</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>This subcommand prevents concurrent commits to the repository
        <replaceable>REPOS_PATH</replaceable> (i.e. it freezes the
        repository) while running <replaceable>PROGRAM</replaceable> with
        <replaceable>ARG</replaceable> arguments.  Clients trying to
        commit concurrently will wait until the repository becomes
        available again.  The subcommand is intended for backup purposes so
        that third-party backup tools such as <command>rsync</command> can
        be safely used on a live repository.</para>
-->
      <para>Dieser Unterbefehl unterbindet nebenläufige Übertragungen
        in das Projektarchiv <replaceable>REPOS_PATH</replaceable>
        (d.h., er friert das Projektarchiv ein) während
        <replaceable>PROGRAM</replaceable> mit den Argumenten
        <replaceable>ARG</replaceable> ausgeführt wird. Clients, die
        gleichzeitig übertragen wollen, warten, bis das Projektarchiv
        wieder verfügbar wird. Der Unterbefehl ist für Sicherungen
        gedacht, sp dass Werkzeuge von Drittanbietern, wie etwa 
        <command>rsync</command> sicher auf ein aktives Projektarchiv
        angesetzt werden können.</para>

<!--
      <para>If <option>- -file</option> option is used, then all repositories
        listed in <replaceable>FILENAME</replaceable> will froze.  The
        file format is a list of <replaceable>REPOS_PATH</replaceable>
        separated by newlines.  Repositories freeze in the
        same order as they are listed in the file.</para>
    </refsect1>
-->
      <para>Wird die Option <option>--file</option> verwendet, werden
        alle in <replaceable>FILENAME</replaceable> aufgeführten
        Projektarchive eingefroren. Das Dateiformat ist eine Liste aus
        <replaceable>REPOS_PATH</replaceable>, die durch
        Zeilenvorschübe getrennt sind. Projektarchive werden in
        derselben Reihenfolge eingefroren wie sie in der Datei
        aufgeführt sind.</para>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>

      <informalexample>
        <screen>
<xref linkend="svn.ref.svnadmin.sw.file" />
</screen>
      </informalexample>
    </refsect1>
    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Beispiele</title>

<!--
      <para>Freeze the repository and run <command>rsync</command> to
        make its backup:</para>
-->
      <para>Das Projektarchiv einfrieren und <command>rsync</command>
        zum Sichern starten:</para>

      <informalexample>
        <screen>
$ svnadmin freeze /var/svn/repos -- rsync -av /var/svn/repos /backup/repos
</screen>
      </informalexample>

    </refsect1>
  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  
  <refentry id="svn.ref.svnadmin.c.help">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>help</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin help (h, ?)</refname>
<!--
      <refpurpose>Help!</refpurpose>
-->
      <refpurpose>Hilfe!</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin help [SUBCOMMAND...]</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>This subcommand is useful when you're trapped on a
        desert island with neither a Net connection nor a copy of
        this book.</para>
-->
      <para>Dieser Unterbefehl ist nützlich, falls Sie auf einer
        einsamen Insel gestrandet sind &ndash; ohne Netzverbindung
        oder dieses Buch.</para>
    </refsect1>

  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.hotcopy">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>hotcopy</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin hotcopy</refname>
<!--
      <refpurpose>Make a hot copy of a repository.</refpurpose>
-->
      <refpurpose>Eine Kopie des Projektarchivs während des laufenden
        Betriebs erstellen.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin hotcopy REPOS_PATH NEW_REPOS_PATH</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>This subcommand makes a <quote>hot</quote> backup
        of your repository, including all hooks, configuration
        files, and, of course, database files.  You can run this command at any
        time and make a safe copy of the repository, regardless of
        whether other processes are using the repository.</para>
-->
      <para>Dieser Unterbefehl erstellt eine 
        Sicherheitskopie Ihres Projektarchivs während des laufenden
        Betriebs; dabei werden alle Hooks, Konfigurationsdateien
        und Datenbankdateien berücksichtigt. Sie können diesen Befehl jederzeit
        aufrufen und eine Sicherungskopie des Projektarchivs anlegen,
        egal, ob andere Prozesse gerade auf das Projektarchiv
        zugreifen.</para>

<!--
      <para>Prior to Subversion 1.8, <command>svnadmin hotcopy</command> always
        made a full hot copy of the source repository.  Beginning with
        Subversion 1.8 it supports incremental copy to the existing
        destination copy of the same source repository.  By passing the
        <option>- -incremental</option> option to
        <command>svnadmin hotcopy</command>, you can instruct Subversion to
        copy only new revisions and revisions which have changed in size or had
        timestamp modifications.  The UUID of the hotcopy destination
        repository must match the UUID of the hotcopy source repository.
        Incremental hotcopy mode is supported for FSFS repositories
        only.</para>
-->
      <para>Vor Subversion 1.8 hat <command>svnadmin hotcopy</command> stets
        eine vollständige Kopie des Projektarchivs im laufenden
        Betrieb erstellt. Beginnend mit Subversion 1.8 unterstützt es
        eine inkrementelle Kopie auf die existierende Zielkopie
        desselben Ursprungs-Projektarchivs. Indem Sie
        <command>svnadmin hotcopy</command> die Option
        <option>--incremental</option> mitgeben, können Sie Subversion
        anweisen, nur neue Revisionen sowie Revisionen zu kopieren,
        die Änderungen an der Größe oder am Änderungsdatum vorweisen.
        Der UUID des Ziel-Projektarchivs der Hotcopy-Operation muss
        derselbe sein wie der UUID des Ursprungs-Projektarchivs.
        Der inkrementelle Hotcopy-Modus wird nur von
        FSFS-Projektarchiven unterstützt.</para>

<!--
      <para>If you pass the <option>- -clean-logs</option> option,
        <command>svnadmin</command> will perform a hot copy of your
        repository, and then remove unused Berkeley DB logs from
        the original repository.</para>
-->
      <para>Falls Sie die Option <option>--clean-logs</option>
        angeben, führt <command>svnadmin</command> die Sicherungskopie
        Ihres Projektarchivs durch und löscht anschließend nicht
        benötigte Berkeley-DB-Protokolldateien aus Ihrem
        Original-Projektarchiv. </para>

    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>

      <informalexample>
        <screen>
<xref linkend="svn.ref.svnadmin.sw.clean_logs" />
<xref linkend="svn.ref.svnadmin.sw.incremental" />
</screen>
      </informalexample>

      <warning>
<!--
        <para>As described in <xref
          linkend="svn.berkeleydb.limitations.architectural"/>, hot-copied
          Berkeley DB repositories are <emphasis>not</emphasis>
          portable across operating systems, nor will they work on
          machines with a different <quote>endianness</quote> than
          the machine where they were created.</para>
-->
        <para>Wie in <xref
          linkend="svn.berkeleydb.limitations.architectural"/>
          erläutert, sind mit <command>svnadmin hotcopy</command>
          erstellte Berkeley-DB-Projektarchive
          <emphasis>nicht</emphasis> über Betriebssystemgrenzen
          portabel, sie funktionieren auch nicht auf Maschinen
          mit anderer <quote>Byte-Reihenfolge</quote> als auf der
          Maschine, auf der sie erzeugt wurden.</para>
      </warning>

      </refsect1>

  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.list-dblogs">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>list-dblogs</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin list-dblogs</refname>
<!--
      <refpurpose>Ask Berkeley DB which logfiles exist for a
        given Subversion repository (applies only to repositories
        using the <literal>bdb</literal> backend).</refpurpose>
-->
      <refpurpose>Anfrage an die Berkeley DB, welche
        Protokolldateien für ein gegebenes Subversion-Projektarchiv
        vorhanden sind (nur für Projektarchive, die auf
        <literal>BDB</literal> basieren).</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin list-dblogs REPOS_PATH</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>Berkeley DB creates logs of all changes to the
        repository, which allow it to recover in the face of
        catastrophe.  Unless you enable
        <literal>DB_LOG_AUTOREMOVE</literal>, the logfiles
        accumulate, although most are no longer used and can be
        deleted to reclaim disk space.  See <xref
        linkend="svn.reposadmin.maint.diskspace"/> for more
        information.</para>
-->
      <para>Berkeley DB erzeugt Protokolle für alle Änderungen am
        Projektarchiv, die ihm im Angesicht einer Katastrophe die
        Wiederherstellung erlauben. Falls Sie nicht
        <literal>DB_LOG_AUTOREMOVE</literal> aktivieren, sammeln
        sich die Protokolldateien an, obwohl die meisten nicht
        mehr benötigt werden und gelöscht werden könnten, um
        Plattenplatz zurückzuholen. Siehe <xref
        linkend="svn.reposadmin.maint.diskspace"/> für weitere
        Informationen.</para>
    </refsect1>

  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.list-unused-dblogs">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>list-unused-dblogs</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin list-unused-dblogs</refname>
<!--
      <refpurpose>Ask Berkeley DB which logfiles can be safely
      deleted (applies only to repositories using the
      <literal>bdb</literal> backend).</refpurpose>
-->
      <refpurpose>Anfrage an Berkeley DB, welche Protokolldateien
        zum Löschen freigegeben sind (nur für Projektarchive, die auf
        <literal>BDB</literal> basieren).</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin list-unused-dblogs REPOS_PATH</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>Berkeley DB creates logs of all changes to the
        repository, which allow it to recover in the face of
        catastrophe.  Unless you enable
        <literal>DB_LOG_AUTOREMOVE</literal>, the logfiles
        accumulate, although most are no longer used and can be
        deleted to reclaim disk space.  See <xref
        linkend="svn.reposadmin.maint.diskspace"/> for more
        information.</para>
-->
      <para>Berkeley DB erzeugt Protokolle für alle Änderungen am
        Projektarchiv, die ihm im Angesicht einer Katastrophe die
        Wiederherstellung erlauben. Falls Sie nicht
        <literal>DB_LOG_AUTOREMOVE</literal> aktivieren, sammeln
        sich die Protokolldateien an, obwohl die meisten nicht
        mehr benötigt werden und gelöscht werden könnten, um
        Plattenplatz zurückzuholen. Siehe <xref
        linkend="svn.reposadmin.maint.diskspace"/> für weitere
        Informationen.</para>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Beispiele</title>

<!--
      <para>Remove all unused logfiles from the repository:</para>
-->
      <para>Alle nicht benötigten Protokolldateien aus dem Projektarchiv
        entfernen:</para>

      <informalexample>
      <screen>
$ svnadmin list-unused-dblogs /var/svn/repos
/var/svn/repos/log.0000000031
/var/svn/repos/log.0000000032
/var/svn/repos/log.0000000033

$ svnadmin list-unused-dblogs /var/svn/repos | xargs rm <!--
## disk space reclaimed!
-->
## Plattenplatz zurückgeholt!
</screen>
    </informalexample>

    </refsect1>
  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.load">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>load</tertiary>
    </indexterm>

    <refnamediv>
<!--
      <refname>svnadmin load</refname> <refpurpose>Read a
        repository dump stream from
        <filename>stdin</filename>.</refpurpose>
-->
      <refname>svnadmin load</refname>
      <refpurpose>Einen Projektarchiv-Auszugsstrom von
        <filename>stdin</filename> laden.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin load REPOS_PATH [-r LOWER[:UPPER]]</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>Read a repository dump stream from
        <filename>stdin</filename>, committing new revisions
        into the repository's filesystem.  Progress
        feedback is sent to <filename>stdout</filename>.  If
        no revisions are given, read and commit all revisions.  But
        if <option>- -revision</option> is provided, read and commit
        revisions <replaceable>LOWER</replaceable> rev through
        <replaceable>UPPER</replaceable> rev only.  If only
        <replaceable>LOWER</replaceable> is given, load that one
        revision.</para>
-->
      <para>Liest einen Projektarchiv-Auszugsstrom von
        <filename>stdin</filename> und übergibt neue Revisionen an
        das Dateisystem des Projektarchivs. Hinweise zum Fortschritt
        werden nach <filename>stdout</filename> geschrieben. Werden
        keine Revisionen angegeben, werden alle Revisionen gelesen und
        übertragen. Falls jedoch <option>--revision</option> angegeben
        ist, werden nur die Revisionen <replaceable>LOWER</replaceable>
        bis <replaceable>UPPER</replaceable> gelesen und übertragen.
        Falls nur <replaceable>LOWEE</replaceable> angegeben ist, eird
        nur diese eine Revision geladen.</para>

<!--
      <para>Prior to Subversion 1.8, <command>svnadmin load</command>
        was limited to reading all revisions that the dump stream
        contains, but now <command>svnadmin load</command> accepts
        <option>- -revision</option> option that acts as a filter for
        dump stream revisions.  This allows you to incrementally load
        only a range of revisions from a single dump stream making
        some repository maintenance and reorganization tasks much
        easier.</para>
-->
      <para>Vor Subversion 1.8 konnte <command>svnadmin load</command>
        nur alle Revisionen aus dem Auszugsstrom lesen, doch nun
        akzeptiert <command>svnadmin load</command> die Option
        <option>--revision</option>, die als Filter für die Revisionen
        aus dem Auszugsstrom arbeitet. Das erlaubt Ihnen das
        inkrementelle Laden beschränkt auf einen Bereich von
        Revisionen eines einzelnen Auszugstroms, was einige
        Organisations- und Wartungsarbeiten am Projektarchiv
        wesentlich vereinfacht.</para>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>

      <informalexample>
        <screen>
<xref linkend="svn.ref.svnadmin.sw.bypass_prop_validation" />
<xref linkend="svn.ref.svnadmin.sw.force_uuid" />
<xref linkend="svn.ref.svnadmin.sw.ignore_uuid" />
<xref linkend="svn.ref.svnadmin.sw.memory_cache_size" />
<xref linkend="svn.ref.svnadmin.sw.parent_dir" />
<xref linkend="svn.ref.svnadmin.sw.quiet" />
<xref linkend="svn.ref.svnadmin.sw.use_post_commit_hook" />
<xref linkend="svn.ref.svnadmin.sw.use_pre_commit_hook" />
</screen>
      </informalexample>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Beispiele</title>

<!--
      <para>This shows the beginning of loading a repository from
        a backup file (made, of course, with <command>svnadmin
        dump</command>):</para>
-->
      <para>Dies zeigt die Anfangsphase des Ladens eines
        Projektarchivs aus einer Sicherungsdatei (die natürlich mit
        <command>svnadmin dump</command> erstellt wurde):</para>

      <informalexample>
        <screen>
$ svnadmin load /var/svn/restored &lt; repos-backup <!--
&lt;&lt;&lt; Started new txn, based on original revision 1
     * adding path : test ... done.
     * adding path : test/a ... done.
-->
&lt;&lt;&lt; Neue Transaktion basierend auf Originalrevision 1 gestartet
     * Füge Pfad hinzu: test ... erledigt.
     * Füge Pfad hinzu: test/a ... erledigt.
&hellip;
</screen>
      </informalexample>

<!--
      <para>Or if you want to load into a subdirectory:</para>
-->
      <para>Oder falls Sie in ein Unterverzeichnis laden
        möchten:</para>

      <informalexample>
        <screen>
$ svnadmin load --parent-dir new/subdir/for/project \
                /var/svn/restored &lt; repos-backup <!--
&lt;&lt;&lt; Started new txn, based on original revision 1
     * adding path : test ... done.
     * adding path : test/a ... done.
-->
&lt;&lt;&lt; Neue Transaktion basierend auf Originalrevision 1 gestartet
     * Füge Pfad hinzu: test ... erledigt.
     * Füge Pfad hinzu: test/a ... erledigt.
&hellip;
</screen>
      </informalexample>

<!--
      <para>Newer versions of Subversion have grown more strict
        regarding the format of the values of Subversion's own
        built-in properties.  Of course, properties created with
        older versions of Subversion wouldn't have benefitted from
        that strictness, and as such might be improperly
        formatted.  Dump streams carry property values as-is, so
        using Subversion 1.7 to load dump streams created from
        repositories with ill-formatted property values will, by
        default, trigger a validation error.  There are several
        workaround for this problem.  First, you can manually
        repair the problematic property values in the source
        repository and recreate the dump stream.  Or, you can
        manually tweak the dump stream itself to fix those
        property values.  Finally, if you'd rather not deal with
        the problem right now, use the
        <option>- -bypass-prop-validation</option> option
        with <command>svnadmin load</command>.</para>
-->
      <para>Neuere Versionen von Subversion sind bezüglich des
        Formats der Werte eigener eingebauter Eigenschaften von
        Subversion strenger geworden. Natürlich hätten
        Eigenschaften, die mit älteren Versionen von Subversion
        erzeugt wurden keine Vorteile von dieser Strenge und
        könnten somit unpassend formatiert werden. Auszugsströme
        beinhalten unveränderte Eigenschaftswerte, so dass bei der
        Verwendung von Subversion 1.7 zum Laden von
        Auszugsströmen, die aus Projektarchiven mit schlecht
        formatierten Eigenschaftswerten stammen, standardmäßig
        Validierungsfehler ausgelöst werden. Für dieses Problem
        gibt es mehrere Abhilfen. Zunächst können Sie manuell die
        problematischen Eigenschaftswerte im Quell-Projektarchiv
        reparieren und den Auszugsstrom erneut erzeugen. Oder Sie
        können manuell den Auszugsstrom manipulieren, um diese
        Eigenschaftswerte zu korrigieren. Falls Sie sich
        letztendlich momentan nicht mit diesem Problem abgeben
        möchten, verwenden Sie die Opton
        <option>--bypass-prop-validation</option> mit
        <command>svnadmin load</command>.</para>

    </refsect1>
  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.lock">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>lock</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin lock</refname>
<!--
      <refpurpose>Lock path in the repository directly.</refpurpose>
-->
      <refpurpose>Einen Pfad direkt im Projektarchiv sperren.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin lock REPOS_PATH PATH-IN-REPOS USERNAME FILE
        [TOKEN]</literal>
      </para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>Lock <replaceable>PATH-IN-REPOS</replaceable> in the
        repository, assigning ownership of the lock
        to <replaceable>USERNAME</replaceable> and using the contents
        of <replaceable>FILE</replaceable> as comments associated with
        the created lock.  If provided,
        use <replaceable>TOKEN</replaceable> as lock token.</para>
-->
      <para>Sperre <replaceable>PATH-IN-REPOS</replaceable> im
        Projektarchiv, wobei der Sperre
        <replaceable>USERNAME</replaceable> als Eigentümer zugewiesen
        wird und der Inhalt von <replaceable>FILE</replaceable> als
        Kommentar mit der erzeugten Sperre verknüpft wird. Falls
        angegeben, soll <replaceable>TOKEN</replaceable> als
        Sperrmarke verwendet werden.</para>

    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
      <title>Options</title>
      <informalexample>
        <screen>
<xref linkend="svn.ref.svnadmin.sw.bypass_hooks" />
</screen>
      </informalexample>
    </refsect1>
  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.lslocks">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>lslocks</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin lslocks</refname> 
<!--
      <refpurpose>Print descriptions of all locks.</refpurpose>
-->
      <refpurpose>Ausgeben der Beschreibungen zu allen
        Sperren.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin lslocks REPOS_PATH [PATH-IN-REPOS]</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>Print descriptions of all locks in
        repository <replaceable>REPOS_PATH</replaceable>
        underneath the
        path <replaceable>PATH-IN-REPOS</replaceable>.
        If <replaceable>PATH-IN-REPOS</replaceable> is not
        provided, it defaults to the root directory of the
        repository.</para>
-->
      <para>Gibt Beschreibungen zu allen Sperren im Projektarchiv
        <replaceable>REPOS_PATH</replaceable> unterhalb des Pfades
        <replaceable>PATH-IN-REPOS</replaceable> aus. Falls
        <replaceable>PATH-IN-REPOS</replaceable> nicht angegeben
        ist, wird standardmäßig das Wurzelverzeichnis des
        Projektarchivs angenommen.</para>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>

<!--
      <para>None</para>
-->
      <para>Keine</para>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Beispiele</title>


<!--
      <para>This lists the one locked file in the repository at
        <filename>/var/svn/repos</filename>:</para>
-->
      <para>Dies zeigt die einzige gesperrte Datei im Projektarchiv
        unter <filename>/var/svn/repos</filename> an:</para>

      <informalexample>
        <screen>
$ svnadmin lslocks /var/svn/repos <!--
Path: /tree.jpg
UUID Token: opaquelocktoken:ab00ddf0-6afb-0310-9cd0-dda813329753
Owner: harry
Created: 2005-07-08 17:27:36 -0500 (Fri, 08 Jul 2005)
Expires: 
Comment (1 line):
-->
Pfad: /tree.jpg
UUID Marke: opaquelocktoken:ab00ddf0-6afb-0310-9cd0-dda813329753
Eigentümer: harry
Erstellt: 2005-07-08 17:27:36 -0500 (Fri, 08 Jul 2005)
Läuft ab: 
Kommentar (1 Zeilen):
Rework the uppermost branches on the bald cypress in the foreground.
</screen>
      </informalexample>
    </refsect1>
  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.lstxns">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>lstxns</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin lstxns</refname>
<!--
      <refpurpose>Print the names of all uncommitted transactions.</refpurpose>
-->
      <refpurpose>Die Namen aller unvollendeten Transaktionen
        ausgeben.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin lstxns REPOS_PATH</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>Print the names of all uncommitted transactions.  See
        <xref linkend="svn.reposadmin.maint.diskspace.deadtxns" />
        for information on how uncommitted transactions are
        created and what you should do with them.</para>
-->
      <para>Gibt die Namen aller unvollendeten Transaktionen aus.
        Siehe <xref
        linkend="svn.reposadmin.maint.diskspace.deadtxns" /> für
        Informationen darüber, wie unvollendete Transaktionen
        erzeugt werden und was Sie damit tun sollten.</para>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Beispiele</title>

<!--
      <para>List all outstanding transactions in a
        repository:</para>
-->
      <para>Alle ausstehenden Transaktionen in einem Projektarchiv
        ausgeben:</para>

      <informalexample>
        <screen>
$ svnadmin lstxns /var/svn/repos/ 
1w
1x
</screen>
      </informalexample>

    </refsect1>
  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.pack">
    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>pack</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin pack</refname>
<!--
      <refpurpose>Possibly compact the repository into a more
      efficient storage model.</refpurpose>
-->
      <refpurpose>Das Projektarchiv nach Möglichkeit in ein
        effizienteres Speichermodell komprimieren.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin pack REPOS_PATH</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>See
      <xref linkend="svn.reposadmin.maint.diskspace.fsfspacking"
      /> for more information.</para>
-->
      <para>Siehe
      <xref linkend="svn.reposadmin.maint.diskspace.fsfspacking"
      /> für weitere Informationen.</para>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>
<!--
      <para>None</para>
-->
      <para>Keine</para>
    </refsect1>
  </refentry>


  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.recover">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>recover</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin recover</refname>

<!--
      <refpurpose>Bring a repository database back into a
      consistent state (applies only to repositories using the
      <literal>bdb</literal> backend).  In addition, if
      <filename>repos/conf/passwd</filename> does not exist, it
      will create a default passwordfile .</refpurpose>
-->
      <refpurpose>Stellt wieder einen konsistenten Zustand der
        Projektarchiv-Datenbank her (nur anwendbar für Projektarchiv,
        die auf <literal>BDB</literal> basieren). Falls
        <filename>repos/conf/passwd</filename> nicht vorhanden
        ist, wird darüber hinaus eine Standard-Passwort-Datei
        erstellt.</refpurpose>

    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin recover REPOS_PATH</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>Run this command if you get an error indicating that
        your repository needs to be recovered.</para>
-->
      <para>Rufen Sie diesen Befehl auf, falls sie eine
        Fehlermeldung erhalten, die darauf hindeutet, dass das
        Projektarchiv wiederhergestellt werden muss.</para>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>
      <informalexample>
        <screen>
<xref linkend="svn.ref.svnadmin.sw.wait" />
</screen>
      </informalexample>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Beispiele</title>

<!--
      <para>Recover a hung repository:</para>
-->
      <para>Wiederherstellung eines aufgehängten
        Projektarchivs:</para>

      <informalexample>
        <screen>
$ svnadmin recover /var/svn/repos/ <!--
Repository lock acquired.
Please wait; recovering the repository may take some time...

Recovery completed.
The latest repos revision is 34.
-->
Exklusiven Zugriff auf das Projektarchiv erlangt
Bitte warten, die Wiederherstellung des Projektarchivs kann einige Zeit dauern ...

Wiederherstellung vollständig abgeschlossen.
Die neueste Revision des Projektarchivs ist 34.
</screen>
      </informalexample>

<!--
      <para>Recovering the database requires an exclusive lock on
        the repository. (This is a <quote>database lock</quote>;
        see the sidebar <xref linkend="svn.advanced.locking.meanings"/>.)
        If another process is accessing the repository,
        then <command>svnadmin recover</command> will error:</para>
-->
      <para>Die Wiederherstellung der Datenbank erfordert eine
        exklusive Sperre auf dem Projektarchiv. (Das ist eine
        <quote>Datenbank-Sperre</quote>; siehe Anmerkung <xref
        linkend="svn.advanced.locking.meanings"/>.)
        Falls ein anderer Prozess auf das Projektarchiv zugreift,
        gibt <command>svnadmin recover</command> einen Fehler
        aus:</para>

      <informalexample>
        <screen>
$ svnadmin recover /var/svn/repos <!--
svn: E165000: Failed to get exclusive repository access; perhaps another proce
ss such as httpd, svnserve or svn has it open?
-->
svn: E165000: Konnte keinen exklusiven Zugriff auf das Projektarchiv erlangen
Vielleicht hat noch ein anderer Prozess (httpd, svnserve, svn)
das Projektarchiv geöffnet?

$
</screen>
      </informalexample>

<!--
      <para>The <option>- -wait</option> option, however, will
        cause <command>svnadmin recover</command> to wait
        indefinitely for other processes to disconnect:</para>
-->
      <para>Die Option <option>--wait</option> veranlasst
        <command>svnadmin recover</command> auf unbestimmte Zeit
        auf das Abmelden anderer Prozesse zu warten:</para>

      <informalexample>
        <screen>
$ svnadmin recover /var/svn/repos --wait <!--
Waiting on repository lock; perhaps another process has it open?

### time goes by&hellip;

Repository lock acquired.
Please wait; recovering the repository may take some time...

Recovery completed.
The latest repos revision is 34.
-->
Warte auf Freigabe des Projektarchivs; Vielleicht ist es durch einen anderen Prozess geöffnet?

### Zeit vergeht&hellip;

Exklusiven Zugriff auf das Projektarchiv erlangt
Bitte warten, die Wiederherstellung des Projektarchivs kann einige Zeit dauern ...

Wiederherstellung vollständig abgeschlossen.
Die neueste Revision des Projektarchivs ist 34.
</screen>
      </informalexample>

    </refsect1>
  </refentry>


  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.rmlocks">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>rmlocks</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin rmlocks</refname>
<!--
      <refpurpose>Unconditionally remove one or more locks from a
      repository.</refpurpose>
-->
      <refpurpose>Eine oder mehrere Sperren vom
        Projektarchiv bedingungslos entfernen.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin rmlocks REPOS_PATH LOCKED_PATH...</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>Remove one or more locks from each <replaceable>LOCKED_PATH</replaceable>.</para>
-->
      <para>Entfernt eine oder mehrere Sperren von jedem
        <replaceable>LOCKED_PATH</replaceable>.</para>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>

<!--
      <para>None</para>
-->
      <para>Keine</para>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Beispiele</title>

<!--
      <para>This deletes the locks on
        <filename>tree.jpg</filename> and
        <filename>house.jpg</filename> in the repository at
        <filename>/var/svn/repos</filename>:</para>
-->
      <para>Das entfernt die Sperren auf
        <filename>tree.jpg</filename> und
        <filename>house.jpg</filename> im Projektarchiv unter
        <filename>/var/svn/repos</filename>:</para>

      <informalexample>
        <screen>
$ svnadmin rmlocks /var/svn/repos tree.jpg house.jpg <!--
Removed lock on '/tree.jpg.
Removed lock on '/house.jpg.
-->
Sperre für »/tree.jpg« entfernt.
Sperre für »/house.jpg« entfernt.
</screen>
      </informalexample>
    </refsect1>
  </refentry>


  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.rmtxns">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>rmtxns</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin rmtxns</refname>
<!--
      <refpurpose>Delete transactions from a repository.</refpurpose>
-->
      <refpurpose>Transaktionen aus einem Projektarchiv
        löschen.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin rmtxns REPOS_PATH TXN_NAME...</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>Delete outstanding transactions from a repository.
        This is covered in detail in <xref
        linkend="svn.reposadmin.maint.diskspace.deadtxns" />.</para>
-->
      <para>Löscht nicht abgeschlossene Transaktionen aus einem
        Projektarchiv. Dies wird detailliert in <xref
        linkend="svn.reposadmin.maint.diskspace.deadtxns" />
        behandelt.</para>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>

      <informalexample>
        <screen>
<xref linkend="svn.ref.svnadmin.sw.quiet" />
</screen>
      </informalexample>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Beispiele</title>

<!--
      <para>Remove named transactions:</para>
-->
      <para>Benannte Transaktionen entfernen:</para>

      <informalexample>
        <screen>
$ svnadmin rmtxns /var/svn/repos/ 1w 1x
</screen>
      </informalexample>

<!--
      <para>Fortunately, the output of <command>lstxns</command>
        works great as the input for <command>rmtxns</command>:</para>
-->
      <para>Glücklicherweise lässt sich die Ausgabe von
        <command>svnadmin lstxns</command> hervorragend als
        Eingabe für <command>svnadmin rmtxns</command>
        verwenden:</para>

      <informalexample>
        <screen>
$ svnadmin rmtxns /var/svn/repos/  `svnadmin lstxns /var/svn/repos/`
</screen>
      </informalexample>

<!--
      <para>This removes all uncommitted transactions from
        your repository.</para>
-->
      <para>Das entfernt alle nicht abgeschlossenen Transaktionen
        aus Ihrem Projektarchiv.</para>

    </refsect1>
  </refentry>


  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.setlog">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>setlog</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin setlog</refname>
<!--
      <refpurpose>Set the log message on a revision.</refpurpose>
-->
      <refpurpose>Die Protokollnachricht einer Revision
        setzen.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin setlog REPOS_PATH -r REVISION FILE</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>Set the log message on
        revision <replaceable>REVISION</replaceable> to the
        contents of <replaceable>FILE</replaceable>.</para>
-->
      <para>Setzt die Protokollnachricht von Revision
        <replaceable>REVISION</replaceable> auf den Inhalt von
        <replaceable>FILE</replaceable>.</para>

<!--
      <para>This is similar to using <command>svn propset</command>
        with the <option>- -revprop</option> option to set the <literal>svn:log</literal> property
        on a revision, except that you can also use the option
        <option>- -bypass-hooks</option> to avoid running any pre-
        or post-commit hooks, which is useful if the modification
        of revision properties has not been enabled in
        the <literal>pre-revprop-change</literal> hook.</para>
-->
      <para>Dies ist ähnlich der Verwendung von <command>svn
        propset</command> mit der Option
        <option>--revprop</option>, um die Eigenschaft
        <literal>svn:log</literal> einer Revision zu setzen, mit
        der Ausnahme, dass Sie auch die Option
        <option>--bypass-hooks</option> verwenden können, um die
        Ausführung irgendwelcher Vor- oder Nach-Übergabe-Hooks zu
        verhindern. Das kann nützlich sein, falls die Änderung von
        Revisions-Eigenschaften im Hook
        <literal>pre-revprop-change</literal> nicht ermöglicht
        wurde.</para>

      <warning>
<!--
        <para>Revision properties are not under version control,
          so this command will permanently overwrite the previous
          log message.</para>
-->
        <para>Revisions-Eigenschaften sind nicht versionskontrolliert,
          so dass vorherige Protokolldateien durch diesen Befehl
          dauerhaft überschrieben werden.</para>
      </warning>

    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>

      <informalexample>
        <screen>
<xref linkend="svn.ref.svnadmin.sw.bypass_hooks" />
<xref linkend="svn.ref.svnadmin.sw.revision" />
</screen>
      </informalexample>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Beispiele</title>

<!--
      <para>Set the log message for revision 19 to the contents of
        the file <filename>msg</filename>:</para>
-->
      <para>Setzt die Protokollnachricht für Revision 19 auf den
        Inhalt der Datei <filename>msg</filename>:</para>

      <informalexample>
        <screen>
$ svnadmin setlog /var/svn/repos/ -r 19 msg
</screen>
      </informalexample>

    </refsect1>
  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.setrevprop">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>setrevprop</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin setrevprop</refname>
<!--
      <refpurpose>Set a property on a revision.</refpurpose>
-->
      <refpurpose>Setzt eine Eigenschaft für eine Revision.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin setrevprop REPOS_PATH -r REVISION NAME FILE</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
        <para>Set the property <replaceable>NAME</replaceable> on
          revision <replaceable>REVISION</replaceable> to the
          contents of <replaceable>FILE</replaceable>.  Use
          <option>- -use-pre-revprop-change-hook</option>
          or <option>- -use-post-revprop-change-hook</option> to
          trigger the revision property-related hooks (e.g., if
          you want an email notification sent from your <literal>post-revprop-change-hook</literal>).</para>
-->
        <para>Setzt die Eigenschaft <replaceable>NAME</replaceable>
          für die Revision <replaceable>REVISION</replaceable> auf
          den Inhalt von <replaceable>FILE</replaceable>.
          Verwenden Sie
          <option>--use-pre-revprop-change-hook</option> oder
          <option>--use-post-revprop-change-hook</option>, um die
          Hooks auszulösen, die mit Revisions-Eigenschaften in
          Verbindung stehen (falls Sie beispielsweise von Ihrem
          <literal>post-revprop-change-hook</literal> eine
          Benachrichtigung per E-Mail erhalten wollen).</para>

      </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>

      <informalexample>
        <screen>
<xref linkend="svn.ref.svnadmin.sw.revision" />
<xref linkend="svn.ref.svnadmin.sw.use_post_revprop_change_hook" />
<xref linkend="svn.ref.svnadmin.sw.use_pre_revprop_change_hook" />
</screen>
      </informalexample>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Beispiele</title>

<!--
      <para>The following sets the revision
      property <literal>repository-photo</literal> to the contents
      of the file <filename>sandwich.png</filename>:</para>
-->
      <para>Im Folgenden wird die Revisions-Eigenschaft
      <literal>repository-photo</literal> auf den Inhalt der Datei
      <filename>sandwich.png</filename> gesetzt:</para>

      <informalexample>
        <screen>
$ svnadmin setrevprop /var/svn/repos -r 0 repository-photo sandwich.png
</screen>
      </informalexample>

<!--
      <para>As you can see, <command>svnadmin setrevprop</command>
        has no output upon success.</para>
-->
      <para>Wie Sie sehen, gibt <command>svnadmin
        setrevprop</command> im Erfolgsfall nichts aus.</para>

    </refsect1>
  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.setuuid">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>setuuid</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin setuuid</refname>
<!--
      <refpurpose>Reset the repository UUID.</refpurpose>
-->
      <refpurpose>Setzt die Projektarchiv-UUID zurück.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin setuuid REPOS_PATH [NEW_UUID]</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>Reset the repository UUID for the repository located
        at <replaceable>REPOS_PATH</replaceable>.
        If <replaceable>NEW_UUID</replaceable> is provided, use
        that as the new repository UUID; otherwise, generate a
        brand-new UUID for the repository.</para>
-->
      <para>Setzt die Projektarchiv-UUID für das Projektarchiv bei
        <replaceable>REPOS_PATH</replaceable> zurück. Falls
        <replaceable>NEW_UUID</replaceable> angegeben ist, wird
        das als neue Projektarchiv-UUID verwendet; ansonsten wird
        eine nagelneue UUID für das Projektarchiv erzeugt.</para>

    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>

<!--
      <para>None</para>
-->
      <para>Keine</para>

    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Beispiele</title>

<!--
      <para>If you've <command>svnsync</command>ed <filename>/var/svn/repos</filename>
        to <filename>/var/svn/repos-new</filename> and intend to use <filename>repos-new</filename> as your
        canonical repository, you may want to change the UUID for
        <filename>repos-new</filename> to the UUID of <filename>repos</filename> so that your users don't
        have to check out a new working copy to accommodate the
        change:</para>
-->
      <para>Falls Sie <filename>/var/svn/repos</filename> mit
        <command>svnsync</command> nach
        <filename>/var/svn/repos-new</filename> synchronisiert
        haben und <filename>repos-new</filename> als Projektarchiv
        verwenden möchten, sollten Sie die UUID für
        <filename>repos-new</filename> auf die UUID von
        <filename>repos</filename> setzen, damit Ihre Benutzer
        keine neue Arbeitskopie auschecken müssen, um die Änderung
        wirksam zu machen:</para>

      <informalexample>
        <screen>
$ svnadmin setuuid /var/svn/repos-new 2109a8dd-854f-0410-ad31-d604008985ab
</screen>
      </informalexample>

<!--
      <para>As you can see, <command>svnadmin setuuid</command>
        has no output upon success.</para>
-->
      <para>Wie Sie sehen, gibt
        <command>svnadmin setuuid</command> im Erfolgsfall nichts
        aus.</para>

    </refsect1>
  </refentry>
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.unlock">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>subcommands</secondary>
      <tertiary>unlock</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin unlock</refname>
<!--
      <refpurpose>Unlock path in the repository directly.</refpurpose>
-->
      <refpurpose>Pfad direkt im Projektarchiv entsperren.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin unlock REPOS_PATH LOCKED_PATH USERNAME
        TOKEN</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Description</title>

<!--
      <para>Unlock <replaceable>LOCKED_PATH</replaceable> in the
        repository (as <replaceable>USERNAME</replaceable>) after
        verifying that the token associated with the lock
        matches <replaceable>TOKEN</replaceable>.</para>
-->
      <para>Entsperre <replaceable>LOCKED_PATH</replaceable> im
        Projektarchiv (als <replaceable>USERNAME</replaceable>)
        nachdem sichergestellt wurde, dass die zur Sperre gehörige
        Sperrmarke mit <replaceable>TOKEN</replaceable>
        übereinstimmt.</para>

    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
      <title>Options</title>
      <informalexample>
        <screen>
<xref linkend="svn.ref.svnadmin.sw.bypass_hooks" />
</screen>
      </informalexample>
    </refsect1>
  </refentry>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.upgrade">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>upgrade</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin upgrade</refname>
<!--
      <refpurpose>Upgrade a repository to the latest supported
        schema version.</refpurpose>
-->
      <refpurpose>Ein Projektarchiv auf die neueste unterstützte
        Schemaversion aktualisieren.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin upgrade REPOS_PATH</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>Upgrade the repository located
        at <replaceable>REPOS_PATH</replaceable> to the latest
        supported schema version.</para>
-->
      <para>Aktualisiert das Projektarchiv bei
        <replaceable>REPOS_PATH</replaceable> auf die neueste
        unterstützte Schemaversion.</para>

<!--
      <para>This functionality is provided as a convenience for
        repository administrators who wish to make use of new
        Subversion functionality without having to undertake a
        potentially costly full repository dump and load
        operation.  As such, the upgrade performs only the minimum
        amount of work needed to accomplish this while still
        maintaining the integrity of the repository.  While a dump
        and subsequent load guarantee the most optimized
        repository state, <command>svnadmin upgrade</command> does
        not.</para>
-->
      <para>Diese Funktionalität wird für
        Projektarchiv-Administratoren zur Verfügung gestellt, die
        neue Subversion-Funktionen verwenden wollen, ohne eine
        möglicherweise teure Auszug- und Ladeaktion durchführen zu
        müssen. Die Aktualisierung führt nur die dafür notwendigen
        Arbeiten aus und bewahrt dabei die Integrität des
        Projektarchivs. Während ein Auszug und das anschließende
        Laden den optimierten Projektarchiv-Zustand
        garantieren, kann <command>svnadmin upgrade</command> dies
        nicht gewährleisten.</para>

      <warning>
<!--
        <para>You should <emphasis>always</emphasis> back up your
          repository before upgrading.</para>
-->
        <para>Vor einer Aktualisierung sollten Sie
          <emphasis>immer</emphasis> eine Sicherung Ihres
          Projektarchivs vornehmen.</para>
      </warning>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>

<!--
      <para>None</para>
-->
      <para>Keine</para>

    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Beispiele</title>

<!--
      <para>Upgrade the repository at
        path <filename>/var/repos/svn</filename>:</para>
-->
      <para>Aktualisieren des Projektarchivs unter
        <filename>/var/repos/svn</filename>:</para>

      <informalexample>
        <screen>
$ svnadmin upgrade /var/repos/svn <!--
Repository lock acquired.
Please wait; upgrading the repository may take some time...

Upgrade completed.
-->
Exklusiven Zugriff auf das Projektarchiv erlangt.
Bitte warten, die Wiederherstellung des Projektarchivs kann einige Zeit dauern ..."

Aktualisierung abgeschlossen.
</screen>
      </informalexample>

    </refsect1>
  </refentry>

  <!-- ### FIXME: This could use a lot more explanation.  When
       should I use it?  What do I do if it fails? -->

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnadmin.c.verify">

    <indexterm>
      <primary>svnadmin</primary>
<!--
      <secondary>subcommands</secondary>
-->
      <secondary>Unterbefehle</secondary>
      <tertiary>verify</tertiary>
    </indexterm>

    <refnamediv>
      <refname>svnadmin verify</refname>
<!--
      <refpurpose>Verify the data stored in the repository.</refpurpose>
-->
      <refpurpose>Verifizieren der im Projektarchiv gespeicherten
        Daten.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnadmin verify REPOS_PATH</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Description</title>
-->
      <title>Beschreibung</title>

<!--
      <para>Run this command if you wish to verify the integrity
        of your repository.  This basically iterates through all
        revisions in the repository by internally dumping all
        revisions and discarding the output&mdash;it's a good idea
        to run this on a regular basis to guard against latent
        hard disk failures and <quote>bitrot.</quote>  If this
        command fails&mdash;which it will do at the first sign of
        a problem&mdash;that means your repository has at
        least one corrupted revision, and you should restore the
        corrupted revision from a backup (you did make a backup,
        didn't you?).</para>
-->
      <para>Rufen Sie diesen Befehl auf, wenn Sie die Integrität
        Ihres Projektarchivs verifizieren möchten. Im Wesentlichen
        werden dabei alle Revisionen im Projektarchiv durchlaufen,
        indem ein Auszug aller Revisionen vorgenommen wird, wobei
        die Ausgabe verworfen wird &ndash; es ist keine schlechte
        Idee, diesen Befehl regelmäßig laufen zu lassen, um
        Festplattenfehlern und <quote>schlechten Bits</quote>
        vorzubeugen. Schlägt dieser Befehl fehl &ndash; was er
        beim ersten Anzeichen eines Problems machen wird &ndash;
        bedeutet das, dass Ihr Projektarchiv mindestens eine
        schadhafte Revision hat, und Sie sollten die schadhafte
        Revision aus einer Sicherung wiederherstellen (Sie haben
        doch eine Sicherung gemacht, oder?).</para>

    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Options</title>
-->
      <title>Optionen</title>

      <informalexample>
        <screen>
<xref linkend="svn.ref.svnadmin.sw.memory_cache_size" />
<xref linkend="svn.ref.svnadmin.sw.quiet" />
<xref linkend="svn.ref.svnadmin.sw.revision" />
</screen>
      </informalexample>
    </refsect1>

    <!-- =============================================================== -->
    <refsect1>
<!--
      <title>Examples</title>
-->
      <title>Beispiele</title>

<!--
      <para>Verify a hung repository:</para>
-->
      <para>Verifizieren eines aufgehängten Projektarchivs:</para>

      <informalexample>
        <screen>
$ svnadmin verify /var/svn/repos/ <!--
* Verified revision 1729.
-->
* Revision 1729 verifiziert.
</screen>
      </informalexample>

    </refsect1>
  </refentry>
</reference>

<!--
local variables: 
sgml-parent-document: ("book.xml" "reference")
end:
-->
