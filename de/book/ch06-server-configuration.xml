<!-- -*- sgml -*- -->

<chapter id="svn.serverconfig">
<!-- 
  <title>Server Configuration</title>
-->
  <title>Konfiguration des Servers</title>

<!--
  <para>A Subversion repository can be accessed simultaneously by
    clients running on the same machine on which the repository
    resides using URLs carrying the <literal>file://</literal> scheme.
    But the typical Subversion setup involves a single server machine
    being accessed from clients on computers all over the
    office&mdash;or, perhaps, all over the world.</para>
-->
  <para>Der Zugriff auf ein Subversion-Projektarchiv kann problemlos
    von mehreren Clients, welche auf demselben Rechner wie Subversion
    laufen, gleichzeitig erfolgen &ndash; unter Verwendung von URLs
    mit dem <literal>file://</literal>-Schema. Aber typischerweise
    läuft der Subversion-Server auf einem separaten Rechner, und der
    Zugriff erfolgt von Clients auf vielen verschiedenen Computern aus
    der ganzen Firma &ndash; ja sogar der ganzen Welt.</para>

<!--
  <para>This chapter describes how to get your Subversion repository
    exposed outside its host machine for use by remote clients.  We
    will cover Subversion's currently available server mechanisms,
    discussing the configuration and use of each.  After reading this
    chapter, you should be able to decide which networking setup is
    right for your needs, as well as understand how to enable such a
    setup on your host computer.</para>
-->

  <para>In diesem Kapitel erklären wir, wie Sie ihr
    Subversion-Projektarchiv für den Fernzugriff von Clients fit
    machen. Wir werden ausführlich auf alle aktuell verfügbaren
    Servermechanismen von Subversion eingehen und über ihre
    Konfiguration und Verwendung reden.  Nach dem Lesen dieses
    Kapitels sollten Sie in der Lage sein, zu entscheiden, welche
    Netzwerk-Konfiguration Ihren Bedürfnissen entspricht und wie diese
    auf ihrem Server eingerichtet wird.</para>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.serverconfig.overview">

<!--
    <title>Overview</title>
-->
    <title>Überblick</title>

<!--
    <para>
      <indexterm>
        <primary>API</primary>
        <secondary>layers</secondary>
        <tertiary>Repository Access (RA) Layer</tertiary>
      </indexterm>Subversion was designed with an abstract repository
      access layer.  This means that a repository can be
      programmatically accessed by any sort of server process, and the
      client <quote>repository access</quote> API allows programmers
      to write plug-ins that speak relevant network protocols.  In
      theory, Subversion can use an infinite number of network
      implementations.  In practice, there are only two Subversion
      servers in widespread use today.</para>
-->
    <para>
      <indexterm>
        <primary>API</primary>
        <secondary>Schichten</secondary>
        <tertiary>Projektarchiv-Zugriffs-Schicht (RA)</tertiary>
      </indexterm>Subversion wurde mit einer abstrakten
      Projektarchiv-Zugriffs-Schicht entworfen. Dies bedeutet, dass
      auf ein Projektarchiv automatisiert von beliebigen
      Server-Prozessen zugegriffen werden kann, und die für Clients
      vorhandene <quote>Projektarchiv-Zugriffs</quote>-API
      (Programmierschnittstelle) erlaubt es Programmierern, Plugins zu
      entwickeln, die relevante Netzwerkprotokolle verstehen.
      Theoretisch ermöglicht dies Subversion, eine unbegrenzte Zahl an
      Netzwerkprotokollen zu verwenden. Praktisch gibt es heute
      allerdings nur zwei weitverbreitete Server.</para>

<!--
    <para>
      <indexterm>
        <primary>httpd</primary>
      </indexterm>
      <indexterm>
        <primary>Apache HTTP Server</primary>
        <see>httpd</see>
      </indexterm>Apache HTTP Server (also known
      as <command>httpd</command>) is an extremely popular web server;
      using the <command>mod_dav_svn</command> module, Apache can
      access a repository and make it available to clients via the
      WebDAV/DeltaV protocol, which is an extension of HTTP.  Because
      Apache is an extremely extensible server, it provides a number
      of features <quote>for free,</quote> such as encrypted SSL
      communication, logging, integration with a number of third-party
      authentication systems, and limited built-in web browsing of
      repositories.</para>
-->
    <para>
      <indexterm>
        <primary>httpd</primary>
      </indexterm>
      <indexterm>
        <primary>Apache HTTP-Server</primary>
        <see>httpd</see>
      </indexterm>Apache HTTP-Server (auch bekannt als
      <command>httpd</command>) ist ein sehr beliebter Webserver,
      welcher mittels des <command>mod_dav_svn</command>-Moduls auf
      Projektarchive zugreifen und diese für Clients verfügbar machen
      kann. Verwendet wird dabei das WebDAV/DeltaV-Protokoll, welches
      eine Erweiterung von HTTP ist.  Da Apache ein stark
      erweiterbarer Webserver ist, bietet er eine Menge an <quote>frei
      verfügbaren</quote> Funktionen/Modulen, wie mittels SSL
      verschlüsselte Verbindungen, Protokollierung, sowie die
      Integration diverser Authentifikationssysteme von Drittanbietern
      und einen eingeschränkten Web-Browser-gestützten
      Projektarchiv-Lesezugriff.</para>

<!--  
    <para>
      <indexterm>
        <primary>svnserve</primary>
      </indexterm>In the other corner is <command>svnserve</command>:
      a small, lightweight server program that speaks a custom
      protocol with clients.  Because its protocol is explicitly
      designed for Subversion and is stateful (unlike HTTP), it
      provides significantly faster network operations&mdash;but at
      the cost of some features as well.  While it can use SASL to
      provide a variety of authentication and encryption options, it
      has no logging or built-in web browsing.  It is, however,
      extremely easy to set up and is often the best option for small
      teams just starting out with Subversion.</para>
-->

    <para>
      <indexterm>
        <primary>svnserve</primary>
      </indexterm>In der anderen Ecke befindet sich
      <command>svnserve</command>: ein kleiner, leichtgewichtiger
      Server, der ein einfaches Netzwerkprotokoll für die Zugriffe der
      Clients verwendet. Da dieses Protokoll für die Verwendung mit
      Subversion entwickelt wurde und, im Gegensatz zu HTTP,
      zustandsorientiert ist, bietet es einen deutlich schnelleren
      Netzwerkzugriff &ndash; spart allerdings auch einige wichtige
      Funktionen aus. So bietet er eine SASL-basierte Verschlüsselung
      und Authentifikation, hat aber keine Protokollierungsfunktionen
      oder eingebauten Web-Browser-Zugriff. Wie auch immer, er ist
      extrem einfach einzurichten und für kleinere Teams, welche
      einfach nur schnell mit Subversion "loslegen" wollen, die beste
      Wahl.</para>

<!--
    <para>The network protocol which <command>svnserve</command>
      speaks may also be tunneled over an SSH connection.  This
      deployment option for <command>svnserve</command> differs quite
      a bit in features from a traditional <command>svnserve</command>
      deployment.  SSH is used to encrypt all communication.  SSH is
      also used exclusively to authenticate, so real system accounts
      are required on the server host (unlike
      vanilla <command>svnserve</command>, which has its own private
      user accounts).  Finally, because this setup requires that each
      user spawn a private, temporary <command>svnserve</command>
      process, it's equivalent (from a permissions point of view) to
      allowing a group of local users to all access the repository
      via <literal>file://</literal> URLs.  Path-based access control
      has no meaning, since each user is accessing the repository
      database files directly.</para>
-->

    <para>Das Netzwerkprotokoll, das <command>svnserve</command>
      spricht, kann auch über eine SSH-Verbindung getunnelt werden.
      Diese Option zum Einsatz von <command>svnserve</command>
      unterscheidet sich erheblich von der traditionellen Nutzung von
      <command>svnserve</command>. SSH wird zur Verschlüsselung der
      gesamten Kommunikation verwendet. Ebenso zur Authentifikation,
      was die Verwendung von realen Anwenderkonten auf dem
      Subversion-Server notwendig macht (anders als beim einfachen
      <command>svnserve</command>, der seine eigene Anwenderverwaltung
      hat).  Des weiteren ist es notwendig &ndash; da jeder
      angemeldete Nutzer einen eigenen
      <command>svnserve</command>-Prozess startet &ndash; einer Gruppe
      von lokalen Nutzern (aus Sicht der Rechtevergabe) vollen Zugriff
      auf das Projektarchiv via <literal>file://</literal> URLs zu
      ermöglichen. Pfad-basierte Zugriffskontrolle schließt sich in
      diesem Fall aus, da die Nutzer direkt auf die Datenbank-Dateien
      zugreifen.</para>

<!--
    <para><xref linkend="svn.serverconfig.overview.tbl-1"/> provides a
      quick summary of the three typical server deployments.</para>
-->

    <para><xref linkend="svn.serverconfig.overview.tbl-1"/> zeigt eine
      kurze Zusammenfassung der drei typischen
      Server-Konfigurationen.</para>

    <table id="svn.serverconfig.overview.tbl-1">
<!--
      <title>Comparison of Subversion server options</title>
-->
      <title>Vergleich der Serveroptionen für Subversion</title>
      <tgroup cols="4">
        <thead>
          <row>
<!--
            <entry>Feature</entry>
-->
            <entry>Funktion</entry>
            <entry>Apache + mod_dav_svn</entry>
            <entry>svnserve</entry>
<!--
            <entry>svnserve over SSH</entry>
-->
            <entry>svnserve via SSH</entry>
          </row>
        </thead>
        <tbody>
          <row>
<!--
            <entry>Authentication options</entry>
-->
            <entry>Authentifikationsmöglichkeiten</entry>
<!--
            <entry>HTTP Basic or Digest auth, X.509 certificates, LDAP,
              NTLM, or any other mechanism available to Apache httpd</entry>
-->
            <entry>HTTP Basic oder Digest Auth, X.509 Zertifikate,
              LDAP, NTLM, oder jede andere für den Apache Webserver
              verfügbare Methode</entry>
<!--
            <entry>CRAM-MD5 by default;  LDAP, NTLM, or any other mechanism
              available to SASL</entry>
-->
            <entry>CRAM-MD5 als Voreinstellung,  LDAP, NTLM oder jede
              andere für SASL verfügbare Methode</entry>
            <entry>SSH</entry>
          </row>

          <row>
<!--
            <entry>User account options</entry>
-->
            <entry>Anwenderkonfigurationen</entry>
<!--
            <entry>Private <quote>users</quote> file, or other mechanisms
            available to Apache httpd (LDAP, SQL, etc.)</entry>
-->
            <entry>private Datei <filename>users</filename> oder jede
              andere für den Apache Webserver verfügbare Methode
              (LDAP, SQL, usw.)</entry>
<!--
            <entry>Private <quote>users</quote> file, or other
              mechanisms available to SASL (LDAP, SQL, etc.)</entry>
-->
            <entry>private Datei <filename>users</filename> oder jede
              andere für SASL verfügbare Methode (LDAP, SQL,
              usw.)</entry> 
<!--
            <entry>System accounts</entry>
-->
            <entry>lokale Anwenderkonten auf dem Server</entry>
          </row>

          <row>
<!--
            <entry>Authorization options</entry>
-->
            <entry>Autorisierungsmöglichkeiten</entry>
<!--
            <entry>Read/write access can be granted over the whole
              repository, or specified per path</entry>
-->
            <entry>Lese-/Schreibzugriff auf das komplette
              Projektarchiv oder pfad-basierte Rechtevergabe</entry>
<!--
            <entry>Read/write access can be granted over the whole
              repository, or specified per path</entry>
-->
            <entry>Lese-/Schreibzugriff auf das komplette
              Projektarchiv oder pfad-basierte Rechtevergabe</entry>
<!--
            <entry>Read/write access only grantable over the whole
              repository</entry>
-->
            <entry>Lese-/Schreibzugriff nur auf ganzes Projektarchiv
              einstellbar</entry>
          </row>

          <row>
<!--
            <entry>Encryption</entry>
-->
            <entry>Verschlüsselung</entry>
<!--
            <entry>Available via optional SSL (https)</entry>
-->
            <entry>optional mit SSL (https)</entry>
<!--
            <entry>Available via optional SASL features</entry>
-->
            <entry>optional mit der SASL-Funktionen</entry>
<!--
            <entry>Inherent in SSH connection</entry>
-->
            <entry>Bestandteil der SSH-Verbindung</entry>
          </row>

          <row>
<!--
            <entry>Logging</entry>
-->
            <entry>Protokollierung</entry>
<!--
            <entry>High-level operational logging of Subversion
              operations plus detailed logging at the
              per-HTTP-request level</entry>
-->
            <entry>Protokollierung der Subversion-Aktivitäten auf
              hoher Ebene, dazu detaillierte Protokollierung auf der
              Ebene der HTTP-Anfragen</entry>
<!--
            <entry>High-level operational logging only</entry>
-->
            <entry>Nur Protokollierung der Aktivitäten auf hoher
              Ebenen</entry>
<!--
            <entry>High-level operational logging only</entry>
-->
            <entry>Nur Protokollierung der Aktivitäten auf hoher
              Ebenen</entry>
          </row>

          <row>
<!--
            <entry>Interoperability</entry>
-->
            <entry>Interoperabilität</entry>
<!--
            <entry>Accessible by other WebDAV clients</entry>
-->
            <entry>Zugriff durch andere WebDAV-Clients</entry>
<!--
            <entry>Talks only to svn clients</entry>
-->
            <entry>Verbindung nur mit svn-Clients möglich</entry>
<!--
            <entry>Talks only to svn clients</entry>
-->
            <entry>Verbindung nur mit svn-Clients möglich</entry>
          </row>

          <row>
<!--
            <entry>Web viewing</entry>
-->
            <entry>web-basierte Anzeige des Projektarchivs</entry>
<!--
            <entry>Limited built-in support, or via third-party tools
              such as ViewVC</entry>
-->
            <entry>eingeschränkte Unterstützung, alternativ mittels
              Programmen von Drittanbietern, wie etwa ViewVC,
              erweiterbar</entry>
<!--
            <entry>Only via third-party tools such as ViewVC</entry>
-->
            <entry>nur mittels Programmen von Drittanbietern, wie etwa
              ViewVC</entry>
<!--
            <entry>Only via third-party tools such as ViewVC</entry>
-->
            <entry>nur mittels Programmen von Drittanbietern, wie etwa
              ViewVC</entry>
          </row>

          <row>
<!--
            <entry>Master-slave server replication</entry>
-->
            <entry>Master-Slave-Server Replizierungen</entry>
<!--
            <entry>Transparent write-proxying available from slave to
              master</entry>
-->
            <entry>transparenter Schreib-Proxy vom Slave zum
              Master</entry> 
<!--
            <entry>Can only create read-only slave servers</entry>
-->
            <entry>beschränkt auf nur lesbare Slave-Server</entry>
<!--
            <entry>Can only create read-only slave servers</entry>
-->
            <entry>beschränkt auf nur lesbare Slave-Server</entry>
          </row>


          <row>
<!--
            <entry>Speed</entry>
-->
            <entry>Geschwindigkeit</entry>
<!--
            <entry>Somewhat slower</entry>
-->
            <entry>ein wenig langsamer</entry>
<!--
            <entry>Somewhat faster</entry>
-->
            <entry>ein wenig schneller</entry>
<!--
            <entry>Somewhat faster</entry>
-->
            <entry>ein wenig schneller</entry>
          </row>

          <row>
<!--
            <entry>Initial setup</entry>
-->
            <entry>Erstkonfiguration</entry>
<!--
            <entry>Somewhat complex</entry>
-->
            <entry>eher komplexer</entry>
<!--
            <entry>Extremely simple</entry>
-->
            <entry>sehr einfach</entry>
<!--
            <entry>Moderately simple</entry>
-->
            <entry>durchschnittlich</entry>
          </row>

        </tbody>
      </tgroup>
    </table>

  </sect1>




  <sect1 id="svn.serverconfig.choosing">

<!--
    <title>Choosing a Server Configuration</title>

    <para>So, which server should you use?  Which is best?</para>

    <para>Obviously, there's no right answer to that question.  Every
      team has different needs, and the different servers all
      represent different sets of trade-offs.  The Subversion project
      itself doesn't endorse one server or another, or consider either
      server more <quote>official</quote> than another.</para>

    <para>Here are some reasons why you might choose one deployment
      over another, as well as reasons you
      might <emphasis>not</emphasis> choose one.</para>
-->

    <title>Auswahl einer Serverkonfiguration</title>

    <para>Also dann, welchen Server sollten Sie nun verwenden? Welcher
      ist der beste?</para>

    <para>Auf diese Frage gibt es offensichtlich nicht die eine,
      richtige Antwort.  Denn jedes Team stellt andere Anforderungen,
      und die verschieden Server bieten unterschiedliche Funktionen
      und Voraussetzungen. Das Subversion-Projekt selbst bevorzugt
      keinen der genannten Server oder betrachtet einen als etwas
      <quote>offizieller</quote> als die anderen.</para>

    <para>Wir beleuchten nun die einzelnen Gründe, die für die eine
      oder andere Konstellation sprechen, ebenso auch Gründe, welche
      vielleicht <emphasis>gegen</emphasis> eine der Möglichkeiten
      sprechen.</para>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.choosing.svnserve">

<!--
      <title>The svnserve Server</title>
-->
      <title>Der svnserve-Server</title>

      <variablelist>
        <varlistentry>
<!--
          <term>Why you might want to use it:</term>
-->
          <term>Gründe, die für eine Nutzung sprechen:</term>
          <listitem>
            <itemizedlist>
              <listitem>
<!--
                <para>Quick and easy to set up.</para>
-->
                <para>Das Aufsetzen geht schnell und einfach.</para>
              </listitem>
              <listitem>
<!--
                <para>Network protocol is stateful and noticeably
                  faster than WebDAV.</para>
-->
                <para>Das verwendete Netzwerkprotokoll ist
                  zustandsorientiert und merklich schneller als
                  WebDAV.</para>
              </listitem>
              <listitem>
<!--
                <para>No need to create system accounts on
                  server.</para>
-->
                <para>Es müssen keine lokalen Anwenderkonten auf dem
                  Server eingerichtet werden.</para>
              </listitem>
              <listitem>
<!--
                <para>Password is not passed over the network.</para>
-->
                <para>Das Passwort wird nicht über das Netzwerk
                  übertragen.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        <varlistentry>
<!--
          <term>Why you might want to avoid it:</term>
-->
          <term>Gründe, warum Sie svnserve eventuell nicht verwenden
            wollen:</term>
          <listitem>
            <itemizedlist>
              <listitem>
<!--
                <para>By default, only one authentication method is
                  available, the network protocol is not encrypted,
                  and the server stores clear text passwords.  (All
                  these things can be changed by configuring SASL, but
                  it's a bit more work to do.)</para>
-->
                <para>Es gibt standardmäßig nur eine
                  Authentifikationsmethode, das Netzwerkprotokoll ist
                  unverschlüsselt und das Passwort wird vom Server im
                  Klartext gespeichert. (Mit SASL können diese
                  Probleme zwar umgangen werden, dies erfordert aber
                  eine etwas aufwendigere Konfiguration.)</para>
              </listitem>
              <listitem>
<!--
                <para>No advanced logging facilities.</para>
-->
                <para>Keine erweiterte Protokollierung.</para>
              </listitem>
              <listitem>
<!--
                <para>No built-in web browsing.  (You'd have to
                  install a separate web server and repository
                  browsing software to add this.)</para>
-->
                <para>Keinen eingebauten Web-Browser-gestützten
                  Lesezugriff. (Wenn Sie dies wünschen, müssen Sie einen
                  eigenständigen Webserver sowie
                  Projektarchiv-Browser-Software installieren.)</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
      </variablelist>

    </sect2>

    <sect2 id="svn.serverconfig.choosing.svn-ssh">
<!--
      <title>svnserve over SSH</title>
-->
      <title>svnserve über SSH</title>

      <variablelist>
        <varlistentry>
<!--
          <term>Why you might want to use it:</term>
-->
          <term>Gründe, die für eine Nutzung sprechen:</term>
          <listitem>
            <itemizedlist>
              <listitem>
<!--
                <para>The network protocol is stateful and noticeably
                  faster than WebDAV.</para>
-->
                <para>Das verwendete Netzwerkprotokoll ist
                  zustandsorientiert und merklich schneller als
                  WebDAV.</para>
              </listitem>
              <listitem>
<!--
                <para>You can take advantage of existing SSH accounts
                  and user infrastructure.</para>
-->
                <para>Sie können bestehende Anwenderzugänge des
                  SSH-Servers verwenden.</para>
              </listitem>
              <listitem>
<!--
                <para>All network traffic is encrypted.</para>
-->
                <para>Der gesamte Netzwerkverkehr ist
                  verschlüsselt.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        <varlistentry>
<!--
          <term>Why you might want to avoid it:</term>
-->
          <term>Gründe, warum Sie auf diese Konstellation eventuell
            verzichten wollen:</term>
          <listitem>
            <itemizedlist>
              <listitem>
<!--
                <para>Only one choice of authentication method is
                  available.</para>
-->
                <para>Es steht nur eine Authentifikationsmöglichkeit
                  zur Verfügung.</para>
              </listitem>
              <listitem>
<!--
                <para>No advanced logging facilities.</para>
-->
                <para>Keine erweiterten
                  Protokollierungsmöglichkeiten.</para>
              </listitem>
              <listitem>
<!--
                <para>It requires users to be in the same system
                  group, or use a shared SSH key.</para>
-->
                <para>Die verwendeten Nutzer müssen in derselben
                  Anwendergruppe (auf dem Server) sein, oder sich
                  einen SSH-Schlüssel teilen.</para>
              </listitem>
              <listitem>
<!--
                <para>If used improperly, it can lead to file
                  permission problems.</para>
-->
                <para>Bei unsachgemäßer Verwendung kann es zu
                  Problemen mit den Dateirechten kommen.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

      </variablelist>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.choosing.apache">

<!--
      <title>The Apache HTTP Server</title>
-->
      <title>Der Apache HTTP Server</title>

      <variablelist>
        <varlistentry>
<!--
          <term>Why you might want to use it:</term>
-->
          <term>Gründe, die für eine Nutzung sprechen:</term>
          <listitem>
            <itemizedlist>
              <listitem>
<!--
                <para>It allows Subversion to use any of the
                  numerous authentication systems already integrated
                  with Apache.</para>
-->
                <para>Subversion hat damit Zugriff auf alle für den
                  Apache verfügbaren Authentifikationsmethode (und das
                  sind viele).</para>
              </listitem>
              <listitem>
<!--
                <para>There is no need to create system accounts on
                  the server.</para>
-->
                <para>Es müssen auf dem Server keine Anwenderkonten
                  angelegt werden.</para>
              </listitem>
              <listitem>
<!--
                <para>Full Apache logging is available.</para>
-->
                <para>Apache protokolliert nach Wunsch (fast)
                  alles.</para>
              </listitem>
              <listitem>
<!--
                <para>Network traffic can be encrypted via SSL.</para>
-->
                <para>Der Netzwerkverkehr kann mittels SSL
                  verschlüsselt werden.</para>
              </listitem>
              <listitem>
<!--
                <para>HTTP(S) can usually go through corporate
                  firewalls.</para>
-->
                <para>In der Regel lässt sich das HTTP(S)-Protokoll
                  problemlos durch Firewalls routen.</para>
              </listitem>
              <listitem>
<!--
                <para>Built-in repository browsing is available via
                  web browser.</para>
-->
                <para>Auf das Projektarchiv kann lesend auch via
                  Web-Browser zugegriffen werden.</para>
              </listitem>
              <listitem>
<!--
                <para>The repository can be mounted as a network
                  drive for transparent version control (see <xref
                  linkend="svn.webdav.autoversioning"/>).</para>
-->
                <para>Das Projektarchiv lässt sich als Netzlaufwerk
                  einhängen (mounten). Änderungen an den Dateien
                  unterliegen trotzdem der Versionskontrolle.  (siehe
                  <xref linkend="svn.webdav.autoversioning"/>.)</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        <varlistentry>
<!--
          <term>Why you might want to avoid it:</term>
-->
          <term>Was gegen den Apache Webserver spricht:</term>
          <listitem>
            <itemizedlist>
              <listitem>
<!--
                <para>Noticeably slower than <command>svnserve</command>,
                  because HTTP is a stateless protocol and requires
                  more network turnarounds.</para>
-->
                <para>Er ist merklich langsamer als
                  <command>svnserve</command>, da HTTP als
                  zustandsloses Protokoll eine höhere Netzwerklast
                  verursacht.</para>
              </listitem>
              <listitem>
<!--
                <para>Initial setup can be complex.</para>
-->
                <para>Die Ersteinrichtung kann etwas schwierig
                  sein.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

      </variablelist>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.choosing.recommendations">

<!--
      <title>Recommendations</title>
-->
    <title>Empfehlungen</title>

<!--
      <para>In general, the authors of this book recommend a vanilla
        <command>svnserve</command> installation for small teams just
        trying to get started with a Subversion server; it's the
        simplest to set up and has the fewest maintenance issues.
        You can always switch to a more complex server
        deployment as your needs change.</para>
-->
      <para>Im Allgemeinen empfehlen die Autoren dieses Buches eine
        einfache <command>svnserve</command>-Installation für kleine
        Teams, denen an einer schnellen und unkomplizierten  Nutzung
        von Subversion gelegen ist.  Dies ist die Variante, welche
        sich am einfachsten einrichten und administrieren lässt.
        Sollte später Bedarf bestehen, so kann immer noch auf eine
        komplexere Servervariante gewechselt werden.</para>

<!--
      <para>Here are some general recommendations and tips, based on
        years of supporting users:</para>
-->
      <para>Es folgen einige allgemeine Empfehlungen und Tipps,
        basierend auf mehrjähriger Erfahrung in der
        Anwenderbetreuung:</para>

      <itemizedlist>
        <listitem>
<!--
          <para>If you're trying to set up the simplest possible server
            for your group, a vanilla <command>svnserve</command>
            installation is the easiest, fastest route.  Note,
            however, that your repository data will be transmitted in
            the clear over the network.  If your deployment is
            entirely within your company's LAN or VPN, this isn't an
            issue.  If the repository is exposed to the wide-open
            Internet, you might want to make sure that either the
            repository's contents aren't sensitive (e.g., it contains
            only open source code), or that you go the extra mile in
            configuring SASL to encrypt network communications.</para>
-->
          <para>Falls Sie für ihr Team die einfachste Servervariante
            suchen, dann kommen Sie mit einer Standard-Installation
            von <command>svnserve</command> am schnellsten ans Ziel.
            Beachten Sie aber, dass der Inhalt ihres Projektarchivs im
            Klartext über das Netzwerk übertragen wird. Wenn Sie nur
            innerhalb ihres Firmennetzwerks oder eines VPN arbeiten,
            so ist dies kein Beinbruch.  Ist ihr Projektarchiv
            allerdings vom Internet aus erreichbar, so sollten Sie
            eventuell sicherstellen, dass darin keine sensiblen Daten
            vorhanden sind (z.B., nur quelloffenen Code o.ä.), oder
            Sie legen noch einmal Hand an und verschlüsseln mittels
            SASL die Netzwerkverbindung zur ihrem
            Projektarchiv.</para>
        </listitem>

        <listitem>
<!--
          <para>If you need to integrate with existing legacy identity
            systems (LDAP, Active Directory, NTLM, X.509, etc.),
            you must use either the Apache-based server
            or <command>svnserve</command> configured with SASL.</para>
-->
          <para>Wenn Sie bereits über Systeme zur Authentifikation
            (LDAP, Active Directory, NTLM, X.509 usw.) verfügen und
            Subversion in diese integrieren möchten, so  bleibt Ihnen
            die Wahl zwischen einer Apache-gestützten Variante oder
            eines mit SASL vermählten <command>svnserve</command>.
          </para>
        </listitem>

        <listitem>
<!--
          <para>If you've decided to use either Apache or stock
            <command>svnserve</command>, create a single
            <command>svn</command> user on your system and run the
            server process as that user.  Be sure to make the
            repository directory wholly owned by the
            <command>svn</command> user as well.  From a security
            point of view, this keeps the repository data nicely
            siloed and protected by operating system filesystem
            permissions, changeable by only the Subversion server
            process itself.</para>
-->
          <para>Wenn Sie sich für die Verwendung von Apache oder eines
            Standard-<command>svnserve</command> entschieden haben,
            dann legen Sie auf ihrem System einen einfachen
            <command>svn</command>-Nutzer an und lassen den
            Serverprozess unter diesem Nutzer laufen.  Stellen Sie
            zudem sicher, dass das gesamte Verzeichnis mit dem
            Projektarchiv nur diesem <command>svn</command>-Nutzer
            gehört. Damit wird der Zugriff auf ihr Projektarchiv durch
            das Dateisystem des Serverbetriebssystems verwaltet, und
            nur der Serverprozess kann noch Änderungen daran
            vornehmen.</para>
        </listitem>

        <listitem>
<!--
          <para>If you have an existing infrastructure that is heavily based
            on SSH accounts, and if your users already have system
            accounts on your server machine, it makes sense to
            deploy an <command>svnserve</command>-over-SSH solution.
            Otherwise, we don't widely recommend this option to the
            public.  It's generally considered safer to have your
            users access the repository via (imaginary) accounts
            managed by <command>svnserve</command> or Apache, rather
            than by full-blown system accounts.  If your deep desire
            for encrypted communication still draws you to this
            option, we recommend using Apache with SSL or
            <command>svnserve</command> with SASL encryption
            instead.</para>
-->
          <para>Wenn Sie bereits über eine aus SSH-Zugängen bestehende
            Infrastruktur verfügen, und Ihre Nutzer auf dem
            Subversion-Server schon lokale Zugänge haben, dann ist die
            Verwendung einer
            <command>svnserve</command>-über-SSH-Lösung sinnvoll.  Wir
            empfehlen diese Variante allerdings nur sehr ungern.  Es
            ist im Allgemeinen sicherer, Ihren Nutzern nur durch
            <command>svnserve</command> oder Apache verwaltete Zugänge
            den Zugriff auf Ihr Projektarchiv zu ermöglichen und eben
            nicht mittels vollwertiger Anwenderzugänge auf dem
            Serversystem.  Falls der Wunsch nach einer starken
            Netzwerkverschlüsselung Sie auf die Verwendung des SSH
            gebracht hat, dann empfehlen wir Ihnen stattdessen die
            Verwendung von Apache und SSL, bzw. die Kombination aus
            <command>svnserve</command> und SASL-Verschlüsselung.
          </para>
        </listitem>

        <listitem>
<!--
          <para>Do <emphasis>not</emphasis> be seduced by the simple
            idea of having all of your users access a repository
            directly via <literal>file://</literal> URLs.  Even if the
            repository is readily available to everyone via a network
            share, this is a bad idea.  It removes any layers of
            protection between the users and the repository: users can
            accidentally (or intentionally) corrupt the repository
            database, it becomes hard to take the repository offline
            for inspection or upgrade, and it can lead to a mess of
            file permission problems (see <xref
            linkend="svn.serverconfig.multimethod"/>).  Note that this
            is also one of the reasons we warn against accessing
            repositories via <literal>svn+ssh://</literal>
            URLs&mdash;from a security standpoint, it's effectively
            the same as local users accessing via
            <literal>file://</literal>, and it can entail all the same
            problems if the administrator isn't careful.</para>
-->
          <para>Lassen Sie sich bitte <emphasis>nicht</emphasis> von
            der Idee verführen, allen Ihren Nutzern direkten Zugriff
            auf das Projektarchiv mittels der
            <literal>file://</literal>-Methode zu geben.  Auch wenn
            der Zugriff auf das Projektarchiv durch eine
            Netzwerkfreigabe erfolgt, bleibt es immer noch eine
            schlechte Idee.  Dadurch wird jeglicher Sicherheitspuffer
            zwischen dem Nutzer und dem Projektarchiv entfernt: Ein
            Anwender kann ohne (oder auch mit) Absicht die Datenbank
            des Projektarchivs beschädigen.  Es wird zudem schwierig,
            das Projektarchiv offline zu nehmen um eine Inspektion
            oder ein Upgrade durchzuführen.  Zudem kann es Ihnen eine
            Menge Probleme mit den Dateirechten einbringen (siehe
            <xref linkend="svn.serverconfig.multimethod"/>).  Beachten
            Sie bitte auch, dass dies einer der Gründe ist, warum wir
            vor der Verwendung der
            <literal>svn+ssh://</literal>-Methode für den
            Projektarchiv-Zugriff warnen. Vom Standpunkt der
            Sicherheit ist dies effektiv dasselbe wie die Verwendung
            von <literal>file://</literal> für den Zugriff durch
            lokale Anwender und kann zu denselben Problemen führen,
            wenn der Administrator nicht alle Vorsicht walten lässt.
          </para>
        </listitem>
      </itemizedlist>

    </sect2>

  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.serverconfig.svnserve">

<!--
    <title>svnserve, a Custom Server</title>

    <para>
      <indexterm>
        <primary>svnserve</primary>
      </indexterm>The <command>svnserve</command> program is a lightweight
      server, capable of speaking to clients over TCP/IP using a
      custom, stateful protocol.  Clients contact an
      <command>svnserve</command> server by using URLs that begin with
      the <literal>svn://</literal> or <literal>svn+ssh://</literal>
      scheme.  This section will explain the different ways of running
      <command>svnserve</command>, how clients authenticate themselves
      to the server, and how to configure appropriate access control
      to your repositories.</para>
 -->     

    <title>svnserve, ein maßgefertigter Server</title>

    <para>
      <indexterm>
        <primary>svnserve</primary>
      </indexterm>Das Programm <command>svnserve</command> ist ein
      leichtgewichtiger Server, welcher für die Kommunikation mit den
      Clients ein auf TCP/IP basierendes, zustandsorientiertes
      Protokoll verwendet. Um sich mit dem Server zu verbinden,
      verwenden die Clients entweder das <literal>svn://</literal>-
      oder das <literal>svn+ssh://</literal>-Schema. In diesem
      Abschnitt behandeln wir die unterschiedlichen Möglichkeiten,
      <command>svnserve</command> einzusetzen, wie sich die Clients am
      Server authentisieren und wie die passenden Zugriffsrechte zum
      Projektarchiv korrekt eingerichtet werden.</para>


    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.svnserve.invoking">
<!--
      <title>Invoking the Server</title>
-->
      <title>Der Serverstart</title>

<!--
      <para>
        <indexterm>
          <primary>svnserve</primary>
          <secondary>running</secondary>
        </indexterm>There are a few different ways to run the
        <command>svnserve</command> program:</para>
-->
      <para>
        <indexterm>
          <primary>svnserve</primary>
          <secondary>betreiben</secondary>
        </indexterm>Es gibt mehrere Möglichkeiten,
        <command>svnserve</command> zu starten:</para>

      <itemizedlist>
        <listitem>
<!--
          <para>Run <command>svnserve</command> as a standalone
            daemon, listening for requests.</para>
-->
          <para><command>svnserve</command> als eigenständigen Dienst
            (engl. daemon) starten und auf Anfragen von Clients
            reagieren lassen.</para>
        </listitem>
        <listitem>
<!--
          <para>Have the Unix <command>inetd</command> daemon
            temporarily spawn <command>svnserve</command> whenever a
            request comes in on a certain port.</para>
-->
          <para><command>svnserve</command> bei Bedarf mit Hilfe des
            Unix-Dienstes <command>inetd</command> starten, wenn auf
            einem festgelegten Port Anfragen eines svn-Clients
            ankommen.</para>
        </listitem>
        <listitem>
<!--
          <para>Have SSH invoke a temporary <command>svnserve</command>
            over an encrypted tunnel.</para>
-->
          <para>Einen SSH-Server verwenden, um
            <command>svnserve</command> fallweise über einen
            verschlüsselten SSH-Tunnel zu betreiben.</para>
        </listitem>
        <listitem>
<!--
          <para>Run <command>svnserve</command> as a Microsoft Windows
            service.</para>
-->
          <para><command>svnserve</command> als
            Microsoft-Windows-Dienst laufen lassen.</para>
        </listitem>
        <listitem>
<!--
          <para>Run <command>svnserve</command> as a launchd job.</para>
-->
          <para><command>svnserve</command> als launchd-Job laufen
            lassen.</para>
        </listitem>
      </itemizedlist>

<!--
      <para>The following sections will cover in detail these various
        deployment options for <command>svnserve</command>.</para>
-->
      <para>Die folgenden Abschnitte werden diese Einsatzoptionen für
        <command>svnserve</command> detailliert erörtern.</para>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.svnserve.invoking.daemon">
<!--
        <title>svnserve as daemon</title>
-->
        <title>svnserve als Unix-Dienst</title>

<!--
        <para>
          <indexterm>
            <primary>svnserve</primary>
            <secondary>running</secondary>
            <tertiary>daemon mode</tertiary>
          </indexterm>The easiest option is to run <command>svnserve</command>
          as a standalone <quote>daemon</quote> process.  Use the
          <option>-d</option> option for this:</para>
-->
        <para>
          <indexterm>
            <primary>svnserve</primary>
            <secondary>betreiben</secondary>
            <tertiary>Daemon-Modus</tertiary>
          </indexterm>Die einfachste Variante ist,
          <command>svnserve</command> als eigenständigen (Unix-)Dienst
          laufen zu lassen. Verwenden Sie hierfür die
          <option>-d</option> Option beim Aufruf:
        </para>

<!--
        <informalexample>
          <screen>
$ svnserve -d
$               # svnserve is now running, listening on port 3690
</screen>
        </informalexample>
-->
        <informalexample>
          <screen>
$ svnserve -d
$               # svnserve läuft nun als Dienst und lauscht auf Port 3690
</screen>
        </informalexample>


<!--
        <para>When running <command>svnserve</command> in daemon mode,
          you can use the <option>- -listen-port</option> and
          <option>- -listen-host</option> options to customize the
          exact port and hostname to <quote>bind</quote> to.</para>
-->
        <para>Wird <command>svnserve</command> als Dienst betrieben,
          können Sie mit den Optionen  <option>--listen-port</option>
          und <option>--listen-host</option> festlegen, auf welchem
          Port und unter welchem Hostnamen er lauschen soll.</para>

<!--
        <para>Once we successfully start <command>svnserve</command>
          as explained previously, it makes every repository on your
          system available to the network.  A client needs to specify
          an <emphasis>absolute</emphasis> path in the repository URL.
          For example, if a repository is located at
          <filename>/var/svn/project1</filename>, a client would reach
          it via <uri>svn://host.example.com/var/svn/project1</uri>.
          To increase security, you can pass the <option>-r</option>
          option to <command>svnserve</command>, which restricts it to
          exporting only repositories below that path.  For
          example:</para>
-->
        <para>Wurde <command>svnserve</command> auf diese Weise
          erfolgreich gestartet, stehen nun alle Projektarchive auf
          dem Server für Nutzer im Netzwerk zur Verfügung.  Für einen
          Zugriff muss ein Client den <emphasis>absoluten</emphasis>
          Pfad zum Projektarchiv im URL angeben. Ist das Projektarchiv
          beispielsweise im Verzeichnis
          <filename>/var/svn/project1</filename> gespeichert, so sieht
          ein entsprechender URL für den Zugriff folgendermaßen aus:
          <uri>svn://host.example.com/var/svn/project1</uri>.  Um die
          Sicherheit zu erhöhen, kann <command>svnserve</command> beim
          Start mit der Option <option>-r</option> auf ein bestimmtes
          Verzeichnis beschränkt werden, so dass nur noch die darin
          liegenden Projektarchive im Netz verfügbar sind. Ein
          Beispiel:</para>

        <informalexample>
          <screen>
$ svnserve -d -r /var/svn
&hellip;
</screen>
        </informalexample>

<!--
        <para>Using the <option>-r</option> option effectively
          modifies the location that the program treats as the root of
          the remote filesystem space.  Clients then use URLs that
          have that path portion removed from them, leaving much
          shorter (and much less revealing) URLs:</para>
-->
        <para>Mit der <option>-r</option>-Option wird festgelegt,
          welches Verzeichnis vom <command>svnserve</command> bei
          Anfragen als Wurzelverzeichnis (engl. root) verwendet wird.
          Ein Client muss nun in seiner URL nur noch den Pfad relativ
          zum neuen Wurzelverzeichnis angeben, was die URL erheblich
          verkürzt und die Verzeichnisstruktur etwas
          verschleiert:</para>

        <informalexample>
          <screen>
$ svn checkout svn://host.example.com/project1
&hellip;
</screen>
        </informalexample>

      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.svnserve.invoking.inetd">
<!--
        <title>svnserve via inetd</title>
-->
        <title>svnserve über inetd starten</title>

<!--
        <para>
          <indexterm>
            <primary>svnserve</primary>
            <secondary>running</secondary>
            <tertiary>via inetd</tertiary>
          </indexterm>
          <indexterm>
            <primary>inetd</primary>
          </indexterm>If you want <command>inetd</command> to launch the
          process, you need to pass the <option>-i</option>
          (<option>- -inetd</option>) option.  In the following
          example, we've shown the output from running
          <literal>svnserve -i</literal> at the command line, but note
          that this isn't how you actually start the daemon; see the
          paragraphs following the example for how to configure
          <command>inetd</command> to start
          <command>svnserve</command>.</para>
-->
        <para>
          <indexterm>
            <primary>svnserve</primary>
            <secondary>betreiben</secondary>
            <tertiary>über inetd</tertiary>
          </indexterm>
          <indexterm>
            <primary>inetd</primary>
          </indexterm>Wenn Sie <command>inetd</command> zum Starten
          des Prozesses verwenden wollen, so übergeben Sie
          <command>svnserve</command> beim Aufruf die Option
          <option>-i</option> (<option>--inetd</option>). Im folgenden
          Beispiel sehen wir die Ausgaben beim Aufruf von
          <literal>svnserve -i</literal> auf der Befehlszeile.
          Beachten Sie aber, dass dies nicht der Weg ist, wie der
          Dienst normalerweise gestartet wird &ndash; eine genaue
          Beschreibung, wie <command>svnserve</command> über
          <command>inetd</command> gestartet wird, folgt
          anschließend.</para>

        <informalexample>
          <screen>
$ svnserve -i
( success ( 2 2 ( ) ( edit-pipeline svndiff1 absent-entries commit-revprops d\
epth log-revprops atomic-revprops partial-replay ) ) )
</screen>
        </informalexample>

<!--
        <para>When invoked with the <option>- -inetd</option> option,
          <command>svnserve</command> attempts to speak with a
          Subversion client via <filename>stdin</filename> and
          <filename>stdout</filename> using a custom protocol.  This
          is the standard behavior for a program being run via
          <command>inetd</command>.  The IANA has reserved port 3690
          for the Subversion protocol, so on a Unix-like system you
          can add lines to <filename>/etc/services</filename> such as
          these (if they don't already exist):</para>
-->
        <para>Mit der <option>--inetd</option>-Option versucht
          <command>svnserve</command> mit dem Subversion-Client unter
          Verwendung eines speziellen Protokolls via
          <filename>stdin</filename> und <filename>stdout</filename>
          zu sprechen.  Dies ist der normale Weg für ein Programm,
          welches über <command>inetd</command> gestartet wurde. Die
          IANA (Internet Assigned Numbers Authority) hat für das
          Subversion-Protokoll den Port 3690 reserviert &ndash; auf
          einem Unix-ähnlichen System fügen Sie einfach folgende
          Zeilen (wenn noch nicht vorhanden) in die Datei
          <filename>/usw/services</filename> ein:</para>

        <informalexample>
          <programlisting>
svn           3690/tcp   # Subversion
svn           3690/udp   # Subversion
</programlisting>
        </informalexample>

<!--
        <para>If your system is using a classic Unix-like
          <command>inetd</command> daemon, you can add this line to
          <filename>/etc/inetd.conf</filename>:</para>
-->
        <para>Wenn Sie den klassischen Unix-<command>inetd</command>
          verwenden, können Sie die folgende Zeile in die Datei
          <filename>/usw/inetd.conf</filename> einfügen:</para>

        <informalexample>
          <programlisting>
svn stream tcp nowait svnowner /usr/bin/svnserve svnserve -i
</programlisting>
        </informalexample>

<!--
        <para>Make sure <quote>svnowner</quote> is a user that has
          appropriate permissions to access your repositories.  Now,
          when a client connection comes into your server on port
          3690, <command>inetd</command> will spawn an
          <command>svnserve</command> process to service it.  Of
          course, you may also want to add <option>-r</option> to the
          configuration line as well, to restrict which repositories
          are exported.</para>
-->
        <para>Stellen Sie sicher, dass <quote>svnowner</quote> der
          Nutzer ist, welcher alle notwendigen Zugriffsrechte auf ihre
          Projektarchive hat.  Kommt nun eine Anfrage eines
          Subversion-Clients auf Port 3690 herein, so wird
          <command>inetd</command> einen
          <command>svnserve</command>-Prozess starten, um die Anfrage
          zu bedienen. Wahrscheinlich möchten Sie noch die
          <option>-r</option>-Option zur oben genannten Zeile
          hinzufügen, um einzuschränken, welche Projektarchive
          exportiert werden dürfen.</para>

      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.svnserve.invoking.xinetd">
<!--
        <title>svnserve via xinetd</title>
-->
        <title>svnserve über xinetd</title>

<!--
        <para>
          <indexterm>
            <primary>svnserve</primary>
            <secondary>running</secondary>
            <tertiary>via xinetd</tertiary>
          </indexterm>
          <indexterm>
            <primary>xinetd</primary>
          </indexterm>Some operating systems provide the <command>xinetd</command> 
          daemon as an alternative to <command>inetd</command>.
          Fortunately, you can configure <command>svnserve</command> for
          use with <command>xinetd</command>, too.  To do so, you'll need to
          create a configuration file <filename>/etc/xinetd.d/svn</filename>
          with the following contents:</para>
-->
        <para>
          <indexterm>
            <primary>svnserve</primary>
            <secondary>betreiben</secondary>
            <tertiary>über xinetd</tertiary>
          </indexterm>
          <indexterm>
            <primary>xinetd</primary>
          </indexterm>Einige Betriebssysteme stellen den Daemon
          <command>xinetd</command> als Alternative zu
          <command>inetd</command> zur Verfügung. Glücklicherweise
          können Sie <command>svnserve</command> auch für die
          Verwendung mit <command>xinetd</command> konfigurieren. Dazu
          müssen Sie eine Konfigurationsdatei
          <filename>/etc/xinetd.d/svn</filename> mit dem folgenden
          Inhalt anlegen:</para>

        <informalexample>
          <programlisting>
# default: on<!--
# description: Subversion server for the svn protocol
-->
# description: Subversion-Server für das svn-Protokoll
service svn
{
  disabled        = no
  port            = 3690
  socket_type     = stream
  protocol        = tcp
  wait            = no
  user            = subversion
  server          = /usr/local/bin/svnserve
  server_args     = -i -r <replaceable>/path/to/repositories</replaceable>
}
</programlisting>
        </informalexample>

<!--
        <para>Be sure that your <filename>/etc/services</filename>
          configuration file contains the definition of the port used
          for the <literal>svn</literal> protocol (as described in
          <xref linkend="svn.serverconfig.svnserve.invoking.inetd"
          />), otherwise the daemon will not start correctly.</para>
-->
        <para>Stellen Sie sicher, dass Ihre Konfigurationsdatei
          <filename>/etc/services</filename> die Definition für den
          Port beinhaltet, der für das Protokoll
          <literal>svn</literal> verwendet wird (wie in
          <xref linkend="svn.serverconfig.svnserve.invoking.inetd"
          /> beschrieben), da der Daemon ansonsten nicht korrekt
          startet.</para>

<!--
        <para>In Redhat-based distributions, you then need to activate
          the new service using <command>chkconfig - -add
          svn</command>.  After doing so, you will be able to enable
          and disable the server using the graphical configuration
          tools.</para>
-->
        <para>In Redhat-basierten Distributionen müssen Sie den neuen
          Dienst mit <command>chkconfig --add svn</command>
          aktivieren. Anschließend können Sie den Server unter
          Verwendung der graphischen Konfigurations-Werkzeuge ein- und
          ausschalten.</para>

      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.svnserve.invoking.tunnel">
<!--
        <title>svnserve over a tunnel</title>
-->
        <title>svnserve über einen Tunnel</title>

<!--
        <para>
          <indexterm>
            <primary>svnserve</primary>
            <secondary>running</secondary>
            <tertiary>tunnel mode</tertiary>
          </indexterm>Another way to invoke <command>svnserve</command> is in
          tunnel mode, using the <option>-t</option> option.  This
          mode assumes that a remote-service program such as
          <command>rsh</command> or <command>ssh</command> has
          successfully authenticated a user and is now invoking a
          private <command>svnserve</command> process <emphasis>as
          that user</emphasis>.  (Note that you, the user, will
          rarely, if ever, have reason to invoke
          <command>svnserve</command> with the <option>-t</option> at
          the command line; instead, the SSH daemon
          does so for you.)  The <command>svnserve</command> program
          behaves normally (communicating via
          <filename>stdin</filename> and <filename>stdout</filename>)
          and assumes that the traffic is being automatically
          redirected over some sort of tunnel back to the client.
          When <command>svnserve</command> is invoked by a tunnel
          agent like this, be sure that the authenticated user has
          full read and write access to the repository database files.
          It's essentially the same as a local user accessing the
          repository via <literal>file://</literal> URLs.</para>
-->
        <para>
          <indexterm>
            <primary>svnserve</primary>
            <secondary>betreiben</secondary>
            <tertiary>Tunnel-Modus</tertiary>
          </indexterm>Eine weitere Möglichkeit ist,
          <command>svnserve</command> mittels der
          <option>-t</option>-Option im Tunnel-Modus aufzurufen.  Bei
          diesem Aufruf wird vorausgesetzt, dass ein anderes Programm
          für den Fernzugriff &ndash; etwa <command>rsh</command>
          oder <command>ssh</command> &ndash; den Nutzer bereits
          erfolgreich authentisiert hat, um nun einen privaten
          <command>svnserve</command>-Prozess als <emphasis>dieser
            Nutzer</emphasis> zu starten. (Beachten Sie, dass für Sie
          als Nutzer selten bis nie die Notwendigkeit bestehen wird,
          <command>svnserve</command> mit der
          <option>-t</option>-Option von Hand auf der Kommandozeile
          aufzurufen &ndash; der SSH-Dienst wird dies in der Regel für
          Sie machen.) <command>svnserve</command> wird sich nun
          normal verhalten (Abwicklung der Kommunikation über
          <filename>stdin</filename> und <filename>stdout</filename>)
          und davon ausgehen, dass alle Daten mit Hilfe des Tunnels
          zum Client weitergeleitet werden. Wird
          <command>svnserve</command> wie in diesem Fall durch ein
          Tunnel-Programm aufgerufen, ist es notwendig, dass der
          aufrufende Nutzer volle Lese- und Schreibrechte  auf die
          Dateien der Projektarchiv-Datenbank hat.  Es verhält sich
          dabei im Grunde genommen so, als wenn der Nutzer mit einem
          <literal>file://</literal>-URL auf ein Projektarchiv
          zugreifen würde.</para>

<!--
        <para>This option is described in much more detail later in
          this chapter in <xref
          linkend="svn.serverconfig.svnserve.sshauth"/>.</para>
-->
        <para>Wir werden diese Option noch genauer in diesem Kapitel
          behandeln, und zwar in <xref
            linkend="svn.serverconfig.svnserve.sshauth"/>.</para>

      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.svnserve.invoking.winservice">
<!--
        <title>svnserve as a Windows service</title>
-->
        <title>svnserve als ein Dienst unter Windows</title>

<!--
        <para>
          <indexterm>
            <primary>svnserve</primary>
            <secondary>running</secondary>
            <tertiary>as Windows service</tertiary>
          </indexterm>If your Windows system is a descendant of Windows NT
          (Windows 2000 or newer), you can
          run <command>svnserve</command> as a standard Windows
          service.  This is typically a much nicer experience than
          running it as a standalone daemon with
          the <option>- -daemon</option>  (<option>-d</option>) option.
          Using daemon mode requires launching a console, typing a
          command, and then leaving the console window running
          indefinitely.  A Windows service, however, runs in the
          background, can start at boot time automatically, and can be
          started and stopped using the same consistent administration
          interface as other Windows services.</para>
-->
        <para>
          <indexterm>
            <primary>svnserve</primary>
            <secondary>betreiben</secondary>
            <tertiary>als Windows-Dienst</tertiary>
          </indexterm>Gehört ihr Windows zur NT-Familie (Windows oder
          neuer), so können Sie <command>svnserve</command> auch als
          normalen Windows-Dienst laufen lassen. Dies ist wesentlich
          sinnvoller, als die Option <option>--daemon</option>
          (<option>-d</option>) zu verwenden und ihn als
          selbstständigen Dienst zu betreiben. Sie müssten dann immer
          eine Konsole (cmd) öffnen, den passenden Befehl aufrufen und
          die Konsole anschließend die ganze Zeit geöffnet lassen. Ein
          Windows-Dienst dagegen läuft im Hintergrund, kann bereits
          beim Hochfahren automatisch starten und lässt sich wie jeder
          andere Windows-Dienst mit demselben Administrationsprogramm
          starten und stoppen.</para>

<!--
        <para>You'll need to define the new service using the
          command-line tool <command>SC.EXE</command>.  Much like
          the <command>inetd</command> configuration line, you must
          specify an exact invocation of <command>svnserve</command>
          for Windows to run at startup time:</para>
-->
        <para>Es ist notwendig, den neuen Windows-Dienst unter
          Verwendung des Kommandozeilenprogramms
          <command>SC.EXE</command> einzurichten.  Ähnlich der
          <command>inetd</command>-Konfigurationszeile müssen Sie den
          genauen Aufruf für den Start von <command>svnserve</command>
          festlegen:</para>

        <informalexample>
          <screen>
C:\&gt; sc create svn
        binpath= "C:\svn\bin\svnserve.exe --service -r C:\repos"
        displayname= "Subversion Server"
        depend= Tcpip
        start= auto
</screen>
        </informalexample>

<!--
        <para>This defines a new Windows service named
          <literal>svn</literal> which executes a particular
          <command>svnserve.exe</command> command when started (in
          this case, rooted at <filename>C:\repos</filename>).  There
          are a number of caveats in the prior example,
          however.</para>
-->
        <para>Hiermit erzeugen Sie einen neuen Windows-Dienst mit dem
          Namen <literal>svn</literal>, welcher jedes Mal das Programm
          <command>svnserve.exe</command> startet (und in diesem Fall
          <filename>C:\repos</filename> als Wurzelverzeichnis
          verwendet).  In diesem Beispiel müssen jedoch einige
          wichtige Punkte beachtet werden.</para>

<!--
        <para>First, notice that the <command>svnserve.exe</command>
          program must always be invoked with the
          <option>- -service</option> option.  Any other options to
          <command>svnserve</command> must then be specified on the
          same line, but you cannot add conflicting options such as
          <option>- -daemon</option>
          (<option>-d</option>), <option>- -tunnel</option>,
          or <option>- -inetd</option> (<option>-i</option>).  Options
          such as <option>-r</option>
          or <option>- -listen-port</option> are fine, though.  Second,
          be careful about spaces when invoking
          the <command>SC.EXE</command> command: the <literal>key=
          value</literal> patterns must have no spaces between
          <literal>key=</literal> and must have exactly one space
          before the <literal>value</literal>.  Lastly, be careful
          about spaces in your command line to be invoked.  If a
          directory name contains spaces (or other characters that
          need escaping), place the entire inner value of
          <literal>binpath</literal> in double quotes, by escaping
          them:</para>
-->
        <para>Als erstes ist es wichtig, dass das Programm
          <command>svnserve.exe</command> immer mit der Option
          <option>--service</option> aufgerufen wird.  Alle weiteren
          Optionen müssen in derselben Zeile folgen, allerdings dürfen
          sich widersprechende Option nicht verwendet werden &ndash;
          wie etwa <option>--daemon</option> (<option>-d</option>),
          <option>--tunnel</option> oder <option>--inetd</option>
          (<option>-i</option>).  Optionen wie <option>-r</option>
          oder <option>--listen-port</option> sind hingegen in
          Ordnung. Zweitens, seien Sie beim Aufruf von
          <command>SC.EXE</command> mit Leerzeichen vorsichtig: Beim
          Schreiben der <literal>Schlüssel= Wert</literal>-Zeile darf
          zwischen <literal>Schlüssel</literal> und
          <literal>=</literal> kein Leerzeichen stehen, vor
          <literal>Wert</literal> muss genau ein Leerzeichen stehen.
          Seien Sie zuletzt auch bei der Verwendung von Leerzeichen
          innerhalb ihres Kommandozeilen-Aufrufes vorsichtig. Sollten
          Verzeichnisangaben etwa Leerzeichen (oder andere zu
          schützende Zeichen) enthalten, so umschließen Sie sie mit
          zusätzlichen doppelten Anführungszeichen:</para>

        <informalexample>
          <screen>
C:\&gt; sc create svn
        binpath= "\"C:\program files\svn\bin\svnserve.exe\" --service -r C:\repos"
        displayname= "Subversion Server"
        depend= Tcpip
        start= auto
</screen>
        </informalexample>

<!--
        <para>Also note that the word <literal>binpath</literal> is
          misleading&mdash;its value is a <emphasis>command
          line</emphasis>, not the path to an executable.  That's why
          you need to surround it with quotes if it contains
          embedded spaces.</para>
-->
        <para>Beachten Sie bitte auch, dass das Wort
          <literal>binpath</literal> etwas irreführend ist &ndash;
          sein Wert ist eine <emphasis>Kommandozeile</emphasis> und
          nicht der Pfad zu einem Programm. Dies ist der Grund, warum
          Sie vorhandene Leerzeichen mit doppelten Anführungszeichen
          schützen müssen.</para>

<!--
        <para>Once the service is defined, it can be stopped, started,
          or queried using standard GUI tools (the Services
          administrative control panel), or at the command
          line:</para>
-->
        <para>Ist der Dienst erst einmal eingerichtet, können Sie ihn mit
          Hilfe von grafischen Programmen (etwa der Microsoft
          Management Console) stoppen, starten oder seinen Status
          abfragen. Alternativ steht ihnen auch die Kommandozeile zur
          Verfügung:</para>

        <informalexample>
          <screen>
C:\&gt; net stop svn
C:\&gt; net start svn
</screen>
        </informalexample>

<!--
        <para>The service can also be uninstalled (i.e., undefined) by
          deleting its definition:  <userinput>sc delete svn</userinput>.
          Just be sure to stop the service first!
          The <command>SC.EXE</command> program has many other
          subcommands and options; run <userinput>sc /?</userinput> to
          learn more about it.</para>
-->
        <para>Der Dienst kann natürlich auch wieder deinstalliert
          werden, indem Sie den Befehl <userinput>sc delete
            svn</userinput> aufrufen.  Stoppen Sie den Dienst aber
          vorher!  Das Programm <command>SC.EXE</command> kennt noch
          etliche andere nützliche Optionen und Parameter, ein Aufruf
          von <userinput>sc /?</userinput> verrät
          ihnen, welche das sind.</para>

      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.svnserve.invoking.launchd">
<!--
        <title>svnserve as a launchd job</title>
-->
        <title>svnserve als ein launchd-Job</title>

<!--
        <para>
          <indexterm>
            <primary>svnserve</primary>
            <secondary>running</secondary>
            <tertiary>via launchd</tertiary>
          </indexterm>
          <indexterm>
            <primary>launchd</primary>
          </indexterm>Mac OS X (10.4 and higher) uses <command>launchd</command>
          to manage processes (including daemons) both system-wide and
          per-user.  A <command>launchd</command> job is specified by
          parameters in an XML property list file, and
          the <command>launchctl</command> command is used to manage
          the lifecycle of those jobs.</para>
-->
        <para>
          <indexterm>
            <primary>svnserve</primary>
            <secondary>betreiben</secondary>
            <tertiary>uber launchd</tertiary>
          </indexterm>
          <indexterm>
            <primary>launchd</primary>
          </indexterm>Mac OS X (10.4 und höher) verwendet
          <command>launchd</command> zur Prozessverwaltung
          (einschließlich Dämonen) sowohl systemweit als auch pro
          Anwender. Ein <command>launchd</command>-Job wird durch
          Parameter in einer XML-Datei als Eigenschaftsliste
          spezifiziert, und der Befehl <command>launchctl</command>
          wird verwendet, um den Lebenszyklus dieser Jobs zu
          verwalten.</para>

<!--
        <para>When configured to run as a <command>launchd</command>
          job, <command>svnserve</command> is automatically launched
          on demand whenever incoming Subversion
          <literal>svn://</literal> network traffic needs to be
          handled.  This is far more convenient than a configuration
          which requires you to manually invoke
          <command>svnserve</command> as a long-running
          background process.</para>
-->
        <para>Ist es als <command>launchd</command>-Job eingerichtet,
          wird <command>svnserve</command> bei Bedarf automatisch
          gestartet, sobald eingehender Subversion-Netzwerkverkehr mit
          <literal>svn://</literal> abgewickelt werden muss. Das ist
          viel einfacher als eine Konfiguration, die voraussetzt, dass
          <command>svnserve</command> als ein langlaufender
          Hintergrundprozess manuell gestartet wird.</para>

<!--
        <para>To configure <command>svnserve</command> as
          a <command>launchd</command> job, first create a job
          definition file named
          <filename>/Library/LaunchDaemons/org.apache.subversion.svnserve.plist</filename>.
          <xref linkend="svn.serverconfig.svnserve.invoking.launchd.ex-1"/>
          provides an example of such a file.</para>
-->
        <para>Um <command>svnserve</command> als einen
          <command>launchd</command>-Job einzurichten, erstellen Sie
          zunächst eine Job-Definitions-Datei namens
          <filename>/Library/LaunchDaemons/org.apache.subversion.svnserve.plist</filename>.
          <xref linkend="svn.serverconfig.svnserve.invoking.launchd.ex-1"/>
          liefert ein Beispiel für eine solche Datei.</para>

        <example id="svn.serverconfig.svnserve.invoking.launchd.ex-1">
<!--
          <title>A sample svnserve launchd job definition</title>
-->
          <title>Eine Beispieldefinition für einen svnserve launchd Job</title>
          <programlisting>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
    "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;
&lt;plist version="1.0"&gt;
    &lt;dict&gt;
        &lt;key&gt;Label&lt;/key&gt;
        &lt;string&gt;org.apache.subversion.svnserve&lt;/string&gt;
        &lt;key&gt;ServiceDescription&lt;/key&gt;
        &lt;string&gt;Host Subversion repositories using svn:// scheme&lt;/string&gt;
        &lt;key&gt;ProgramArguments&lt;/key&gt;
        &lt;array&gt;
            &lt;string&gt;/usr/bin/svnserve&lt;/string&gt;
            &lt;string&gt;--inetd&lt;/string&gt;
            &lt;string&gt;--root=/var/svn&lt;/string&gt;
        &lt;/array&gt;
        &lt;key&gt;UserName&lt;/key&gt;
        &lt;string&gt;svn&lt;/string&gt;
        &lt;key&gt;GroupName&lt;/key&gt;
        &lt;string&gt;svn&lt;/string&gt;
        &lt;key&gt;inetdCompatibility&lt;/key&gt;
        &lt;dict&gt;
            &lt;key&gt;Wait&lt;/key&gt;
            &lt;false/&gt;
        &lt;/dict&gt;
        &lt;key&gt;Sockets&lt;/key&gt;
        &lt;dict&gt;
            &lt;key&gt;Listeners&lt;/key&gt;
            &lt;array&gt;
                &lt;dict&gt;
                    &lt;key&gt;SockServiceName&lt;/key&gt;
                    &lt;string&gt;svn&lt;/string&gt;
                    &lt;key&gt;Bonjour&lt;/key&gt;
                    &lt;true/&gt;
                &lt;/dict&gt;
            &lt;/array&gt;
        &lt;/dict&gt;
    &lt;/dict&gt;
&lt;/plist&gt;
</programlisting>
        </example>

        <warning>
<!--
          <para>The <command>launchd</command> system can be somewhat
            challenging to learn.  Fortunately, documentation exists
            for the commands described in this section. For example,
            run <userinput>man launchd</userinput> from the command
            line to see the manual page for <command>launchd</command>
            itself, <userinput>man launchd.plist</userinput> to read
            about the job definition format, etc.</para>
-->
          <para>Das Erlernen des <command>launchd</command>-Systems
            kann ein wenig herausfordernd sein. Glücklicherweise gibt
            es Dokumentation zu den in diesem Abschnitt beschriebenen
            Befehlen. Rufen Sie beispielsweise
            <userinput>man launchd</userinput> von der Kommandozeile
            auf, um die Handbuchseite zu <command>launchd</command>
            selbst zu sehen, <userinput>man launchd.plist</userinput>,
            für das Format der Job-Definition, usw.</para>
        </warning>

<!--
        <para>Once your job definition file is created, you can
          activate the job using <command>launchctl load</command>:</para>
-->
        <para>Sobald die Job-Definitions-Datei erstellt ist, können
          Sie den Job mit <command>launchctl load</command>
          aktivieren:</para>

        <informalexample>
          <screen>
$ sudo launchctl load \
       -w /Library/LaunchDaemons/org.apache.subversion.svnserve.plist
</screen>
        </informalexample>

<!--
        <para>To be clear, this action doesn't actually launch
          <command>svnserve</command> yet.  It simply tells
          <command>launchd</command> how to fire up
          <command>svnserve</command> when incoming networking traffic
          arrives on the <literal>svn</literal> network port; it will
          be terminated it after the traffic has been handled.</para>
-->
        <para>Zur Klarstellung: Diese Aktion startet
          <command>svnserve</command> noch nicht. Sie teilt
          <command>launchd</command> bloß mit, wie
          <command>svnserve</command> gestartet werden soll, falls
          Netzwerkverkehr auf dem <literal>svn</literal> Netzwerk-Port
          aufschlägt; es wird beendet nachdem der Verkehr abgewickelt
          worden sein wird.</para>

        <note>
<!--
          <para>Because we want <command>svnserve</command> to be a
            system-wide daemon process, we need to
            use <command>sudo</command> to manage this job as an
            administrator.  Note also that the
            <literal>UserName</literal>
            and <literal>GroupName</literal> keys in the definition
            file are optional&mdash;if omitted, the job will run as
            the user who loaded the job.</para>
-->
          <para>Da wir möchten, dass <command>svnserve</command> ein
            systemweiter Dämon-Prozess ist, müssen wir
            <command>sudo</command> verwenden, um diesen Job als
            Administrator zu verwalten. Beachten Sie ebenfalls, dass
            die Schlüssel <literal>UserName</literal> und
            <literal>GroupName</literal> in der Definitionsdatei
            optional sind &mdash; werden sie weggelassen, wird der Job
            unter dem Konto des Anwenders laufen, den ihn geladen
            hat.</para>
        </note>

<!--
        <para>Deactivating the job is just as easy to do&mdash;use
          <command>launchctl unload</command>:</para>
-->
        <para>Den Job abzustellen ist ebenso einfach &mdash; mit
          <command>launchctl unload</command>:</para>

        <informalexample>
          <screen>
$ sudo launchctl unload \
       -w /Library/LaunchDaemons/org.apache.subversion.svnserve.plist
</screen>
        </informalexample>

<!--
        <para><command>launchctl</command> also provides a way for you
          to query the status of jobs.  If the job is loaded, there
          will be line which matches the <literal>Label</literal>
          specified in the job definition file:</para>
-->
        <para><command>launchctl</command> bietet Ihnen auch eine
          Möglichkeit, den Zustand von Jobs abzufragen. Falls der Job
          geladen ist, gibt es eine Zeile, die zum
          <literal>Label</literal> in der Job-Definitions-Datei
          passt:</para>

        <informalexample>
          <screen>
$ sudo launchctl list | grep org.apache.subversion.svnserve
-       0       org.apache.subversion.svnserve
$
</screen>
        </informalexample>

      </sect3>
    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.svnserve.auth">
<!--
      <title>Built-in Authentication and Authorization</title>
-->
      <title>Integrierte Authentifikation und Autorisierung</title>

<!--
      <para>
        <indexterm>
          <primary>svnserve</primary>
          <secondary>authentication</secondary>
        </indexterm>
        <indexterm>
          <primary>svnserve</primary>
          <secondary>authorization</secondary>
        </indexterm>When a client connects to an <command>svnserve</command>
        process, the following things happen:</para>
-->
      <para>
        <indexterm>
          <primary>svnserve</primary>
          <secondary>Authentifikation</secondary>
        </indexterm>
        <indexterm>
          <primary>svnserve</primary>
          <secondary>Autorisierung</secondary>
        </indexterm>Wenn sich ein Subversion-Client mit einem
        <command>svnserve</command>-Prozess verbindet, geschieht
        folgendes:</para>

      <itemizedlist>
        <listitem>
<!--
          <para>The client selects a specific repository.</para>
-->
          <para>Der Client wählt ein bestimmtes Projektarchiv.</para>
        </listitem>
        <listitem>
<!--
          <para>The server processes the repository's
            <filename>conf/svnserve.conf</filename> file and begins to
            enforce any authentication and authorization policies it
            describes.</para>
-->
          <para>Der Server liest die zum Projektarchiv gehörende Datei
            <filename>conf/svnserve.conf</filename> und führt die
            darin enthaltenen Regeln für die Authentifikation
            (Legitimation, Identitätsprüfung) und die Autorisierung
            (Berechtigungen, Befugnisse) aus.</para>
        </listitem>
        <listitem>
<!--
          <para>Depending on the defined policies, one of the
            following may occur:</para>
-->
          <para>Je nach festgelegten Regeln und Einstellungen geht es
            mit einem der folgenden Punkte weiter:</para>
          <itemizedlist>
            <listitem>
<!--
              <para>The client may be allowed to make requests
                anonymously, without ever receiving an authentication
                challenge.</para>
-->
              <para>Der Client kann seine Anfragen anonym, also ohne
                eine vorhergehende Authentifikationsanfrage,
                senden.</para>
            </listitem>
            <listitem>
<!--
              <para>The client may be challenged for authentication at
                any time.</para>
-->
              <para>Der Client kann jederzeit eine Anmeldeaufforderung
                erhalten.</para>
            </listitem>
            <listitem>
<!--
              <para>If operating in tunnel mode, the client will
                declare itself to be already externally authenticated
                (typically by SSH).</para>
-->
              <para>Läuft die Verbindung über einen Tunnel, so erklärt
                der Client, dass eine externe Anmeldung stattgefunden
                hat (meistens durch SSH).</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>

<!--
      <para>The <command>svnserve</command> server, by default, knows
        only how to send a CRAM-MD5<footnote><para>See RFC
        2195.</para></footnote> authentication challenge.  In essence,
        the server sends a small amount of data to the client.  The
        client uses the MD5 hash algorithm to create a fingerprint of
        the data and password combined, and then sends the fingerprint
        as a response.  The server performs the same computation with
        the stored password to verify that the result is identical.
        <emphasis>At no point does the actual password travel over the
        network.</emphasis></para>
-->
      <para>Der <command>svnserve</command>-Server beherrscht als
        Standardeinstellung nur den CRAM-MD5-Anmeldedialog
        <footnote><para>Siehe RFC 2195.</para></footnote>. Im Kern
        läuft dieser wie folgt ab: Der Server sendet einen kleinen
        Datensatz als Anfrage an den Client.  Dieser erzeugt mittels
        des MD5-Hash-Algorithmus einen Fingerabdruck/Hash des
        Passwortes zusammen mit dem Datensatz und sendet diesen
        Fingerabdruck als Antwort zurück an den Server.  Der Server
        vollzieht nun dieselbe Operation mit dem Passwort und dem
        Datensatz und vergleicht anschließend seinen Fingerabdruck mit
        dem des Clients. <emphasis>Während des gesamten Vorgangs wird
        das eigentliche Passwort nie über das Netzwerk
        gesendet.</emphasis></para>

<!--
      <para>If your <command>svnserve</command> server was built with
        SASL support, it not only knows how to send CRAM-MD5 challenges,
        but also likely knows a whole host of other authentication
        mechanisms.  See <xref
        linkend="svn.serverconfig.svnserve.sasl"/> later in this
        chapter to learn how to configure SASL authentication and
        encryption.</para>
-->
      <para>Enthält ihr <command>svnserve</command>-Server Unterstützung für
        SASL, so beherrscht er nicht nur die CRAM-MD5-Anmeldung, sondern noch 
        eine Menge anderer Verfahren zur Authentifikation.  Lesen Sie
        <xref linkend="svn.serverconfig.svnserve.sasl"/> weiter unten,
        um zu lernen, wie die einzelnen Möglichkeiten zur
        Authentifikation und Verschlüsselung in SASL eingerichtet
        werden.</para>

<!--
      <para>It's also possible, of course, for the client to be
        externally authenticated via a tunnel agent, such as
        <command>ssh</command>.  In that case, the server simply
        examines the user it's running as, and uses this name as the
        authenticated username.  For more on this, see the later
        section, <xref
        linkend="svn.serverconfig.svnserve.sshauth"/>.</para>
-->
      <para>Es ist selbstverständlich auch möglich, dass sich der
        Client über ein eigenständiges Tunnel-Programm anmeldet, etwa
        <command>ssh</command>.  In einem solchem Fall stellt der
        Server nur fest, unter welchem Anwenderkonto er gestartet wurde,
        und verwendet dieses für die weitere Anmeldung.
        Mehr dazu im Kapitel <xref
          linkend="svn.serverconfig.svnserve.sshauth"/>.</para>

<!--
      <para>As you've already guessed, a repository's
        <filename>svnserve.conf</filename> file is the central
        mechanism for controlling access to the repository.  When used
        in conjunction with other supplemental files described in this
        section, this configuration file offers an administrator a
        complete solution for governing user authentication and
        authorization policies.  Each of the files we'll discuss uses
        the same format common to other configuration files (see
        <xref linkend="svn.advanced.confarea"/>): section names are
        marked by square brackets (<literal>[</literal>
        and <literal>]</literal>), comments begin with hashes
        (<literal>#</literal>), and each section contains specific
        variables that can be set (<literal>variable =
        value</literal>).  Let's walk through these files now and
        learn how to use them.</para>
-->
      <para>Wie Sie sicher bereits bemerkt haben, ist die Datei
        <filename>svnserve.conf</filename> in jedem Projektarchiv die
        zentrale Anlaufstelle für die Zugangskontrolle zum Projektarchiv.
        In Verbindung mit anderen in diesem Abschnitt beschriebenen
        zusätzlichen Dateien bietet diese Konfigurationsdatei dem
        Administrator eine vollständige Lösung zur Steuerung der
        Authentifizierungs- und Autorisierungs-Richtlinien für Anwender.
        Jede der zu erörternden Dateien verwendet das übliche Format wie
        andere Konfigurationsdateien (siehe
        <xref linkend="svn.advanced.confarea"/>): Die Bezeichnungen der
        Abschnitte sind von eckigen Klammern umschlossen
        (<literal>[</literal> und <literal>]</literal>), Kommentare werden
        durch Doppelkreuze (<literal>#</literal>) eingeleitet, und jeder
        Abschnitt enthält spezielle Variablen, denen Werte zugewiesen
        werden (<literal>variable = value</literal>). Lassen Sie uns einen
        Blick in diese Dateien werfen, um zu sehen wie sie verwendet
        werden.</para>
      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.svnserve.auth.users">
 <!--
        <title>Create a users file and realm</title>
-->
        <title>Erstellen einer Passwortdatei und festlegen der Authentifikationsumgebung (Realm)</title>

<!--
        <para>For now, the <literal>[general]</literal> section of
          <filename>svnserve.conf</filename> has all the variables you
          need.  Begin by changing the values of those variables:
          choose a name for a file that will contain your usernames
          and passwords and choose an authentication realm:</para>
-->
        <para>Zu Beginn enthält der Abschnitt
          <literal>[general]</literal> in der Datei
          <filename>svnserve.conf</filename> alle Einstellungen,
          welche für den Start notwendig sind. Lassen Sie uns anfangen
          und den Variablen Werte zuweisen: Wählen Sie den Namen der
          Datei, welche die Namen ihrer Nutzer und deren Passwörter
          enthält, und entscheiden Sie sich für den Namen der
          Authentifikationsumgebung:</para>

<!--
        <informalexample>
          <programlisting>
[general]
password-db = userfile
realm = example realm
</programlisting>
        </informalexample>
-->
        <informalexample>
          <programlisting>
[general]
password-db = passwortdatei
realm = Anmeldedomäne
</programlisting>
        </informalexample>

<!--
        <para>The <literal>realm</literal> is a name that you define.
          It tells clients which sort of <quote>authentication
          namespace</quote> they're connecting to; the Subversion
          client displays it in the authentication prompt and uses it
          as a key (along with the server's hostname and port) for
          caching credentials on disk (see <xref
          linkend="svn.serverconfig.netmodel.credcache"/>).  The
          <literal>password-db</literal> variable points to a separate
          file that contains a list of usernames and passwords, using
          the same familiar format.  For example:</para>
-->
        <para>Den Namen des <literal>realm</literal> können Sie frei
          wählen.  Er teilt den Clients mit, an welcher
          <quote>Authentifikationsumgebung</quote> sie sich anmelden.
          Der Subversion-Client zeigt diesen Namen im Anmeldedialog
          und verwendet ihn auch (zusammen mit dem Namen und Port des
          Servers)
          als Schlüssel, welcher als Teil des Anmeldenachweises auf
          der Festplatte des Nutzers gespeichert wird (siehe dazu
          <xref linkend="svn.serverconfig.netmodel.credcache"/>).  Die
          Variable  <literal>password-db</literal> enthält den Namen
          der Passwortdatei, die vom Aufbau her gleich ist und die
          Namen der Nutzer und deren Passwörter speichert.  Als
          Beispiel:</para>

<!--
        <informalexample>
          <programlisting>
[users]
harry = foopassword
sally = barpassword
</programlisting>
        </informalexample>
-->
        <informalexample>
          <programlisting>
[users]
harry = geheimespasswort
sally = undnocheins
</programlisting>
        </informalexample>

<!--
        <para>The value of <literal>password-db</literal> can be an
          absolute or relative path to the users file.  For many
          admins, it's easy to keep the file right in the
          <filename>conf/</filename> area of the repository, alongside
          <filename>svnserve.conf</filename>.  On the other hand, it's
          possible you may want to have two or more repositories share
          the same users file; in that case, the file should probably
          live in a more public place.  The repositories sharing the
          users file should also be configured to have the same realm,
          since the list of users essentially defines an
          authentication realm.  Wherever the file lives, be sure to
          set the file's read and write permissions appropriately.  If
          you know which user(s) <command>svnserve</command> will run
          as, restrict read access to the users file as necessary.</para>
-->
         <para> Der Wert von <literal>password-db</literal> kann den
           absoluten oder relativen Pfad zur Anwenderdatei enthalten.
           In der Regel, ist es am einfachsten diese Datei ebenfalls
           im <filename>conf/</filename>-Verzeichnis des
           Projektarchivs zu speichern &ndash; also dort, wo auch
           <filename>svnserve.conf</filename> liegt. Andererseits
           möchten Sie vielleicht eine Passwortdatei für mehrere
           Projektarchive verwenden; in diesem Fall sollten Sie die
           Datei an einem zentraleren Ort ablegen.  Die
           Projektarchive, die sich die Anwenderdatei teilen, sollten
           so konfiguriert sein, dass sie derselben
           Authentifikationsumgebung angehören, da die Anwenderliste
           im Wesentlichen einen Authentifikations-Bereich definiert.
           Wo die Datei auch liegen mag, stellen Sie sicher, die Lese-
           und Schreibrechte entsprechend zu setzen. Falls Sie wissen,
           unter welchem Konto <command>svnserve</command> laufen
           wird, sollten Sie den Lesezugriff zur Anwenderdatei auf das
           Notwendige beschränken.  </para>

      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.svnserve.auth.general">
<!--
        <title>Set access controls</title>
-->
        <title>Setzen von Zugriffsbeschränkungen</title>

<!--
        <para>There are two more variables to set in the
          <filename>svnserve.conf</filename> file: they determine what
          unauthenticated (anonymous) and authenticated users are
          allowed to do.  The variables <literal>anon-access</literal>
          and <literal>auth-access</literal> can be set to the value
          <literal>none</literal>, <literal>read</literal>, or
          <literal>write</literal>.  Setting the value to
          <literal>none</literal> prohibits both reading and writing;
          <literal>read</literal> allows read-only access to the
          repository, and <literal>write</literal> allows complete
          read/write access to the repository.  For example:</para>
-->

        <para>Es sind noch zwei weitere Variablen in der Datei
          <filename>svnserve.conf</filename> zu setzten: Sie legen
          fest, was nicht authentifizierten (anonymen) und
          authentifizierten Nutzern erlaubt ist. Die Variablen
          <literal>anon-access</literal> und
          <literal>auth-access</literal> können auf die Werte
          <literal>none</literal>, <literal>read</literal> oder
          <literal>write</literal> gesetzt werden. Wenn Sie den Wert
          auf <literal>none</literal> setzen, so unterbinden Sie
          sowohl den Lese- als auch den Schreibzugriff &ndash;
          <literal>read</literal> erlaubt den Nur-Lese-Zugriff auf das
          Projektarchiv und  <literal>write</literal> gibt auf das
          gesamte Projektarchiv Lese- und Schreibzugriff.  </para>

<!--
        <informalexample>
          <programlisting>
[general]
password-db = userfile
realm = example realm

# anonymous users can only read the repository
anon-access = read

# authenticated users can both read and write
auth-access = write
</programlisting>
        </informalexample>
-->

        <informalexample>
          <programlisting>
[general]
password-db = Anwenderdatei
realm = Ihr realm

# Anonyme Anwender können nur lesend zugreifen
anon-access = read

# Authentifizierte Anwender können sowohl lesen als auch schreiben
auth-access = write
</programlisting>
        </informalexample>

<!--
        <para>The example settings are, in fact, the default values of
          the variables, should you forget to define them.  If you
          want to be even more conservative, you can block anonymous
          access completely:</para>
-->

        <para>Tatsächlich sind die in diesem Beispiel gezeigten
          Einstellungen, auch die Standardwerte der Variablen, falls
          Sie vergessen sollten, sie zu setzten. Für den Fall, dass
          Sie noch zurückhaltender sein möchten, können Sie den
          anonymen Zugriff auch komplett unterbinden:</para>

<!--
        <informalexample>
          <programlisting>
[general]
password-db = userfile
realm = example realm

# anonymous users aren't allowed
anon-access = none

# authenticated users can both read and write
auth-access = write
</programlisting>
        </informalexample>
-->
        <informalexample>
          <programlisting>
[general]
password-db = Anwenderdatei
realm = Ihr realm

# Anonyme Anwender sind nicht erlaubt
anon-access = none

# Authentifizierte Anwender können sowohl lesen als auch schreiben
auth-access = write
</programlisting>
        </informalexample>

<!--
        <para>The server process understands not only
          these <quote>blanket</quote> access controls to the
          repository, but also finer-grained access restrictions
          placed on specific files and directories within the
          repository.  To make use of this feature, you need to define
          a file containing more detailed rules, and then set
          the <literal>authz-db</literal> variable to point to
          it:</para>
-->

        <para>Der Serverprozess versteht nicht nur diese
          <quote>pauschalen</quote> Zugriffseinstellungen für ein
          Projektarchiv, sondern auch feiner granulierte
          Zugriffsrechte auf einzelne Dateien und Verzeichnisse
          innerhalb des Projektarchive. Um diese Funktion nutzen zu
          können, müssen Sie eine Datei anlegen, welche die
          umfangreicheren Regeln enthält und anschließend die Variable
          <literal>authz-db</literal> mit folgenden Wert setzten:
        </para>


<!--
        <informalexample>
          <programlisting>
[general]
password-db = userfile
realm = example realm

# Specific access rules for specific locations
authz-db = authzfile
</programlisting>
        </informalexample>
-->
        <informalexample>
          <programlisting>
[general]
password-db = Anwenderdatei
realm = Ihr realm

# Zum Festlegen von umfangreicheren Zugriffsregeln für bestimmte Bereiche
authz-db = Auth-Datei
</programlisting>
        </informalexample>

<!--
        <para>We discuss the syntax of the <filename>authzfile</filename> file
          in detail later in this chapter, in
          <xref linkend="svn.serverconfig.pathbasedauthz"/>.  Note
          that the <literal>authz-db</literal> variable isn't mutually
          exclusive with the <literal>anon-access</literal>
          and <literal>auth-access</literal> variables;  if all the
          variables are defined at once, <emphasis>all</emphasis>
          of the rules must be satisfied before access is allowed.</para>

-->

        <para> Wir werden die Syntax der
          <filename>Auth-Datei</filename> noch später in diesem
          Kapitel besprechen, und zwar in <xref
            linkend="svn.serverconfig.pathbasedauthz"/>. Beachten Sie,
          dass die <literal>authz-db</literal>-Variable die Verwendung
          der <literal>anon-access</literal>- und
          <literal>auth-access</literal>-Variablen nicht ausschließt
          &ndash; wenn alle diese Variablen gleichzeitig gesetzt sind,
          so müssen auch <emphasis>alle</emphasis> diese Regeln
          erfolgreich greifen, bevor ein Zugriff erlaubt wird.
        </para>
      </sect3>
    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.svnserve.sasl">
<!--
      <title>Using svnserve with SASL</title>
-->
      <title>svnserve mit SASL verwenden</title>

<!--
      <para>For many teams, the built-in CRAM-MD5 authentication is
        all they need from <command>svnserve</command>.  However, if
        your server (and your Subversion clients) were built with the
        Cyrus Simple Authentication and Security Layer (SASL) library,
        you have a number of authentication and encryption
        options available to you.</para>
-->
      <para>Die meisten Teams benötigen lediglich die eingebaute
        CRAM-MD5 Authentifikation von <command>svnserve</command>.
        Falls Ihr Server (und Ihre Subversion Clients) jedoch mit der
        Cyrus Simple Authentication and Security Layer (SASL)
        Bibliothek gebaut wurde, stehen Ihnen eine Reihe von
        Authentifikations- und Verschlüsselungsoptionen zur
        Verfügung.</para>

      <sidebar>
<!--
        <title>What Is SASL?</title>
-->
        <title>Was ist SASL?</title>
<!--
        <para>The Cyrus Simple Authentication and Security Layer is
          open source software written by Carnegie Mellon University.
          It adds generic authentication and encryption capabilities
          to any network protocol, and as of Subversion 1.5 and later,
          both the <command>svnserve</command> server
          and <command>svn</command> client know how to make use of
          this library.  It may or may not be available to you: if
          you're building Subversion yourself, you'll need to have at
          least version 2.1 of SASL installed on your system, and
          you'll need to make sure that it's detected during
          Subversion's build process.  The Subversion command-line
          client will report the availability of Cyrus SASL when you
          run <userinput>svn - -version</userinput>; if you're using
          some other Subversion client, you might need to check with
          the package maintainer as to whether SASL support was
          compiled in.</para>
-->
        <para>Cyrus Simple Authentication and Security Layer (einfache
          Cyrus Authentifikations- und Sicherheitsschicht) ist
          quelloffene Software, die von der Carnegie Mellon University
          geschrieben wurde. Sie fügt beliebigen Netzwerkprotokollen
          allgemeine Authentifikations- und
          Verschlüsselungsfähigkeiten hinzu, und seit Subversion 1.5
          kann sowohl der <command>svnserve</command>-Server als auch
          der <command>svn</command>-Client damit umgehen.
          Möglicherweise steht sie Ihnen zur Verfügung. Falls Sie
          Subversion selber bauen, müssen Sie mindestens Version 2.1
          von SASL auf Ihrem System installiert haben und
          sicherstellen, dass es während des Erstellungsprozesses
          gefunden wird. Der Subversion Kommandozeilen-Client zeigt
          die Verfügbarkeit von Cyrus SASL an, wenn Sie
          <userinput>svn --version</userinput> aufrufen; falls Sie
          irgend einen anderen Subversion-Client verwenden, sollten
          sie mit dem Lieferanten des Paketes Rücksprache halten, ob
          SASL-Unterstützung hineinkompiliert wurde.</para>

<!--
        <para>SASL comes with a number of pluggable modules that
          represent different authentication systems: Kerberos
          (GSSAPI), NTLM, One-Time-Passwords (OTP), DIGEST-MD5, LDAP,
          Secure-Remote-Password (SRP), and others.  Certain
          mechanisms may or may not be available to you; be sure to
          check which modules are provided.</para>
-->
        <para>SASL wird mit einer Anzahl ergänzbarer Module geliefert,
          die verschiedenartige Authentifikationssysteme
          repräsentieren: Kerberos (GSSAPI), NTLM, One-Time-Passwords
          (OTP), DIGEST-MD5, LDAP, Secure-Remote-Password (SRP) u.a.
          Bestimmte Mechanismen könnten für Sie verfügbar sein;
          überprüfen Sie, welche Module mitgeliefert werden.</para>

<!--
        <para>You can download Cyrus SASL (both code and
          documentation) from
          <ulink url="http://asg.web.cmu.edu/sasl/sasl-library.html"
          />.</para>
-->
        <para>Sie können Cyrus SASL (sowohl den Code als auch die
          Dokumentation) bei
          <ulink url="http://asg.web.cmu.edu/sasl/sasl-library.html"/>
          herunterladen.</para>
      </sidebar>

<!--
      <para>Normally, when a subversion client connects to
        <command>svnserve</command>, the server sends a greeting that
        advertises a list of the capabilities it supports, and the
        client responds with a similar list of capabilities.  If the
        server is configured to require authentication, it then sends
        a challenge that lists the authentication mechanisms
        available; the client responds by choosing one of the
        mechanisms, and then authentication is carried out in some
        number of round-trip messages.  Even when SASL capabilities
        aren't present, the client and server inherently know how to
        use the CRAM-MD5 and ANONYMOUS mechanisms (see
        <xref linkend="svn.serverconfig.svnserve.auth"/>).  If server
        and client were linked against SASL, a number of other
        authentication mechanisms may also be available.  However,
        you'll need to explicitly configure SASL on the server side to
        advertise them.</para>
-->
      <para>Wenn ein Subversion-Client sich mit
        <command>svnserve</command> verbindet, sendet der Server
        normalerweise eine Begrüßung, die eine Auflistung der von ihm
        unterstützten Fähigkeiten umfasst, woraufhin der Client mit
        einer ähnlichen Liste von Fähigkeiten antwortet. Falls der
        Server so konfiguriert wurde, dass er eine Authentifikation
        benötigt, sendet er eine Aufforderung, die die verfügbaren
        Authentifikationsmechanismen auflistet; der Client antwortet,
        indem er einen der Mechanismen auswählt und die
        Authentifikation erfolgt dann mittels eines
        Nachrichtenaustausches. Selbst falls keine SASL-Fähigkeiten
        vorhanden sind, verstehen Client und Server von sich aus die
        CRAM-MD5- und ANONYMOUS-Mechanismen (siehe <xref
          linkend="svn.serverconfig.svnserve.auth"/>). Falls Client
        und Server mit SASL gebaut wurden, könnten eine Anzahl
        weiterer Authentifikationsmechanismen verfügbar sein.
        Trotzdem müssen Sie serverseitig ausdrücklich SASL
        konfigurieren, um es anbieten zu können.</para>

      <sect3 id="svn.serverconfig.svnserve.sasl.authn">
<!--
        <title>Authenticating with SASL</title>
-->
        <title>Authentifikation mit SASL</title>

<!--
        <para>To activate specific SASL mechanisms on the server,
          you'll need to do two things.  First, create
          a <literal>[sasl]</literal> section in your
          repository's <filename>svnserve.conf</filename> file with an
          initial key-value pair:</para>
-->
        <para>Um bestimmte SASL-Mechanismen auf dem Server zu
          aktivieren, müssen Sie zwei Dinge tun. Erstellen Sie
          zunächst einen Abschnitt <literal>[sasl]</literal> in der
          Datei <filename>svnserve.conf</filename> Ihres
          Projektarchivs mit einem Schlüssel-Wert-Paar:</para>

        <informalexample>
          <programlisting>
[sasl]
use-sasl = true
</programlisting>
        </informalexample>

<!--
        <para>Second, create a main SASL configuration file
          called <filename>svn.conf</filename> in a place where the
          SASL library can find it&mdash;typically in the directory
          where SASL plug-ins are located.  You'll have to locate the
          plug-in directory on your particular system, such
          as <filename>/usr/lib/sasl2/</filename>
          or <filename>/etc/sasl2/</filename>.  (Note that this
          is <emphasis>not</emphasis>
          the <filename>svnserve.conf</filename> file that lives
          within a repository!)</para>
-->
        <para>Erstellen Sie zweitens eine
          SASL-Hauptkonfigurationsdatei namens
          <filename>svn.conf</filename> dort,  wo die SASL-Bibliothek
          sie finden kann &ndash; typischerweise in dem Verzeichnis,
          wo Sie müssen das Plug-in-Verzeichnis auf Ihrem System
          lokalisieren, etwa <filename>/usr/lib/sasl2/</filename> oder
          <filename>/etc/sasl2/</filename>. (Beachten Sie, dass es
          sich hierbei <emphasis>nicht</emphasis> um die Datei
          <filename>svnserve.conf</filename> handelt, die innerhalb
          eines Projektarchivs liegt!)</para>

<!--
        <para>On a Windows server, you'll also have to edit the system
          registry (using a tool such as <command>regedit</command>)
          to tell SASL where to find things.  Create a registry key
          named <literal>[HKEY_LOCAL_MACHINE\SOFTWARE\Carnegie
          Mellon\Project Cyrus\SASL Library]</literal>, and place two
          keys inside it: a key called <literal>SearchPath</literal>
          (whose value is a path to the directory containing the SASL
          <filename>sasl*.dll</filename> plug-in libraries), and a key
          called
          <literal>ConfFile</literal> (whose value is a path to the
          parent directory containing
          the <filename>svn.conf</filename> file you created).</para>
-->
        <para>Auf einem Windows-Server müssen Sie außerdem die
          Systemregistratur anpassen (mit einem Werkzeug wie
          <command>regedit</command>), um SASL mitzuteilen, wo es
          Dinge finden kann. Erstellen Sie einen Registraturschlüssel
          namens <literal>[HKEY_LOCAL_MACHINE\SOFTWARE\Carnegie
          Mellon\Project Cyrus\SASL Library]</literal> und legen zwei
          weitere Schlüssel hinein: einen  Schlüssel namens
          <literal>SearchPath</literal> (dessen Wert ein Pfad zum
          Verzeichnis bezeichnet, in dem die SASL
          <filename>sasl*.dll</filename>-Plug-in-Bibliotheken liegen)
          und einen Schlüssel namens <literal>ConfFile</literal>
          (dessen Wert ein Pfad zum Elternverzeichnis der von Ihnen
          erstellten Datei <filename>svn.conf</filename> ist).</para>

<!--
        <para>Because SASL provides so many different kinds of
          authentication mechanisms, it would be foolish (and far
          beyond the scope of this book) to try to describe every
          possible server-side configuration.  Instead, we recommend
          that you read the documentation supplied in the
          <filename>doc/</filename> subdirectory of the SASL source
          code.  It goes into great detail about every mechanism and
          how to configure the server appropriately for each.  For the
          purposes of this discussion, we'll just demonstrate a simple
          example of configuring the DIGEST-MD5 mechanism.  For
          example, if your <filename>svn.conf</filename> file contains the
          following:</para>
-->
        <para>Da SASL so viele unterschiedliche Arten von
          Authentifikationsmechanismen zur Verfügung stellt, wäre es
          töricht (und würde den Rahmen dieses Buches sprengen), wenn
          wir versuchen würden, jede mögliche Server-Konfiguration zu
          erläutern. Stattdessen empfehlen wir Ihnen, die Lektüre der
          Dokumentation aus dem Unterverzeichnis
          <filename>doc/</filename> des SASL Quelltextes. Sie
          beschreibt detailliert jeden Mechanismus und die
          entsprechende Konfiguration des Servers. Für die Erörterung
          an dieser Stelle zeigen wir ein einfaches Beispiel der
          Konfiguration des DIGEST-MD5 Mechanismus. Wenn Ihre Datei
          <filename>svn.conf</filename> beispielsweise folgenden
          Inhalt hat:</para>

        <informalexample>
          <programlisting>
pwcheck_method: auxprop
auxprop_plugin: sasldb
sasldb_path: /etc/my_sasldb
mech_list: DIGEST-MD5
</programlisting>
        </informalexample>

<!--
        <para>you've told SASL to advertise the DIGEST-MD5
          mechanism to clients and to check user passwords against a
          private password database located
          at <filename>/etc/my_sasldb</filename>.  A system
          administrator can then use
          the <command>saslpasswd2</command> program to add or modify
          usernames and passwords in the database:</para>
-->
        <para>haben Sie SASL aufgefordert, Clients den DIGEST-MD5
          Mechanismus anzubieten und Anwenderpasswörter mit einer
          privaten Passwort-Datenbank in
          <filename>/etc/my_sasldb</filename> abzugleichen. Ein
          Systemadministrator kann dann mit dem Programm
          <command>saslpasswd2</command> Anwendernamen und Passwörter
          in der Datenbank eintragen oder bearbeiten:</para>

        <informalexample>
          <screen>
$ saslpasswd2 -c -f /etc/my_sasldb -u realm username
</screen>
        </informalexample>

<!--
        <para>A few words of warning: first, make sure the
          <quote>realm</quote> argument
          to <command>saslpasswd2</command> matches the same realm
          you've defined in your
          repository's <filename>svnserve.conf</filename> file; if
          they don't match, authentication will fail.  Also, due to a
          shortcoming in SASL, the common realm must be a string with
          no space characters.  Finally, if you decide to go with the
          standard SASL password database, make sure
          the <command>svnserve</command> program has read access to
          the file (and possibly write access as well, if you're using
          a mechanism such as OTP).</para>
-->
        <para>Ein paar Worte zur Warnung: Stellen Sie zunächst sicher
          dass das Argument <quote>realm</quote> für
          <command>saslpasswd2</command> demselben Bereich entspricht,
          den Sie in der Datei <filename>svnserve.conf</filename>
          Ihres Projektarchivs definiert haben; falls diese Werte nicht
          übereinstimmen, wird die Authentifikation fehlschlagen.
          Darüber hinaus muss aufgrund einer Unzulänglichkeit in SASL
          der gemeinsame Bereich aus einer Zeichenkette ohne
          Leerzeichen bestehen. Falls Sie sich entscheiden, die
          standardmäßige SASL-Passwort-Datenbank zu verwenden, sollten
          Sie schließlich sicherstellen, dass das Programm
          <command>svnserve</command> die Datei lesen (und
          möglicherweise auch schreiben) kann, wenn Sie einen
          Mechanismus wie OTP verwenden).</para>

<!--
        <para>This is just one simple way of configuring SASL.  Many
          other authentication mechanisms are available, and passwords
          can be stored in other places such as in LDAP or a SQL
          database.  Consult the full SASL documentation for
          details.</para>
-->
        <para>Dies ist lediglich eine einfache Art, SASL zu
          konfigurieren. Viele andere Authentifikationsmechanismen
          stehen zur Verfügung, und Passwörter können an anderer
          Stelle gespeichert werden, etwa in LDAP oder in einer
          SQL-Datenbank. Details hierzu finden Sie in der
          Dokumentation zu SASL.</para>

<!--
        <para>Remember that if you configure your server to only allow
          certain SASL authentication mechanisms, this forces all
          connecting clients to have SASL support as well.  Any
          Subversion client built without SASL support (which includes
          all pre-1.5 clients) will be unable to authenticate.  On the
          one hand, this sort of restriction may be exactly what you
          want (<quote>My clients must all use Kerberos!</quote>).
          However, if you still want non-SASL clients to be able to
          authenticate, be sure to advertise the CRAM-MD5 mechanism as
          an option.  All clients are able to use CRAM-MD5, whether
          they have SASL capabilities or not.</para>
-->
        <para>Wenn Sie Ihren Server so konfigurieren, dass er nur
          bestimmte SASL-Authentifikationsmechanismen erlaubt, müssen
          Sie beachten, dass damit auch alle Clients gezwungen sind,
          SASL zu unterstützen. Kein Subversion-Client ohne
          SASL-Unterstützung (u.a. alle Clients vor Version 1.5) kann
          sich authentisieren. Andererseits möchten Sie vielleicht
          gerade diese Einschränkung (<quote>Meine Clients müssen
            sämtlich Kerberos verwenden!</quote>). Wenn Sie jedoch
          möchten, dass sich auch Nicht-SASL-Clients authentisieren
          können, stellen Sie sicher, dass optional der
          CRAM-MD5-Mechanismus angeboten wird. Alle Clients können
          CRAM-MD5 verwenden, egal, ob sie SASL verstehen oder
          nicht.</para>

      </sect3>

      <sect3 id="svn.serverconfig.svnserve.sasl.encryption">
<!--
        <title>SASL encryption</title>
-->
        <title>SASL Verschlüsselung</title>

<!--
        <para>SASL is also able to perform data encryption if a
          particular mechanism supports it.  The built-in CRAM-MD5
          mechanism doesn't support encryption, but DIGEST-MD5 does,
          and mechanisms such as SRP actually require use of the
          OpenSSL library.  To enable or disable different levels of
          encryption, you can set two values in your repository's
          <filename>svnserve.conf</filename> file:</para>
-->
        <para>SASL kann auch Daten verschlüsseln, sofern ein
          bestimmter Mechanismus das unterstützt. Der eingebaute
          CRAM-MD5-Mechanismus unterstützt keine Verschlüsselung,
          jedoch DIGEST-MD5, und Mechanismen wie SRP erfordern sogar
          die Verwendung der OpenSSL-Bibliothek. Um verschiedene
          Verschlüsselungsstufen zu aktivieren oder abzustellen,
          können Sie zwei Werte in der Datei
          <filename>svnserve.conf</filename> Ihres Projektarchivs
          einstellen:</para>

        <informalexample>
          <programlisting>
[sasl]
use-sasl = true
min-encryption = 128
max-encryption = 256
</programlisting>
        </informalexample>

<!--
        <para>The <literal>min-encryption</literal> and
          <literal>max-encryption</literal> variables control the
          level of encryption demanded by the server.  To disable
          encryption completely, set both values to 0.  To enable
          simple checksumming of data (i.e., prevent tampering and
          guarantee data integrity without encryption), set both
          values to 1.  If you wish to allow&mdash;but not
          require&mdash;encryption, set the minimum value to 0, and
          the maximum value to some bit length.  To require encryption
          unconditionally, set both values to numbers greater than 1.
          In our previous example, we require clients to do at least
          128-bit encryption, but no more than 256-bit
          encryption.</para>
-->
        <para>Die Variablen <literal>min-encryption</literal> und
          <literal>max-encryption</literal> kontrollieren die vom
          Server verlangte Verschlüsselungsstufe. Um Verschlüsselung
          vollständig abzustellen, setzen Sie beide Werte auf 0. Um
          die einfache Erstellung von Prüfsummen für Daten zu
          ermöglichen (etwa, um Manipulationen zu verhindern und
          Datenintegrität ohne Verschlüsselung zu garantieren), setzen
          Sie beide Werte auf 1. Falls Sie Verschlüsselung erlauben,
          jedoch nicht voraussetzen, setzen Sie den Minimalwert auf 0
          und den Maximalwert auf irgendeine Bitlänge. Um unbedingte
          Verschlüsselung zu verlangen,, setzen Sie beide Werte auf
          Zahlen größer 1. Im vorangegangenen Beispiel verlangen wir,
          dass Clients mindestens 128-Bit- aber höchstens
          256-Bit-Verschlüsselung vornehmen.</para>
      </sect3>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.svnserve.sshauth">
<!--
      <title>Tunneling over SSH</title>
-->
      <title>Tunneln über SSH</title>

<!--
      <para><command>svnserve</command>'s built-in authentication (and
        SASL support) can be very handy, because it avoids the need to
        create real system accounts.  On the other hand, some
        administrators already have well-established SSH
        authentication frameworks in place.  In these situations, all
        of the project's users already have system accounts and the
        ability to <quote>SSH into</quote> the server machine.</para>
-->
      <para>Die eingebaute Authentifikation (und die
        SASL-Unterstützung) von <command>svnserve</command> kann sehr
        praktisch sein, da es die Notwendigkeit echter Systemkonten
        vermeidet. Andererseits haben einige Administratoren bereits
        etablierte SSH-Authentifikations-Frameworks im Einsatz.  In
        diesen Fällen haben die Anwender des Projektes bereits
        Systemkonten, um sich damit über SSH mit dem Server zu
        verbinden.</para>

<!--
      <para>It's easy to use SSH in conjunction with
        <command>svnserve</command>.  The client simply uses the
        <literal>svn+ssh://</literal> URL scheme to connect:</para>
-->
      <para>Es ist einfach, SSH in Verbindung mit
        <command>svnserve</command> zu verwenden. Der Client benutzt
        zum Verbinden einfach das <literal>svn+ssh://</literal>
        URL-Schema:</para>

      <informalexample>
        <screen>
$ whoami
harry

$ svn list svn+ssh://host.example.com/repos/project
harryssh@host.example.com's password:  *****

foo
bar
baz
&hellip;
</screen>
      </informalexample>

<!--
      <para>In this example, the Subversion client is invoking a local
        <command>ssh</command> process, connecting to
        <literal>host.example.com</literal>, authenticating as the
        user <literal>harryssh</literal> (according to SSH user
        configuration), then spawning a private
        <command>svnserve</command> process on the remote machine
        running as the user <literal>harryssh</literal>.  The
        <command>svnserve</command> command is being invoked in tunnel
        mode (<option>-t</option>), and its network protocol is being
        <quote>tunneled</quote> over the encrypted connection by
        <command>ssh</command>, the tunnel agent.
        If the client performs a commit, the authenticated username
        <literal>harryssh</literal> will be used as the author
        of the new revision.</para>
-->
      <para>In diesem Beispiel ruft der Subversion-Client einen
        lokalen <command>ssh</command>-Prozess auf, der sich mit
        <literal>host.example.com</literal> verbindet, sich (gemäß der
        SSH-Anwenderkonfiguration) als Anwender
        <literal>harryssh</literal> authentisiert und dann auf dem
        entfernten Rechner einen privaten
        <command>svnserve</command>-Prozess unter der Anwenderkennung
        <literal>harryssh</literal> startet. Der Befehl
        <command>svnserve</command> wird im Tunnelmodus
        (<option>-t</option>) aufgerufen und dessen Netzprotokoll wird
        über die durch den Tunnelagenten <command>ssh</command>
        verschlüsselte Verbindung <quote>getunnelt</quote>. Falls der
        Client eine Übergabe macht, wird der authentifizierte
        Anwendername <literal>harryssh</literal> als Autor der neuen
        Revision verwendet.</para>

<!--
      <para>The important thing to understand here is that the
        Subversion client is <emphasis>not</emphasis> connecting to a
        running <command>svnserve</command> daemon.  This method of
        access doesn't require a daemon, nor does it notice one if
        present.  It relies wholly on the ability of
        <command>ssh</command> to spawn a temporary
        <command>svnserve</command> process, which then terminates
        when the network connection is closed.</para>
-->
      <para>An dieser Stelle ist es wichtig, zu verstehen, dass der
        Subversion-Client sich <emphasis>nicht</emphasis> mit einem
        laufenden <command>svnserve</command>-Dämonen verbindet.
        Diese Zugriffsmethode benötigt keinen Dämonen und merkt auch
        nicht, wenn einer vorhanden ist. Sie verlässt sich vollständig
        auf die Fähigkeit von <command>ssh</command>, einen temporären
        <command>svnserve</command>-Prozesses zu starten, der nach dem
        Schließen der Netzverbindung beendet wird.</para>

<!--
      <para>When using <literal>svn+ssh://</literal> URLs to access a
        repository, remember that it's the <command>ssh</command>
        program prompting for authentication, and
        <emphasis>not</emphasis> the <command>svn</command> client
        program.  That means there's no automatic password-caching
        going on (see <xref linkend="svn.serverconfig.netmodel.credcache"/>).
        The Subversion client often makes multiple connections to the
        repository, though users don't normally notice this due to the
        password caching feature.  When using
        <literal>svn+ssh://</literal> URLs, however, users may be
        annoyed by <command>ssh</command> repeatedly asking for a
        password for every outbound connection.  The solution is to
        use a separate SSH password-caching tool such as
        <command>ssh-agent</command> on a Unix-like system, or
        <command>pageant</command> on Windows.</para>
-->
      <para>Denken Sie daran, dass beim Zugriff auf ein Projektarchiv
        über URLs der Form <literal>svn+ssh://</literal> die Abfrage
        zur Authentifikation von <command>ssh</command> kommt und
        <emphasis>nicht</emphasis> vom <command>svn</command>-Client.
        Das bedeutet, dass es keine automatische Passwort-Speicherung
        gibt (siehe <xref linkend="svn.serverconfig.netmodel.credcache"/>).
        Der Subversion-Client stellt häufig mehrere Verbindungen mit
        dem Projektarchiv her, wenngleich Anwender das wegen der
        zwischengespeicherten Passwörter normalerweise gar nicht
        mitbekommen. Jedoch könnten Anwender bei Verwendung von
        <literal>svn+ssh://</literal>-URLs durch die wiederholten
        Passwort-Anfragen für ausgehende Verbindungen von
        <command>ssh</command> etwas genervt sein. Die Lösung besteht
        darin, ein zusätzliches Passwort-Speicherungs-Werkzeug wie
        etwa <command>ssh-agent</command> auf einem Unix-ähnlichen
        System oder <command>pageant</command> auf Windows zu
        verwenden.</para>

<!--
      <para>When running over a tunnel, authorization is primarily
        controlled by operating system permissions to the repository's
        database files; it's very much the same as if Harry were
        accessing the repository directly via a
        <literal>file://</literal> URL.  If multiple system users are
        going to be accessing the repository directly, you may want to
        place them into a common group, and you'll need to be careful
        about umasks (be sure to read <xref
        linkend="svn.serverconfig.multimethod"/> later in this
        chapter).  But even in the case of tunneling, you can still use the
        <filename>svnserve.conf</filename> file to block access, by
        simply setting <literal>auth-access = read</literal>
        or <literal>auth-access = none</literal>.<footnote><para>Note
        that using any sort of <command>svnserve</command>-enforced
        access control at all only makes sense if the users cannot 
        bypass it and access the repository directory directly using
        other tools (such as <command>cd</command> and
        <command>vi</command>); implementing
        such restrictions is described in
        <xref linkend="svn.serverconfig.svnserve.sshtricks.fixedcmd"
        />.</para></footnote></para>
-->
      <para>Bei der Verwendung eines Tunnels wird die Autorisierung
        größtenteils durch die Betriebssystem-Berechtigungen auf die
        Datenbankdateien des Projektarchivs gesteuert, als ob
        Harry direkt über einen <literal>file://</literal>-URL auf das
        Projektarchiv zugreifen würde. Falls mehrere Anwender direkt
        auf das Projektarchiv zugreifen sollen, möchten Sie sie
        vielleicht in eine gemeinsame Gruppe zusammenfassen; Sie
        sollten auch auf Umasks achten (lesen Sie auf alle Fälle <xref
        linkend="svn.serverconfig.multimethod"/> später in diesem
        Kapitel). Doch selbst beim Tunneln können Sie immer noch die
        Datei <filename>svnserve.conf</filename> zum Blockieren des
        Zugriffs verwenden, indem Sie einfach <literal>auth-access =
        read</literal> oder <literal>auth-access = none</literal>
        setzen.<footnote><para>Beachten Sie, dass die Verwendung
        irgendwelcher durch <command>svnserve</command>
        sichergestellten Zugriffskontrollen nur dann einen Sinn
        ergibt, falls die Anwender sie nicht umgehen und unter
        Verwendung anderer Werkzeuge (etwa <command>cd</command> und
        <command>vi</command>) direkt auf das
        Projektarchiv-Verzeichnis zugreifen können; die Einrichtung
        derartiger Einschränkungen wird in
        <xref linkend="svn.serverconfig.svnserve.sshtricks.fixedcmd"
        /> beschrieben.</para></footnote></para>

<!--
      <para>You'd think that the story of SSH tunneling would end
        here, but it doesn't.  Subversion allows you to create custom
        tunnel behaviors in your runtime <filename>config</filename>
        file (see <xref linkend="svn.advanced.confarea"/>).  For
        example, suppose you want to use RSH instead of
        SSH.<footnote><para>We don't actually recommend this, since
        RSH is notably less secure than SSH.</para></footnote>  In
        the <literal>[tunnels]</literal> section of your
        <filename>config</filename> file, simply define it like
        this:</para>
-->
      <para>Vielleicht glauben Sie, dass die Geschichte mit dem
        SSH-Tunneln hier endet. Es ist aber nicht so. Subversion
        erlaubt es Ihnen, selbstdefinierte Verhaltensweisen für das
        Tunneln in Ihrer Laufzeit-Datei  <filename>config</filename>
        zu definieren (siehe <xref linkend="svn.advanced.confarea"/>).
        Nehmen wir beispielsweise an, dass Sie RSH statt SSH verwenden
        möchten.<footnote><para>Wir empfehlen das natürlich nicht, da
        RSH deutlich unsicherer ist als SSH.</para></footnote>
        Definieren Sie einfach im Abschnitt
        <literal>[tunnels]</literal> Ihrer Datei
        <filename>config</filename>:</para>

      <informalexample>
        <programlisting>
[tunnels]
rsh = rsh --
</programlisting>
      </informalexample>

<!--
      <para>And now, you can use this new tunnel definition by using a
        URL scheme that matches the name of your new variable:
        <literal>svn+rsh://host/path</literal>.  When using the new
        URL scheme, the Subversion client will actually be running the
        command <userinput>rsh host svnserve -t</userinput> behind the
        scenes.  If you include a username in the URL (e.g.,
        <literal>svn+rsh://username@host/path</literal>), the client
        will also include that in its command (<userinput>rsh - -
        username@host svnserve -t</userinput>).</para>
-->
      <para>Ab jetzt können Sie diese neue Tunneldefinition
        verwenden, indem Sie ein URL-Schema benutzen, welches dem
        Namen Ihrer neuen Variablen entspricht:
        <literal>svn+rsh://host/path</literal>. Bei Verwendung des
        neuen URL-Schemas führt der Subversion-Client im Hintergrund
        eigentlich den Befehl <userinput>rsh host svnserve
        -t</userinput> aus. Falls Sie einen Anwendernamen im URL
        angeben (z.B.
        <literal>svn+rsh://username@host/path</literal>), wird der
        Client das auch mit in seinen Befehl übernehmen
        (<userinput>rsh -- username@host svnserve -t</userinput>).</para>

      <warning>
<!--
        <para>Notice that when defining an RSH-based tunnel, we've
          added the <literal>- -</literal> end-of-options argument to
          the tunnel command line.  This is to prevent a malformed
          hostname from being treated as another option to the tunnel
          command.  You should do the same for other tunnel programs
          (for example, SSH).</para>
-->
        <para>Beachten Sie, dass wir beim Definieren eines RSH-basierten
          Tunnels das <literal>--</literal>-Optionsende-Argument der
          Tunnel-Bwfehlszeile hinzugefügt haben. Das geschieht, um zu
          vermeiden, dass ein falsch gebildeter Host-Name als eine weitere
          Option des Tunnel-Befehls behandelt wird. Das gleiche sollten
          Sie für andere Tunnel-Befehle machen (zum Beispiel SSH).</para>
      </warning>

<!--
      <para>But you can define new tunneling schemes to be much more
        clever than that:</para>
-->
        <para>Sie können jedoch auch viel raffiniertere neue
          Tunnel-Schemata definieren:</para>

      <informalexample>
        <programlisting>
[tunnels]
joessh = $JOESSH /opt/alternate/ssh -p 29934 --
</programlisting>
      </informalexample>

<!--
      <para>This example demonstrates a couple of things.  First, it
        shows how to make the Subversion client launch a very specific
        tunneling binary (the one located at
        <filename>/opt/alternate/ssh</filename>) with specific
        options.  In this case, accessing an
        <literal>svn+joessh://</literal> URL would invoke the
        particular SSH binary with <option>-p 29934</option> as
        arguments&mdash;useful if you want the tunnel program to
        connect to a nonstandard port.</para>
-->
      <para>Dieses Beispiel verdeutlicht einige Dinge. Erstens zeigt
        es, wie der Subversion-Client angewiesen wird, ein bestimmtes
        Tunnelprogramm (<filename>/opt/alternate/ssh</filename>) mit
        speziellen Optionen zu starten. In diesem Fall würde der
        Zugriff auf einen URL wie <literal>svn+joessh://</literal> das
        bestimmte SSH-Programm mit den Argumenten <option>-p
        29934</option> aufrufen &ndash; was nützlich ist, wenn Sie
        möchten, dass sich das Tunnelprogramm mit einem
        Nicht-Standard-Port verbindet.</para>

<!--
      <para>Second, it shows how to define a custom environment
        variable that can override the name of the tunneling program.
        Setting the <literal>SVN_SSH</literal> environment variable is
        a convenient way to override the default SSH tunnel agent.
        But if you need to have several different overrides for
        different servers, each perhaps contacting a different port or
        passing a different set of options to SSH, you can use the
        mechanism demonstrated in this example.  Now if we were to set
        the <literal>JOESSH</literal> environment variable, its value
        would override the entire value of the tunnel
        variable&mdash;<command>$JOESSH</command> would be executed
        instead of <userinput>/opt/alternate/ssh -p
        29934</userinput>.</para>
-->
      <para>Zweitens zeigt es, wie eine eigene Umgebungsvariable
        definiert werden kann, die den Namen des Tunnelprogramms
        überschreibt. Durch das Setzen der Umgebungsvariablen
        <literal>SVN_SSH</literal> besteht eine bequeme Methode, den
        Standard-SSH-Tunnelagenten zu ersetzen. Falls Sie jedoch für
        unterschiedliche Server verschiedene Werte überschreiben
        müssen, wobei jeder vielleicht einen anderen Port verwendet
        oder unterschiedliche Optionen an SSH übergeben werden müssen,
        können Sie die in diesem Beispiel vorgestellte Methode
        verwenden. Falls wir nun die Umgebungsvariable
        <literal>JOESSH</literal> setzten, würde deren Wert den
        gesamten Wert der Tunnelvariablen überschreiben &ndash; statt
        <userinput>/opt/alternate/ssh -p 29934</userinput> würde
        <command>$JOESSH</command> ausgeführt.</para>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.svnserve.sshtricks">
<!--
      <title>SSH Configuration Tricks</title>
-->
      <title>SSH-Konfigurationstricks</title>

<!--
      <para>It's possible to control not only the way in which the
        client invokes <command>ssh</command>, but also to control
        the behavior of <command>sshd</command> on your server
        machine.  In this section, we'll show how to control the
        exact <command>svnserve</command> command executed
        by <command>sshd</command>, as well as how to have multiple
        users share a single system account.</para>
-->
      <para>Es ist möglich, nicht nur die Art und Weise zu
        steuern, auf die der Client <command>ssh</command> aufruft,
        sondern auch das Verhalten von <command>sshd</command> auf dem
        Server. In diesem Abschnitt zeigen wir, wie der von
        <command>sshd</command> ausgeführte
        <command>svnserve</command>-Befehl genau festgelegt wird sowie
        sich mehrere Anwender ein einzelnes Systemkonto teilen
        können.</para>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.svnserve.sshtricks.setup">
<!--
        <title>Initial setup</title>
-->
        <title>Erstmalige Einrichtung</title>

<!--
        <para>To begin, locate the home directory of the account
          you'll be using to launch <command>svnserve</command>.  Make
          sure the account has an SSH public/private keypair
          installed, and that the user can log in via public-key
          authentication.  Password authentication will not work,
          since all of the following SSH tricks revolve around using
          the SSH <filename>authorized_keys</filename> file.</para>
-->
        <para>Ermitteln Sie zunächst das Heimatverzeichnis des Kontos,
          welches Sie zum Starten von <command>svnserve</command>
          verwenden möchten. Stellen Sie sicher, dass für das Konto
          ein Paar bestehend aus einem öffentlichen und einem privaten
          SSH-Schlüssel installiert ist und dass sich der Anwender
          über die Authentifikation mit einem öffentlichen Schlüssel
          anmelden kann. Die Authentifikation mit Passwort wird nicht
          funktionieren, da sich alle folgenden SSH-Tricks um die
          Verwendung der SSH-Datei
          <filename>authorized_keys</filename> drehen.</para>

<!--
        <para>If it doesn't already exist, create the
          <filename>authorized_keys</filename> file (on Unix,
          typically <filename>~/.ssh/authorized_keys</filename>).
          Each line in this file describes a public key that is
          allowed to connect.  The lines are typically of the
          form:</para>
-->
        <para>Falls noch nicht geschehen, erzeugen Sie die Datei
          <filename>authorized_keys</filename> (unter Unix
          üblicherweise <filename>~/.ssh/authorized_keys</filename>).
          Jede Zeile dieser Datei beschreibt einen öffentlichen
          Schlüssel, der sich verbinden darf. Die Zeilen sehen
          normalerweise so aus:</para>

        <informalexample>
          <programlisting>
  ssh-dsa AAAABtce9euch&hellip; user@example.com
</programlisting>
        </informalexample>

<!--
        <para>The first field describes the type of key, the second
          field is the base64-encoded key itself, and the third field
          is a comment.  However, it's a lesser known fact that the
          entire line can be preceded by a <literal>command</literal>
          field:</para>
-->
        <para>Das erste Feld beschreibt die Art des Schlüssels, das
          zweite ist der eigentliche in Base64 codierte Schlüssel und
          das dritte Feld ist ein Kommentar. Es ist jedoch weniger
          bekannt, dass die gesamte Zeile mit einem
          <literal>command</literal>-Feld beginnen kann:</para>

        <informalexample>
          <programlisting>
  command="program" ssh-dsa AAAABtce9euch&hellip; user@example.com
</programlisting>
        </informalexample>

<!--
        <para>When the <literal>command</literal> field is set, the
          SSH daemon will run the named program instead of the
          typical tunnel-mode <command>svnserve</command> invocation that the
          Subversion client asks for.  This opens the door to a number
          of server-side tricks.  In the following examples, we
          abbreviate the lines of the file as:</para>
-->
        <para>Falls das Feld <literal>command</literal> definiert ist,
          wird der SSH-Daemon das angegebene Programm starten anstatt
          wie üblich den vom Subversion-Client geforderten Aufruf von
          <command>svnserve</command> im Tunnelmodus auszuführen. Das
          öffnet die Tür für eine Reihe von serverseitigen Tricks. In
          den folgenden Beispielen werden wir die Zeilen der Datei wie
          folgt abkürzen:</para>

        <informalexample>
          <programlisting>
  command="program" TYPE KEY COMMENT
</programlisting>
        </informalexample>

      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.svnserve.sshtricks.fixedcmd">
<!--
        <title>Controlling the invoked command</title>
-->
        <title>Steuerung des aufgerufenen Befehls</title>

<!--
        <para>Because we can specify the executed server-side command,
          it's easy to name a specific <command>svnserve</command>
          binary to run and to pass it extra arguments:</para>
-->
        <para>Da wir den durch den Server ausgeführten Befehl angeben
          können, ist es leicht, ein bestimmtes
          <command>svnserve</command>-Programm zu benennen und ihm
          zusätzliche Argumente mitzugeben:</para>

        <informalexample>
          <programlisting>
  command="/path/to/svnserve -t -r /virtual/root" TYPE KEY COMMENT
</programlisting>
        </informalexample>

<!--
        <para>In this example, <filename>/path/to/svnserve</filename>
          might be a custom wrapper script
          around <command>svnserve</command> which sets the umask (see
          <xref linkend="svn.serverconfig.multimethod"/>).  It also
          shows how to anchor <command>svnserve</command> in a virtual
          root directory, just as one often does when
          running <command>svnserve</command> as a daemon process.
          This might be done either to restrict access to parts of the
          system, or simply to relieve the user of having to type an
          absolute path in the <literal>svn+ssh://</literal>
          URL.</para>
-->
        <para>In diesem Beispiel könnte es sich bei
          <filename>/path/to/svnserve</filename> um ein
          maßgeschneidertes Wrapper-Skript für
          <command>svnserve</command> handeln, das die umask setzt
          (siehe <xref linkend="svn.serverconfig.multimethod"/>). Es
          wird außerdem veranschaulicht, wie
          <command>svnserve</command> in einem virtuellen
          Wurzelverzeichnis verankert wird, so wie es oft gemacht
          wird, wenn <command>svnserve</command> als Daemon-Prozess
          läuft. Das könnte entweder geschehen, um den Zugriff auf
          Teile des Systems einzuschränken oder um dem Anwender die
          Bürde abzunehmen, einen absoluten Pfad im URL
          <literal>svn+ssh://</literal> angeben zu müssen.</para>

<!--
        <para>It's also possible to have multiple users share a single
          account.  Instead of creating a separate system account for
          each user, generate a public/private key pair for each
          person.  Then place each public key into
          the <filename>authorized_keys</filename> file, one per
          line, and use the <option>- -tunnel-user</option>
          option:</para>
-->
        <para>Es besteht weiterhin die Möglichkeit, dass sich mehrere
          Anwender ein einzelnes Konto teilen. Statt ein gesondertes
          Konto für jeden Anwender zu erstellen, generieren Sie für
          jede Person jeweils ein Paar aus einem öffentlichen und
          einem privaten Schlüssel. Tragen Sie dann jeden öffentlichen
          Schlüssel in eine eigene Zeile der Datei
          <filename>authorized_keys</filename> ein und verwenden die
          Option <option>--tunnel-user</option>:</para>

        <informalexample>
          <programlisting>
  command="svnserve -t --tunnel-user=harry" TYPE1 KEY1 harry@example.com
  command="svnserve -t --tunnel-user=sally" TYPE2 KEY2 sally@example.com
</programlisting>
        </informalexample>

<!--
        <para>This example allows both Harry and Sally to connect to
          the same account via public key authentication.  Each of
          them has a custom command that will be executed;
          the <option>- -tunnel-user</option> option 
          tells <command>svnserve</command> to assume that the named
          argument is the authenticated user.  Without
          <option>- -tunnel-user</option>, it would appear as though
          all commits were coming from the one shared system
          account.</para>
-->
        <para>Dieses Beispiel erlaubt sowohl Harry als auch Sally,
          sich über die Authentifikation durch einen öffentlichen
          Schlüssel mit demselben Konto zu verbinden. Beide verfügen
          über einen angepassten Befehl, der ausgeführt wird. Die
          Option <option>--tunnel-user</option> teilt
          <command>svnserve</command> mit, das benannte Argument als
          den authentifizierten Anwender zu akzeptieren.  Ohne
          <option>--tunnel-user</option> sähe es so aus als kämen alle
          Übergaben vom gemeinsamen Konto.</para>

<!--
        <para>A final word of caution: giving a user access to the
          server via public-key in a shared account might still allow
          other forms of SSH access, even if you've set
          the <literal>command</literal> value
          in <filename>authorized_keys</filename>.  For example, the
          user may still get shell access through SSH or be able to
          perform X11 or general port forwarding through your server.
          To give the user as little permission as possible, you may
          want to specify a number of restrictive options immediately
          after the <literal>command</literal>:</para>
-->
        <para>Ein letztes Wort zur Warnung: Die Zugriffsberechtigung
          für einen Anwender über einen öffentlichen Schlüssel und ein
          gemeinsames Konto könnte noch weitere SSH-Zugänge erlauben,
          selbst wenn Sie einen Wert für <literal>command</literal> in
          in <filename>authorized_keys</filename> angegeben haben. So
          kann der Anwender beispielsweise Shell-Zugang über SSH
          erlangen oder X11 oder allgemeine Portweiterleitung über
          Ihren Server einrichten. Um Ihrem Anwender die
          geringstmögliche Erlaubnis zu erteilen, sollten Sie
          unmittelbar nach <literal>command</literal> eine Reihe
          einschränkender Optionen angeben:</para>

        <informalexample>
          <programlisting>
  command="svnserve -t --tunnel-user=harry",no-port-forwarding,no-agent-forw
arding,no-X11-forwarding,no-pty TYPE1 KEY1 harry@example.com
</programlisting>
        </informalexample>

<!--
        <para>Note that this all must be on one line&mdash;truly on
          one line&mdash;since SSH <filename>authorized_keys</filename>
          files do not even allow the conventional backslash character
          (<literal>\</literal>) for line continuation.  The only
          reason we've shown it with a line break is to fit it on
          the physical page of a book.</para>
-->
        <para>Beachten Sie, dass alles auf einer Zeile stehen muss
          &ndash; tatsächlich auf einer Zeile &ndash; da die
          SSH-Dateien <filename>authorized_keys</filename> nicht
          einmal das übliche Backslash-Zeichen (<literal>\</literal>)
          zur Zeilenfortsetzung erlauben. Der einzige Grund für den
          von uns eingefügten Zeilenumbruch ist die Unterbringung auf
          der Breite einer Buchseite.</para>

      </sect3>
    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.svnserve.ref">
<!--
      <title>svnserve Configuration Reference</title>
-->
      <title>svnserve Konfigurations-Referenz</title>

<!--
      <para>In the previous sections, we've mentioned numerous
        configuration options that administrators can use in their
        <filename>svnserve.conf</filename> files to configure the
        behavior of Subversion as accessed via Subversion's
        <command>svnserve</command> server option.  In this section,
        we'll quickly summarize <emphasis>all</emphasis> the
        configuration options supported by this server.</para>
-->
      <para>In den vorhergehenden Abschnitten erwähnten wir zahlreiche
        Optionen, die Administratoren in ihren
        <filename>svnserve.conf</filename> Dateien verwenden können,
        um das Verhalten von Subversion zu konfigurieren, so wie es
        beim Zugriff über die Server-Option
        <command>svnserve</command> geschieht. In diesem Abschnitt
        wollen wir schnell <emphasis>alle</emphasis> von diesem Server
        unterstützten Konfigurationsoptionen zusammenfassen.</para>

<!--
      <para>The <filename>svnserve.conf</filename> configuration file
        uses a typical INI-style format, with name/value pairs of
        options grouped into named sections.  (This is conveniently
        the same format used by Subversion's runtime configuration
        area on the client side of the network.)  We'll describe
        herein each of those named sections and the options available
        for use within them.</para>
-->
      <para>Die Konfigurations-Datei <filename>svnserve.conf</filename>
        verwendet ein typisches Format im INI-Stil mit Name-Wert
        Paaren von Optionen, die in benannten Abschnitten
        zusammengefasst werden. (Praktischerweise handelt es sich um
        dasselbe Format, das im client-seitigen
        Laufzeit-Konfigurations-Bereich des Netzes Verwendung findet.)
        Wir werden hiermit jeden dieser benamten Abschnitte sowie die
        darin verfügbaren Optionen beschreiben.</para>

<!--
      <para>By default, <command>svnserve</command> will consult
        per-repository configuration files located
        at <filename>conf/svnserve.conf</filename> within the physical
        directory structure of the repository.  To instead use a
        single configuration file whose values apply to all
        repositories served via an instance
        of <command>svnserve</command>, use
        the <option>- -config-file</option> option when starting your
        server.</para>
-->
      <para>Standardmäßig untersucht <command>svnserve</command>
        Konfigurations-Dateien pro Projektarchiv, die sich in
        <filename>conf/svnserve.conf</filename> innerhalb der
        physischen Verzeichnisstruktur des Projektarchivs befinden. Um
        stattdessen eine einzelne Konfigurations-Datei zu verwenden,
        deren Werte für alle Projektarchive gelten, die von einer
        Instanz von <command>svnserve</command> bedient werden,
        verwenden Sie beim Start Ihres Servers die Option
        <option>--config-file</option>.</para>

      <note>
<!--
        <para>In the following sections, we will refer to
          the <command>svnserve</command> configuration file by its
          canonical name, <filename>svnserve.conf</filename>.  The
          filename of actual configuration file used by
          your <command>svnserve</command> instance might be something
          else, though.  We trust this won't be too confusing.</para>
-->
        <para>In den folgenden Abschnitten beziehen wir uns auf die
          Konfigurations-Datei von <command>svnserve</command> unter
          deren kanonischen Namen <filename>svnserve.conf</filename>.
          Der Dateiname der tatsächlich von Ihrer 
          <command>svnserve</command>-Instanz verwendeten
          Konfigurations-Datei kann jedoch anders lauten. Wir gehen
          davon aus, das es nicht zu verwirrend wird.</para>
      </note>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.svnserve.ref.general">
<!--
        <title>General configuration</title>
-->
        <title>Allgemeine Konfiguration</title>

<!--
        <para>The <literal>[general]</literal> section contains the
          most commonly used and broadly
          focused <command>svnserve</command> configuration
          options.</para>
-->
        <para>Der Abschnitt <literal>[general]</literal> beinhaltet
          die meist verwendeten und am weitesten wirksamen
          Konfigurations-Optionen von
          <command>svnserve</command>.</para>

        <variablelist>
    
          <varlistentry>
            <term><literal>anon-access</literal></term>
            <listitem>

<!--
              <para>Controls the access level granted to
                unauthenticated (anonymous) users.  Valid values
                are <literal>write</literal>, <literal>read</literal>,
                and <literal>none</literal>, with <literal>read</literal>
                being the default value.</para>
-->
              <para>Kontrolliert die Zugriffs-Ebene, die
                nicht-authentifizierten (anonymen) Anwendern gewährt
                wird.  Gültige Werte sind <literal>write</literal>,
                <literal>read</literal>, und <literal>none</literal>,
                wobei <literal>read</literal> der Standardwert
                ist.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>auth-access</literal></term>
            <listitem>

<!--
              <para>Controls the access level granted to authenticaed
                users.  Valid values are <literal>write</literal>,
                <literal>read</literal>, and <literal>none</literal>,
                with <literal>write</literal> being the default
                value.</para>
-->
              <para>Kontrolliert die Zugriffs-Ebene, die
                -authentifizierten Anwendern gewährt wird.  Gültige
                Werte sind <literal>write</literal>,
                <literal>read</literal>, und <literal>none</literal>,
                wobei <literal>write</literal> der Standardwert
                ist.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>authz-db</literal></term>
            <listitem>

<!--
              <para>Specifies the location of the repository access
                file as described in
                <xref linkend="svn.serverconfig.pathbasedauthz.getting-started"
                />.  If a regular local path is used, then unless that
                path begins with a forward-slash character
                (<literal>/</literal>), it is interpreted as a path
                relative to the directory containing
                the <filename>svnserve.conf</filename> configuration
                file.  If no path is specified, path-based access
                control will be disabled.</para>
-->
              <para>Gibt den Ort der Projektarchiv-Zugriffs-Datei an,
                wie in
                <xref linkend="svn.serverconfig.pathbasedauthz.getting-started"
                /> beschrieben. Falls ein gewöhnlicher lokaler Pfad
                verwendet wird, der nicht mit einem Schrägstrich
                (<literal>/</literal>) beginnt, wird er relativ zum
                dem Verzeichnis interpretiert, in dem sich die
                Konfigurations-Datei
                <filename>svnserve.conf</filename> befindet. Ist kein
                Pfad angegeben, die pfad-basierte Zugriffskontrolle
                abgeschaltet.</para>

<!--
              <para>As a special consideration, you may also specify
                the location of an access file which is versioned
                inside a Subversion repository.  Use a local URL (one
                which begins with <literal>file://</literal>) to refer
                to an absolute Subversion-versioned access file.
                Alternatively, use a repository relative URL (one
                which begins with <literal>^/</literal>) to cause
                <command>svnserve</command> to consult for each
                repository the access file stored at the specified
                relative URL within that repository.</para>
-->
              <para>Als besondere Gegenleistung können Sie auch den
                Ort einer Zugriffsdatei angeben, die innerhalb eines
                Subversion-Projektarchivs versioniert ist. Verwenden
                Sie einen lokalen URL (einen, der mit
                <literal>file://</literal> beginnt), um sich auf eine
                absolute Zugriffsdatei zu beziehen, die durch
                Subversion versioniert ist. Alternativ können Sie
                einen URL relativ zum Projektarchiv angeben(einer, der
                mit <literal>^/</literal> beginnt), um
                <command>svnserve</command> dazu zu veranlassen, für
                jedes Projektarchiv die unter dem bestimmten relativen
                URL in diesem Projektarchiv gespeicherte Datei
                heranzuziehen.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>force-username-case</literal></term>
            <listitem>

<!--
              <para>Specifies the case normalization applied to
                usernames before comparing them against the rules
                found in the access file (specified by
                the <literal>authz-db</literal> option).  Valid values
                are <literal>upper</literal> (to uppercase the
                usernames), <literal>lower</literal> (to lowercase the
                usernames), and <literal>none</literal> (to perform no
                normalization at all).  By
                default, <command>svnserve</command> will not perform
                any case normalization on usernames.</para>
-->
              <para>Gibt die Normalisierung der Groß- bzw.
                Kleinschreibung von Anwendernamen an, bevor sie mit
                den Regeln in der Zugriffsdatei (durch die Option
                <literal>authz-db</literal> spezifiziert) verglichen
                werden. Gültige Werte sind <literal>upper</literal>
                (Anwendernamen in Großbuchstaben umwandeln),
                <literal>lower</literal> (Anwendernamen in
                Kleinbuchstaben umwandeln) und <literal>none</literal>
                (keine Umwandlung vornehmen).  Standardmäßig nimmt
                <command>svnserve</command> keinerlei Umwandlung von
                Anwendernamen vor.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>groups-db</literal></term>
            <listitem>

<!--
              <para>Specifies the path of the groups file.  If a
                regular local path is used, then unless that path
                begins with a forward-slash character
                (<literal>/</literal>), it is interpreted as a path
                relative to the directory containing
                the <filename>svnserve.conf</filename> configuration
                file.</para>
-->
              <para>Gibt den Pfad der Gruppen-Datei an. Falls ein
                gewöhnlicher lokaler Pfad verwendet wird, der nicht
                mit einem Schrägstrich (<literal>/</literal>) beginnt,
                wird er relativ zum dem Verzeichnis interpretiert, in
                dem sich die Konfigurations-Datei
                <filename>svnserve.conf</filename> befindet.</para>

<!--
              <para>You may also specify the location of a groups file
                which is versioned inside a Subversion repository.
                Use a local URL (one which begins
                with <literal>file://</literal>) to refer to an
                absolute Subversion-versioned file.  Alternatively,
                use a repository relative URL (one which begins
                with <literal>^/</literal>) to cause
                <command>svnserve</command> to consult for each
                repository the group file stored at the specified
                relative URL within that repository.</para>
-->
              <para>Sie können auch einen Ort einer Gruppen-Datei
                angeben, die innerhalb eines Subversion-Projektarchivs
                versioniert ist. Verwenden Sie einen lokalen URL
                (einer, der mit <literal>file://</literal> beginnt),
                um eine absolute Datei unter Subversion-Versionierung
                zu referenzieren. Alternativ verwenden Sie einen URL
                relativ zum Projektarchiv (einer, der mit
                <literal>^/</literal> beginnt), um
                <command>svnserve</command> dazu zu veranlassen, für
                jedes Projektarchiv die Gruppen-Datei zu lesen, die am
                angegebenen relativen URL innerhalb dieses
                Projektarchivs liegt.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>hooks-env</literal></term>
            <listitem>

<!--
              <para>Specifies the path to the hook script environment
                configuration file.  This option overrides the
                per-repository default location for this file, and can
                be used to configure the hook script environment for
                multiple repositories in a single file if an absolute
                path is specified.  Unless you specify an absolute
                path, the file's location is interpreted as relative
                to the directory containing
                the <filename>svnserve.conf</filename> configuration
                file.</para>
-->
              <para>Gibt den Pfad zur Umgebungs-Konfigurations-Datei
                für Hook-Skripte an. Diese Option überschreibt den
                Standard-Ort für diese Datei pro Projektarchiv und
                kann verwendet werden, um die Umgebung für
                Hook-Skripte mehrerer Projektarchive in einer einzigen
                Datei zu konfigurieren, falls ein absoluter Pfad
                angegeben wird. Falls Sie keinen absoluten Pfad
                angeben, wird der Ort der Datei relativ zu dem
                Verzeichnis interpretiert, in dem sich die
                Konfigurations-Datei
                <filename>svnserve.conf</filename> befindet.</para>

<!--
              <para>See
                <xref linkend="svn.reposadmin.hooks.configuration" />
                for detailed information regarding the hook script
                environment configuration file.</para>
-->
              <para>Siehe
                <xref linkend="svn.reposadmin.hooks.configuration" />
                für detaillierte Informationen zur
                Umgebungs-Konfigurations-Datei für
                Hook-Scripte.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>password-db</literal></term>
            <listitem>

<!--
              <para>Specifies the path of the password database file.
                Unless the path specified begins with a forward-slash
                character (<literal>/</literal>), it is interpreted as
                a path relative to the directory containing the
                <filename>svnserve.conf</filename> configuration file.
                Note that if the SASL feature is used, this option
                will be ignored.</para>
-->
              <para>Gibt den Pfad zur Passwort-Datei an. Sofern der
                angegebene Pfad nicht mit einem Schrägstrich
                (<literal>/</literal>) beginnt, wird er relativ zum
                Verzeichnis interpretiert, in dem sich die
                Konfigurations-Datei
                <filename>svnserve.conf</filename> befindet.
                Beachten Sie, dass diese Option ignoriert wird, falls
                die SASL-Funktionalität verwendet wird.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>realm</literal></term>
            <listitem>

<!--
              <para>Specifies the authentication realm of the
                repository.  This is primarily used by the client to
                associate cached authentication credentials with a
                specific repository or set of repositories.  As such,
                it is best that the specified realm be unique across
                your repositories unless those repositories share the
                same password database.  By default, the repository's
                UUID is used as its authentication realm.</para>
-->
              <para>Gibt die Zugangsregion des Projektarchivs an. Dies
                wird primär vom Client verwendet, um
                zwischengespeicherte Authentisierungsdaten mit einem
                bestimmten Projektarchiv oder einer Menge von
                Projektarchiven zu verknüpfen. Daher sollte die
                angegebene Region über die Projektarchiv hinweg
                eindeutig sein, es sei denn, diese Projektarchive
                teilen sich dieselben Passwort-Daten. Standardmäßig
                wird der UUID des Projektarchivs als seine
                Zugangsregion verwendet.</para>

            </listitem>
          </varlistentry>
        </variablelist>
      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.svnserve.ref.sasl">
<!--
        <title>Cyrus SASL configuration</title>
-->
        <title>Cyrus SASL Konfiguration</title>

<!--
        <para>The <literal>[sasl]</literal> section contains
          configuration which is specific to the optional Cyrus Simple
          Authentication and Security Layer (SASL) integration feature
          of <command>svnserve</command>.  See
          <xref linkend="svn.serverconfig.svnserve.sasl"/> for a more
          thorough description of this feature and the benefits it
          provides.</para>
-->
        <para>Der Abschnitt <literal>[sasl]</literal> beinhaltet die
          Konfiguration, die spezifisch für die optionale Cyrus Simple
          Authentication and Security Layer (SASL) Integration von
          <command>svnserve</command> ist. Siehe
          <xref linkend="svn.serverconfig.svnserve.sasl"/> für eine
          gründlichere Beschreibung dieser Funktionalität und die
          hiermit verbundenen Vorteile.</para>

        <variablelist>
    
          <varlistentry>
            <term><literal>max-encryption</literal></term>
            <listitem>

<!--
              <para>Specifies&mdash;as an integer bit-width&mdash;the
                maximum desired strength of the security layer's
                encryption algorithm.  The special
                value <literal>0</literal> means "no encryption", and
                the special value <literal>1</literal> means
                "integrity checking only".  The default value for this
                option is <literal>256</literal> (256-bit
                encryption).</para>
-->
              <para>Gibt die maximale Stärke des
                Verschlüsselungs-Algorithmus der Sicherheitsschicht
                als ganzzahlige Bit-Breite an.
                Der besondere Wert
                <literal>0</literal> bedeutet "keine Verschlüsselung", und
                der besondere Wert <literal>1</literal> bedeutet
                "nur Integritäts-Überprüfung". Der Standardwert für
                diese Option ist <literal>256</literal> (256-bit
                Verschlüsselung).</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>min-encryption</literal></term>
            <listitem>

<!--
              <para>Specifies&mdash;as an integer bit-width&mdash;the
                minimum desired strength of the security layer's
                encryption algorithm.  The special
                value <literal>0</literal> means "no encryption", and
                the special value <literal>1</literal> means
                "integrity checking only".  The default value for this
                option is <literal>0</literal> (no encryption).</para>
-->
              <para>Gibt die minimale Stärke des
                Verschlüsselungs-Algorithmus der Sicherheitsschicht
                als ganzzahlige Bit-Breite an.  Der besondere Wert
                <literal>0</literal> bedeutet "keine Verschlüsselung",
                und der besondere Wert <literal>1</literal> bedeutet
                "nur Integritäts-Überprüfung". Der Standardwert für
                diese Option ist <literal>0</literal> (keine
                Verschlüsselung).</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>use-sasl</literal></term>
            <listitem>

<!--
              <para>Specifies (as a <literal>true</literal>
                or <literal>false</literal> value) whether to enable
                the Cyrus SASL feature.  Note that this feature is
                only available if <command>svnserve</command> was
                built with support for the feature.  This feature is
                disabled by default.</para>
-->
              <para>Gibt an (als <literal>true</literal> oder
                <literal>false</literal> Wert), ob die the Cyrus SASL
                Funktionalität aktiviert werden soll.  Beachten Sie,
                dass diese Funktionalität nur verfügbar ist, falls
                dessen Unterstützung in <command>svnserve</command>
                eingebaut wurde.  Standardmäßig ist diese
                Funktionalität deaktiviert.</para>

            </listitem>
          </varlistentry>

        </variablelist>
      </sect3>
    </sect2>
  </sect1>


  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.serverconfig.httpd">

<!--
    <title>httpd, the Apache HTTP Server</title>
-->
    <title>httpd, der Apache HTTP-Server</title>

<!--
    <para>The Apache HTTP Server is a <quote>heavy-duty</quote>
      network server that Subversion can leverage.  Via a custom
      module, <command>httpd</command> makes Subversion repositories
      available to clients via the WebDAV/DeltaV<footnote><para>See
      <ulink url="http://www.webdav.org/"/>.</para></footnote>
      protocol, which is an extension to HTTP 1.1.  This protocol
      takes the ubiquitous HTTP protocol that is the core of the World
      Wide Web, and adds writing&mdash;specifically, versioned
      writing&mdash;capabilities.  The result is a standardized,
      robust system that is conveniently packaged as part of the
      Apache 2.0 software, supported by numerous operating systems and
      third-party products, and doesn't require network administrators
      to open up yet another custom port.<footnote><para>They really
      hate doing that.</para></footnote> While an Apache-Subversion
      server has more features than <command>svnserve</command>, it's
      also a bit more difficult to set up.  With flexibility often
      comes more complexity.</para>
-->
    <para>Der Apache HTTP-Server ist ein
      <quote>Hochleistungs</quote>-Netzwerk-Server, den Subversion zu
      seinem Vorteil nutzen kann. Über ein angepasstes Modul macht
      <command>httpd</command> Subversion-Projektarchive für Clients
      über das WebDAV/DeltaV-Protokoll<footnote><para>Siehe
      <ulink url="http://www.webdav.org/"/>.</para></footnote>
      verfügbar, welches eine Erweiterung von HTTP 1.1 ist.  Dieses
      Protokoll nimmt das allgegenwärtige HTTP-Protokoll, das der Kern
      des World Wide Web ist, und fügt Schreibfähigkeiten &ndash; im
      Besonderen, versioniertes Schreiben &ndash; hinzu.  Das Ergebnis
      ist ein standardisiertes, robustes System, das auf geeignete
      Weise als Teil der Software Apache 2.0 verteilt wird, die von
      zahlreichen Betriebssystemen und Drittanbieter-Produkten
      unterstützt wird und keine Netzwerk-Administratoren benötigt, um
      einen weiteren speziellen Port zu öffnen.<footnote><para>Die
      hassen so etwas echt.</para></footnote> Während ein
      Apache-Subversion-Server mehr Möglichkeiten bietet als
      <command>svnserve</command>, ist er allerdings auch etwas
      schwieriger einzurichten. Flexibilität geht oft mit Komplexität
      einher.</para>

<!--
    <para>Much of the following discussion includes references to
      Apache configuration directives.  While some examples are given
      of the use of these directives, describing them in full is
      outside the scope of this chapter.  The Apache team maintains
      excellent documentation, publicly available on their web site at
      <ulink url="http://httpd.apache.org"/>.  For example, a general
      reference for the configuration directives is located at
      <ulink url="http://httpd.apache.org/docs/current/mod/directives.html"
      />.</para>
-->
    <para>Viele der folgenden Erläuterungen beziehen sich auf
      Konfigurations-Direktiven von Apache. Obwohl ein paar Beispiele
      zur Verwendung dieser Direktiven gegeben werden, würde deren
      erschöpfende Behandlung dieses Kapitel sprengen. Das Apache-Team
      verfügt über hervorragende Dokumentation, die auf deren
      Web-Seite <ulink url="http://httpd.apache.org"/> frei verfügbar
      ist. So befindet sich beispielsweise eine allgemeine Referenz
      der Konfigurations-Direktiven unter
      <ulink url="http://httpd.apache.org/docs/current/mod/directives.html"
      />.</para>

<!--
    <para>Also, as you make changes to your Apache setup, it is likely
      that somewhere along the way a mistake will be made.  If you are
      not already familiar with Apache's logging subsystem, you should
      become aware of it.  In your <filename>httpd.conf</filename>
      file are directives that specify the on-disk locations of the
      access and error logs generated by Apache (the
      <literal>CustomLog</literal> and <literal>ErrorLog</literal>
      directives, respectively).
      Subversion's <command>mod_dav_svn</command> uses Apache's error
      logging interface as well.  You can always browse the contents
      of those files for information that might reveal the source of a
      problem that is not clearly noticeable otherwise.</para>
-->
    <para>Falls Sie Änderungen an den Einstellungen von Apache
      vornehmen, ist es wahrscheinlich, dass sich irgendwo ein Fehler
      einschleicht. Wenn Sie noch nicht mit der Protokollierung von
      Apache vertraut sind, sollten sie sich damit vertraut machen. In
      der Datei <filename>httpd.conf</filename> befinden sich
      Direktiven, die angeben, wo auf der Platte sich die von Apache
      erzeugten Zugriffs- und Fehlerprotokollierungsdateien befinden
      (die Direktiven <literal>CustomLog</literal> bzw.
      <literal>ErrorLog</literal>). Auch
      <command>mod_dav_svn</command> von Subversion verwendet die
      Protokollierungsschnittstelle von Apache. Sie können jederzeit
      den Inhalt dieser Dateien nach Informationen durchforsten, die
      eine Problemquelle aufdecken könnten, die sonst nicht
      offensichtlich wäre.</para>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.httpd.prereqs">
<!--
      <title>Prerequisites</title>
-->
      <title>Voraussetzungen</title>

<!--
      <para>To network your repository over HTTP, you basically need
        four components, available in two packages.  You'll need
        Apache <command>httpd</command> 2.0 or newer, the
        <command>mod_dav</command> DAV module that comes with it,
        Subversion, and the <command>mod_dav_svn</command>
        filesystem provider module distributed with Subversion.
        Once you have all of those components, the process of
        networking your repository is as simple as:</para>
-->
      <para>Um Ihr Projektarchiv im Netz über HTTP zur Verfügung zu
        stellen, brauchen Sie grundsätzlich vier Komponenten, die in
        zwei Paketen verfügbar sind. Sie benötigen Apache
        <command>httpd</command> 2.0 oder neuer, das dazu gelieferte
        DAV-Modul <command>mod_dav</command>, Subversion und das
        mitgelieferte Dateisystem-Modul <command>mod_dav_svn</command>.
        Sobald Sie über all diese Komponenten verfügen, ist die
        Bereitstellung Ihres Projektarchivs über das Netz ganz
        einfach:</para>

      <itemizedlist>
        <listitem>
<!--
          <para>Getting httpd up and running with
            the <command>mod_dav</command> module</para>
-->
          <para>Inbetriebnahme von httpd mit dem Modul
            <command>mod_dav</command></para>
        </listitem>
        <listitem>
<!--
          <para>Installing the <command>mod_dav_svn</command> backend
            to <command>mod_dav</command>, which uses Subversion's
            libraries to access the repository</para>
-->
          <para>Installation des
            <command>mod_dav_svn</command>-Backends zu
            <command>mod_dav</command>, das die Bibliotheken von
            Subversion für den Zugriff auf das Projektarchiv
            verwendet</para>
        </listitem>
        <listitem>
<!--
          <para>Configuring your <filename>httpd.conf</filename>
            file to export (or expose) the repository</para>
-->
          <para>Konfiguration Ihrer Datei
            <filename>httpd.conf</filename>, um das Projektarchiv zu
            exportieren (oder sichtbar zu machen)</para>
        </listitem>
      </itemizedlist>

<!--
      <para>You can accomplish the first two items either by
        compiling <command>httpd</command> and Subversion from
        source code or by installing prebuilt binary packages of
        them on your system.  For the most up-to-date information on
        how to compile Subversion for use with the Apache HTTP Server,
        as well as how to compile and configure Apache itself for
        this purpose, see the <filename>INSTALL</filename> file in
        the top level of the Subversion source code tree.</para>
-->
      <para>Sie können die ersten beiden Punkte bewerkstelligen, indem
        Sie entweder <command>httpd</command> und Subversion aus den
        Quellen übersetzen oder als vorgefertigte Binärpakete auf
        Ihrem System installieren. Die aktuellsten Informationen zur
        Übersetzung von Subversion in Verbindung mit dem Apache
        HTTP-Server sowie die Übersetzung und Konfigurierung von
        Apache zu diesem Zweck finden Sie in der Datei
        <filename>INSTALL</filename> in der obersten Verzeichisebene
        des Quelltextes von Subversion.</para>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.httpd.basic">
<!--
      <title>Basic Apache Configuration</title>
-->
      <title>Grundlegende Konfiguration von Apache</title>

<!--
      <para>Once you have all the necessary components installed on
        your system, all that remains is the configuration of Apache
        via its <filename>httpd.conf</filename> file.  Instruct Apache
        to load the <command>mod_dav_svn</command> module using the
        <literal>LoadModule</literal> directive.  This directive must
        precede any other Subversion-related configuration items.  If
        your Apache was installed using the default layout, your
        <command>mod_dav_svn</command> module should have been
        installed in the <filename>modules</filename> subdirectory of
        the Apache install location (often
        <filename>/usr/local/apache2</filename>).  The
        <literal>LoadModule</literal> directive has a simple syntax,
        mapping a named module to the location of a shared library on
        disk:</para>
-->
      <para>Sobald alle notwendigen Komponenten auf Ihrem System
        installiert sind, bleibt nur noch die Konfiguration von Apache
        über seine Datei <filename>httpd.conf</filename>. Weisen Sie
        Apache mit der Direktive  <literal>LoadModule</literal> an,
        das Modul <command>mod_dav_svn</command> zu laden. Diese
        Direktive muss vor allen Konfigurationseinträgen in Verbindung
        mit Subversion stehen. Falls Ihr Apache mit dem vorgegebenen
        Aufbau installiert wurde, sollte sich das Modul
        <command>mod_dav_svn</command> im Unterverzeichnis
        <filename>modules</filename> des
        Apache-Installationsverzeichnisses befinden (oft
        <filename>/usr/local/apache2</filename>). Die Direktive
        <literal>LoadModule</literal> hat eine einfache Syntax, wobei
        ein benanntes Modul auf den Ort einer Shared-Library auf
        der Platte abgebildet wird:</para>

      <informalexample>
        <programlisting>
LoadModule dav_svn_module     modules/mod_dav_svn.so
</programlisting>
      </informalexample>

<!--
      <para>Apache interprets the <literal>LoadModule</literal>
        configuration item's library path as relative to its own
        server root.  If configured as previously shown, Apache will
        look for the Subversion DAV module shared library in its
        own <filename>modules/</filename> subdirectory.  Depending on
        how Subversion was installed on your system, you might need to
        specify a different path for this library altogether, perhaps
        even an absolute path such as in the following example:</para>
-->
      <para>Apache interpretiert den Bibliothekspfad des
        Konfigurationseintrags <literal>LoadModule</literal> als
        relativ zum Wurzelverzeichnis seines eigenen Servers. Falls er
        wie gezeigt konfiguriert ist, wird Apache in seinem eigenen
        <filename>modules/</filename> Unterverzeichnis nach der
        Shared-Library des Subversion DAV-Moduls suchen. Abhängig
        davon, wie Subversion auf Ihrem System installiert wurde, kann
        es sein, dass Sie einen ganz anderen Pfad für diese Bibliothek
        angeben müssen, vielleicht sogar einen absoluten Pfad wie im
        folgenden Beispiel:</para>

      <informalexample>
        <programlisting>
LoadModule dav_svn_module     C:/Subversion/lib/mod_dav_svn.so
</programlisting>
      </informalexample>

<!--
      <para>Note that if <command>mod_dav</command> was compiled as a
        shared object (instead of statically linked directly to the
        <command>httpd</command> binary), you'll need a similar
        <literal>LoadModule</literal> statement for it, too.  Be sure
        that it comes before the <command>mod_dav_svn</command> line:</para>
-->
      <para>Falls <command>mod_dav</command> als Shared-Objekt
        übersetzt wurde (statt statisch direkt in die
        <command>httpd</command>-Binärdatei gelinkt worden zu sein),
        benötigen Sie hierfür ebenfalls einen ähnlichen
        <literal>LoadModule</literal>-Eintrag. Stellen Sie sicher,
        dass er vor der <command>mod_dav_svn</command>-Zeile
        steht:</para>

      <informalexample>
        <programlisting>
LoadModule dav_module         modules/mod_dav.so
LoadModule dav_svn_module     modules/mod_dav_svn.so
</programlisting>
      </informalexample>

<!--

      <para>At a later location in your configuration file, you now
        need to tell Apache where you keep your Subversion repository
        (or repositories).  The <literal>Location</literal> directive
        has an XML-like notation, starting with an opening tag and
        ending with a closing tag, with various other configuration
        directives in the middle.  The purpose of the
        <literal>Location</literal> directive is to instruct Apache to
        do something special when handling requests that are directed
        at a given URL or one of its children.  In the case of
        Subversion, you want Apache to simply hand off support for
        URLs that point at versioned resources to the DAV layer.  You
        can instruct Apache to delegate the handling of all URLs whose
        path portions (the part of the URL that follows the server's
        name and the optional port number) begin with
        <filename>/repos/</filename> to a DAV provider whose
        repository is located at
        <filename>/var/svn/repository</filename> using the
        following <filename>httpd.conf</filename> syntax:</para>
-->

      <para>Weiter unten in der Konfigurationsdatei sollten Sie Apache
        nun mitteilen, wo Sie Ihr Subversion-Projektarchiv (oder Ihre
        Projektarchive) aufbewahren. Die Direktive
        <literal>Location</literal> besitzt eine XML-ähnliche
        Notation, beginnend mit einem öffnenden Tag, endend mit einem
        schließenden Tag und verschiedener anderer
        Konfigurations-Direktiven dazwischen. Der Zweck der Direktive
        <literal>Location</literal> besteht darin, Apache anzuweisen,
        etwas Besonderes zu tun, falls Anfragen bearbeitet werden, die
        an einen bestimmten URL oder dessen Kinder gerichtet sind. Im
        Fall von Subversion möchten Sie, dass Apache die Unterstützung
        für URLs, die auf versionierte Ressourcen zeigen,  einfach an
        die DAV-Schicht weiterleitet. Sie können Apache anweisen, die
        Bearbeitung aller URLs, deren Pfadteile (der Teil des URL, der
        nach dem Servernamen und der optionalen Portnummer steht) mit
        <filename>/repos/</filename> beginnen, an einen DAV-Provider
        zu delegieren, dessen Projektarchiv unter
        <filename>/var/svn/repository</filename> liegt, indem Sie die
        folgende <filename>httpd.conf</filename>-Syntax
        verwenden:</para>

      <informalexample>
        <programlisting>
&lt;Location /repos&gt;
  DAV svn
  SVNPath /var/svn/repository
&lt;/Location&gt;
</programlisting>
      </informalexample>

<!--
      <para>If you plan to support multiple Subversion repositories
        that will reside in the same parent directory on your local
        disk, you can use an alternative
        directive&mdash;<literal>SVNParentPath</literal>&mdash;to
        indicate that common parent directory.  For example, if you
        know you will be creating multiple Subversion repositories in
        a directory <filename>/var/svn</filename> that would be
        accessed via URLs such as
        <uri>http://my.server.com/svn/repos1</uri>,
        <uri>http://my.server.com/svn/repos2</uri>, and so on, you
        could use the <filename>httpd.conf</filename> configuration
        syntax in the following example:</para>
-->
      <para>Falls Sie planen, mehrere Subversion-Projektarchive zu
        unterstützen, die sich unterhalb eines gemeinsamen
        Elternverzeichnisses auf Ihrer lokalen Platte befinden, können
        Sie eine alternative Direktive,
        <literal>SVNParentPath</literal>,  verwenden, um auf das
        gemeinsame Elternverzeichnis hinzuweisen. Wenn Sie
        beispielsweise wissen, dass Sie mehrere
        Subversion-Projektarchive in einem Verzeichnis
        <filename>/var/svn</filename> anlegen möchten, auf die über
        URLs wie <uri>http://my.server.com/svn/repos1</uri>,
        <uri>http://my.server.com/svn/repos2</uri> usw. zugegriffen
        werden soll, könnten Sie die Konfigurations-Syntax von
        <filename>httpd.conf</filename> aus dem folgenden Beispiel
        verwenden:</para>

<!--
      <informalexample>
        <programlisting>
&lt;Location /svn&gt;
  DAV svn

  # Automatically map any "/svn/foo" URL to repository /var/svn/foo
  SVNParentPath /var/svn
&lt;/Location&gt;
</programlisting>
      </informalexample>
-->
      <informalexample>
        <programlisting>
&lt;Location /svn&gt;
  DAV svn

  # Automatisch irgendein "/svn/foo" URL auf Projektarchiv /var/svn/foo abbilden
  SVNParentPath /var/svn
&lt;/Location&gt;
</programlisting>
      </informalexample>

<!--
      <para>Using this syntax, Apache will delegate the
        handling of all URLs whose path portions begin with
        <filename>/svn/</filename> to the Subversion DAV provider,
        which will then assume that any items in the directory
        specified by the <literal>SVNParentPath</literal> directive
        are actually Subversion repositories.  This is a particularly
        convenient syntax in that, unlike the use of the
        <literal>SVNPath</literal> directive, you don't have to
        restart Apache to add or remove hosted repositories.</para>
-->
      <para>Die Verwendung dieser Syntax veranlasst Apache, die
        Bearbeitung aller URLs, deren Pfadteil mit
        <filename>/svn/</filename> beginnt, an den
        Subversion-DAV-Provider weiterzuleiten, der dann davon
        ausgeht, dass alle Objekte in dem durch die
        <literal>SVNParentPath</literal>-Direktive spezifizierten
        Verzeichnis tatsächlich Subversion-Projektarchive sind. Dies
        ist insofern eine besonders bequeme Syntax, da Sie im
        Gegensatz zur Direktive <literal>SVNPath</literal> Apache
        nicht neu starten müssen, wenn Sie Projektarchive
        hinzufügen oder entfernen.</para>

<!--
      <para>Be sure that when you define your new
        <literal>Location</literal>, it doesn't overlap with other
        exported locations.  For example, if your main
        <literal>DocumentRoot</literal> is exported to
        <filename>/www</filename>, do not export a Subversion
        repository in <literal>&lt;Location /www/repos&gt;</literal>.
        If a request comes in for the URI
        <filename>/www/repos/foo.c</filename>, Apache won't know
        whether to look for a file <filename>repos/foo.c</filename> in
        the <literal>DocumentRoot</literal>, or whether to delegate
        <command>mod_dav_svn</command> to return
        <filename>foo.c</filename> from the Subversion repository.
        The result is often an error from the server of the form
        <literal>301 Moved Permanently</literal>.</para>
-->
      <para>Achten Sie beim Definieren Ihrer neuen
        <literal>Location</literal> darauf, dass sie sich nicht mit
        anderen bereits exportierten überschneidet. Wenn
        beispielsweise Ihre Haupt-<literal>DocumentRoot</literal> nach
        <filename>/www</filename> exportiert wird, sollten Sie ein
        Subversion-Projektarchiv nicht in <literal>&lt;Location
        /www/repos&gt;</literal> exportieren. Falls eine Anfrage für
        den URI <filename>/www/repos/foo.c</filename> hereinkommt,
        weiß Apache nicht, ob die Datei
        <filename>repos/foo.c</filename> in
        <literal>DocumentRoot</literal> gesucht wird oder ob es die
        Herausgabe von <filename>foo.c</filename> aus dem
        Projektarchiv an <command>mod_dav_svn</command> delegieren
        soll. Das Ergebnis ist oftmals ein Fehler vom Server der Form
        <literal>301 Moved Permanently</literal>.</para>

      <sidebar>
<!--
        <title>Server Names and the COPY Request</title>
-->
        <title>Server-Namen und die COPY-Anfrage</title>

<!--
        <para>Subversion makes use of the <literal>COPY</literal>
          request type to perform server-side copies of files and
          directories.  As part of the sanity checking done by the
          Apache modules, the source of the copy is expected to be
          located on the same machine as the destination of the copy.
          To satisfy this requirement, you might need to
          tell <command>mod_dav</command> the name you use as the
          hostname of your server.  Generally, you can use
          the <literal>ServerName</literal> directive in
          <filename>httpd.conf</filename> to accomplish this.</para>
-->
        <para>Subversion verwendet den
          <literal>COPY</literal>-Anfragetyp, um serverseitige Kopien
          von Dateien und Verzeichnissen anzufertigen. Als Teil der
          von den Apache-Modulen durchgeführten Plausibilitätsprüfung
          wird erwartet, dass sich die Quelle der Kopie auf demselben
          Rechner befindet wie das Ziel. Um diese Anforderung zu
          erfüllen, kann es notwendig sein, dass Sie
          <command>mod_dav</command> den von Ihnen verwendeten Namen
          für den Server mitteilen müssen. Im Allgemeinen können Sie
          hierfür die Direktive <literal>ServerName</literal> in
          <filename>httpd.conf</filename> verwenden.</para>

        <informalexample>
          <programlisting>
ServerName svn.example.com
</programlisting>
        </informalexample>

<!--
        <para>If you are using Apache's virtual hosting support via
          the <literal>NameVirtualHost</literal> directive, you may
          need to use the <literal>ServerAlias</literal> directive to
          specify additional names by which your server is known.
          Again, refer to the Apache documentation for full
          details.</para>
-->
        <para>Falls Sie Apaches Unterstützung für virtuelles Hosting
          über die Direktive <literal>NameVirtualHost</literal>
          nutzen, müssen Sie eventuell die Direktive
          <literal>ServerAlias</literal> verwenden, um weitere Namen
          anzugeben, unter denen Ihr Server bekannt ist. Wenden Sie
          sich auch hier für alle Details an die Dokumentation von
          Apache.</para>
      </sidebar>

<!--
      <para>At this stage, you should strongly consider the question
        of permissions.  If you've been running Apache for some time
        now as your regular web server, you probably already have a
        collection of content&mdash;web pages, scripts, and such.
        These items have already been configured with a set of
        permissions that allows them to work with Apache, or more
        appropriately, that allows Apache to work with those files.
        Apache, when used as a Subversion server, will also need the
        correct permissions to read and write to your Subversion
        repository.</para>
-->
      <para>An dieser Stelle sollten Sie ernsthaft über Berechtigungen
        nachdenken. Falls Sie Apache schon eine Zeit lang als Ihren
        regulären Web-Server in Betrieb haben, werden Sie
        wahrscheinlich bereits eine Ansammlung von Inhalt haben, etwa
        Webseiten, Skripte usw. Diese Dinge sind bereits mit einer
        Menge an Berechtigungen versehen, die es ihnen erlauben, mit
        Apache zusammen zu arbeiten, oder passender, die es Apache
        erlauben, mit diesen Dateien zu arbeiten. Wenn Apache als
        Subversion-Server eingesetzt wird, braucht er ebenfalls die
        richtigen Berechtigungen zum Lesen und Schreiben Ihres
        Subversion-Projektarchivs.</para>

<!--
      <para>You will need to determine a permission system setup that
        satisfies Subversion's requirements without messing up any
        previously existing web page or script installations.  This
        might mean changing the permissions on your Subversion
        repository to match those in use by other things that Apache
        serves for you, or it could mean using the
        <literal>User</literal> and <literal>Group</literal>
        directives in <filename>httpd.conf</filename> to specify that
        Apache should run as the user and group that owns your
        Subversion repository.  There is no single correct way to set
        up your permissions, and each administrator will have
        different reasons for doing things a certain way.  Just be
        aware that permission-related problems are perhaps the most
        common oversight when configuring a Subversion repository for
        use with Apache.</para>
-->
      <para>Sie werden ein Berechtigungssystem festlegen müssen, das
        die Anforderungen von Subversion erfüllt, ohne dabei
        bestehende Webseiten oder Skript-Installationen zu
        beeinträchtigen. Das kann bedeuten, dass die Berechtigungen
        für Ihr Projektarchiv an die anderen Dinge angepasst werden
        müssen, die Apache für Sie zur Verfügung stellt, oder dass Sie
        die Direktiven <literal>User</literal> und
        <literal>Group</literal> in <filename>httpd.conf</filename>
        verwenden, um Apache mit denjenigen Anwender- und
        Gruppenkennungen laufen zu lassen, die auch das
        Subversion-Projektarchiv besitzt.  Es gibt keine einzig
        richtige Methode, um die Berechtigungen zu vergeben, und jeder
        Administrator wird bestimmte Gründe haben, um es auf eine
        bestimmte Art zu tun. Seien Sie sich lediglich bewusst, dass
        Probleme im Zusammenhang mit den Berechtigungen am häufigsten
        übersehen werden, wenn ein Subversion-Projektarchiv für die
        Verwendung mit Apache eingerichtet wird.</para>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.httpd.authn">
<!--
      <title>Authentication Options</title>
-->
      <title>Authentifikationsoptionen</title>

<!--
      <para>At this point, if you configured
        <filename>httpd.conf</filename> to contain something such as the
        following:</para>
-->
      <para>Falls Sie <filename>httpd.conf</filename> dergestalt
        konfiguriert haben, so dass sie etwa den folgenden Eintrag
        enthält:</para>

      <informalexample>
        <programlisting>
&lt;Location /svn&gt;
  DAV svn
  SVNParentPath /var/svn
&lt;/Location&gt;
</programlisting>
      </informalexample>

<!--
      <para>your repository is <quote>anonymously</quote>
        accessible to the world.  Until you configure some
        authentication and authorization policies, the Subversion
        repositories that you make available via the
        <literal>Location</literal> directive will be generally
        accessible to everyone.  In other words:</para>
-->
      <para>kann die Welt <quote>anonym</quote> auf Ihr Projektarchiv
        zugreifen. Bis Sie Authentifikations- und
        Autorisierungsrichtlinien konfiguriert haben, sind die über
        die Direktive <literal>Location</literal> zur Verfügung
        gestellten Projektarchive allgemein für jedermann zugreifbar.
        Mit anderen Worten:</para>

<!--
      <itemizedlist>
        <listitem>
          <para>Anyone can use a Subversion client to check out a
            working copy of a repository URL (or any of its
            subdirectories).</para>
        </listitem>
        <listitem>
          <para>Anyone can interactively browse the repository's
            latest revision simply by pointing a web browser to
            the repository URL.</para>
        </listitem>
        <listitem>
          <para>Anyone can commit to the repository.</para>
        </listitem>
      </itemizedlist>
-->
      <itemizedlist>
        <listitem>
          <para>Jeder kann mit einem Subversion-Client eine
            Arbeitskopie eines Projektarchiv-URLs (oder irgendeines der
            Unterverzeichnisse) auschecken.</para>
        </listitem>
        <listitem>
          <para>Jeder kann interaktiv die letzte Revision des
            Projektarchivs durchstöbern, indem der Projektarchiv-URL
            einfach mit einem Web-Browser geöffnet wird.</para>
        </listitem>
        <listitem>
          <para>Jeder kann an das Projektarchiv übertragen.</para>
        </listitem>
      </itemizedlist>

<!--
      <para>Of course, you might have already set up
        a pre-commit hook script to prevent
        commits (see <xref linkend="svn.reposadmin.hooks"/>).
        But as you read on, you'll see that it's also possible to use
        Apache's built-in methods to restrict access in specific
        ways.</para>
-->
      <para>Natürlich kann es sein, dass Sie schon längst ein
        pre-commit-Hook-Skript bereitgestellt
        haben, um Übergaben zu verhindern (siehe
        <xref linkend="svn.reposadmin.hooks"/>). Sie werden
        jedoch beim Weiterlesen feststellen, dass es möglich ist, die
        eingebauten Methoden von Apache zu verwenden, um den Zugriff
        auf bestimmte Art und Weise einzuschränken.</para>

      <tip>
<!--
        <para>Requiring authentication defends against invalid users
          directly accessing the repository, but does not guard the
          privacy of valid users' network activity.  See
          <xref linkend="svn.serverconfig.httpd.ssl"/> for how to
          configure your server to support SSL encryption, which can
          provide that extra layer of protection.</para>
-->
        <para>Die erforderliche Authentifikation verhindert zwar,
          dass unerlaubte Anwender direkt auf das Projektarchiv
          zugreifen, schützt aber nicht die Vertraulichkeit der
          Netzwerkaktivitäten erlaubter Anwender. Siehe
          <xref linkend="svn.serverconfig.httpd.ssl"/> zur
          Konfiguration Ihres Servers mit SSL-Verschlüsselung, die
          eine zusätzliche Sicherheitsschicht bietet.</para>
      </tip>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.httpd.authn.basic">
<!--
        <title>Basic authentication</title>
-->
        <title>Einfache Authentifikation</title>

<!--
        <para>The easiest way to authenticate a client is via the HTTP
          Basic authentication mechanism, which simply uses a username
          and password to verify a user's identity.  Apache provides
          the <command>htpasswd</command> utility<footnote><para>See
          <ulink url="http://httpd.apache.org/docs/current/programs/htpasswd.html"
          />.</para></footnote> for managing files containing
          usernames and passwords.</para>
-->
        <para>Die einfachste Methode, einen Client zu authentifizieren
          geht über den HTTP-Basic-Authentifikations-Mechanismus, der
          einfach einen Anwendernamen und ein Passwort verwendet, um
          die Identität eines Anwenders sicherzustellen. Apache stellt
          das Dienstprogramm <command>htpasswd</command><footnote><para>Siehe
          <ulink url="http://httpd.apache.org/docs/current/programs/htpasswd.html"
          />.</para></footnote> zur Verfügung, welches die Verwaltung
          von Dateien übernimmt, die Anwendernamen und Passwörter
          beinhalten.</para>

        <warning>
<!--
          <para>Basic authentication is <emphasis>extremely</emphasis>
            insecure, because it sends passwords over the network
            in very nearly plain text.  See
            <xref linkend="svn.serverconfig.httpd.authn.digest"/> for
            details on using the much safer Digest mechanism.</para>
-->
          <para>Die einfache Authentifikation ist
            <emphasis>extrem</emphasis>
            unsicher, da Passwörter fast im Klartext über das Netz
            geschickt werden. Siehe
            <xref linkend="svn.serverconfig.httpd.authn.digest"/> für
            Details zur Verwendung des wesentlich sichereren Digest
            Mechanismus.</para>
        </warning>

<!--
        <para>First, create a password file and grant access to
          users Harry and Sally:</para>
-->
        <para>Legen Sie zunächst eine Passwort-Datei und erlauben Sie
          den Zugriff für die Anwender Harry und Sally:</para>

<!--
        <informalexample>
          <screen>
$ ### First time: use -c to create the file
$ ### Use -m to use MD5 encryption of the password, which is more secure
$ htpasswd -c -m /etc/svn-auth.htpasswd harry
New password: *****
Re-type new password: *****
Adding password for user harry
$ htpasswd -m /etc/svn-auth.htpasswd sally
New password: *******
Re-type new password: *******
Adding password for user sally
$
</screen>
        </informalexample>
-->
        <informalexample>
          <screen>
$ ### Beim 1. Mal: -c verwenden, um die Datei anzulegen
$ ### -m für die sicherere MD5-Verschlüsselung des Passwortes verwenden
$ htpasswd -c -m /etc/svn-auth.htpasswd harry
New password: *****
Re-type new password: *****
Adding password for user harry
$ htpasswd -m /etc/svn-auth.htpasswd sally
New password: *******
Re-type new password: *******
Adding password for user sally
$
</screen>
        </informalexample>

<!--
        <para>Next, ensure that Apache has access to the modules which
          provide the Basic authentication and related
          functionality:  <command>mod_auth_basic</command>,
          <command>mod_authn_file</command>, and
          <command>mod_authz_user</command>.  In many cases, these
          modules are compiled into <command>httpd</command> itself,
          but if not, you might need to explicitly load one or more of
          them using the <literal>LoadModule</literal> directive:</para>
-->
        <para>Stellen Sie als nächstes sicher, dass Apache Zugriff auf
          die Module hat, die die einfache Authentifikation und
          damit zusammenhängende Funktionalität liefern:
          <command>mod_auth_basic</command>,
          <command>mod_authn_file</command> und
          <command>mod_authz_user</command>. Vielfach sind diese
          Module in <command>httpd</command> selbst hineinkompiliert
          worden, aber falls nicht, könnte es sein, dass Sie explizit
          eins oder mehrere von ihnen mit der Direktive
          <literal>LoadModule</literal> laden müssen:</para>

        <informalexample>
          <programlisting>
LoadModule auth_basic_module   modules/mod_auth_basic.so
LoadModule authn_file_module   modules/mod_authn_file.so
LoadModule authz_user_module   moduels/mod_authz_user.so
</programlisting>
        </informalexample>

<!--
        <para>After ensuring the Apache has access to the required
          functionality, you'll need to add some more directives
          inside the <literal>&lt;Location&gt;</literal> block to tell
          Apache what type of authentication you wish to use, and just
          how to do so:</para>
-->
        <para>Nachdem sichergestellt ist, dass Apache Zugriff auf die
          benötigte Funktionalität hat, müssen Sie noch ein paar
          Direktiven innerhalb des Blocks
          <literal>&lt;Location&gt;</literal> hinzufügen, um
          Apache mitzuteilen, welche Art der Authentisierung Sie
          verwenden möchten, und wie das gemacht werden soll:</para>

        <informalexample>
          <programlisting>
&lt;Location /svn&gt;
  DAV svn
  SVNParentPath /var/svn

  # Authentication: Basic
  AuthName "Subversion repository"
  AuthType Basic
  AuthBasicProvider file
  AuthUserFile /etc/svn-auth.htpasswd
&lt;/Location&gt;
</programlisting>
        </informalexample>

<!--
        <para>These directives work as follows:</para>
-->
        <para>Diese Direktiven funktionieren wie folgt:</para>

        <itemizedlist>
          <listitem>
<!--
            <para><literal>AuthName</literal> is an arbitrary name
              that you choose for the authentication domain.  Most
              browsers display this name in the dialog box when
              prompting for username and password.</para>
-->
            <para><literal>AuthName</literal> ist ein beliebiger Name,
              den Sie für Ihre Authentifikationsdomäne wählen.  Die
              meisten Browser zeigen diesen Namen im Dialog an, wenn
              der Browser den Anwender nach seinem Namen und dem
              Passwort fragt.</para>
          </listitem>
          <listitem>
<!--
            <para><literal>AuthType</literal> specifies the type of
              authentication to use.</para>
-->
            <para><literal>AuthType</literal> spezifiziert den Typ der
              zu verwendenden Authentifikation.</para>
          </listitem>
          <listitem>
<!--
            <para><literal>AuthBasicProvider</literal> specifies the
              Basic authentication provider to use for the location.
              In our example, we wish to consult a local password
              file.</para>
-->
            <para><literal>AuthBasicProvider</literal> gibt den
              Anbieter für die einfache Authentifikation an, der für
              den Ort verwendet werden soll. In unserem Beispiel
              möchten wir in einer lokalen Datei mit Passwörtern
              nachsehen.</para>
          </listitem>
          <listitem>
<!--
            <para><literal>AuthUserFile</literal> specifies the
              location of the password file to use.</para>
-->
            <para><literal>AuthUserFile</literal> spezifiziert den Ort
              der zu verwendenden Passwortdatei.</para>
          </listitem>
        </itemizedlist>

<!--
        <para>However, this <literal>&lt;Location&gt;</literal> block
          doesn't yet do anything useful.  It merely tells Apache that
          <emphasis>if</emphasis> authorization were required, it
          should challenge the Subversion client for a username and
          password.  (When authorization is required, Apache requires
          authentication as well.)  What's missing here, however, are
          directives that tell Apache <emphasis>which sorts</emphasis>
          of client requests require authorization; currently, none do.
          The simplest thing is to specify that <emphasis>all</emphasis>
          requests require authorization by adding
          <literal>Require valid-user</literal> to the block:</para>
-->
        <para>Allerdings bewirkt dieser
          <literal>&lt;Location&gt;</literal>-Block noch nichts
          sinnvolles. Er teilt Apache lediglich mit, dass es sich den
          Anwendernamen und das Passwort vom Subversion-Client
          besorgen soll, <emphasis>falls</emphasis> eine Autorisierung
          benötigt wird. (Wenn eine Autorisierung erforderlich ist,
          benötigt Apache auch eine Authentifikation.) Was hier
          jedoch noch fehlt, sind Direktiven, die Apache sagen,
          <emphasis>welche Arten</emphasis> von Client-Anfragen eine
          Autorisierung erfordern; momentan sind das keine. 
          Das Einfachste ist es, anzugeben, dass
          <emphasis>alle</emphasis> Anfragen eine Autorisierung
          erfordern, indem dem Block die Anweisung 
          <literal>Require valid-user</literal> hinzugefügt
          wird:</para>

        <informalexample>
          <programlisting>
&lt;Location /svn&gt;
  DAV svn
  SVNParentPath /var/svn

  # Authentication: Basic
  AuthName "Subversion repository"
  AuthType Basic
  AuthBasicProvider file
  AuthUserFile /etc/svn-auth.htpasswd

  # Authorization: Authenticated users only
  Require valid-user
&lt;/Location&gt;
</programlisting>
        </informalexample>

<!--
        <para>Refer to <xref linkend="svn.serverconfig.httpd.authz"/>
          for more detail on the <literal>Require</literal> directive
          and other ways to set authorization policies.</para>
-->
        <para>Zu Details über die Direktive <literal>Require</literal>
          und anderen Möglichkeiten, Autorisierungsrichtlinien
          festzulegen, sehen Sie unter
          <xref linkend="svn.serverconfig.httpd.authz"/> nach.</para>

        <note>
<!--
          <para>The default value of the
            <literal>AuthBasicProvider</literal> option is
            <literal>file</literal>, so we won't bother including
            it in future examples.  Just know that if in a broader
            context you've set this value to something else, you'll
            need to explicitly reset it to <literal>file</literal>
            within your Subversion <literal>&lt;Location&gt;</literal>
            block in order to get that behavior.</para>
-->
          <para>Der Standardwert für die Option
            <literal>AuthBasicProvider</literal> ist
            <literal>file</literal>, also werden wir es in künftigen
            Beispielen nicht anführen. Sie sollten sich aber bewusst
            sein, dass, wenn Sie diesen Wert in einem erweiterten
            Kontext auf etwas anderes gesetzt haben, ihn ausdrücklich
            wieder auf <literal>file</literal> in Ihrem
            <literal>&lt;Location&gt;</literal>-Block zurücksetzen
            müssen, falls Sie dieses Verhalten wünschen.</para>
        </note>

      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.httpd.authn.digest">
        <title>Digest Authentifikation</title>
<!--
        <para>Digest authentication is an improvement on Basic
          authentication which allows the server to verify a client's
          identity without sending the password over the network
          unprotected.  Both client and server create a non-reversible
          MD5 hash of the username, password, requested URI, and a
          <firstterm>nonce</firstterm> (number used once) provided by
          the server and changed each time authentication is required.
          The client sends its hash to the server, and the server then
          verifies that the hashes match.</para>
-->
        <para>Digest-Authentifikation ist eine Verbesserung der
          Basic-Authentifikation,  die es dem Server ermöglicht,
          die Identität des Clients zu bestätigen, ohne das Passwort
          ungeschützt durch das Netz zu schicken. Sowohl Client als
          auch Server erzeugen einen nicht rückgängig zu machenden
          MD5-Hashwert des Anwendernamens, Passwortes, verlangter URI
          und einer Einwegnummer, die vom Server vergeben wird und
          jedes Mal geändert wird, wenn eine Authentifikation
          benötigt wird. Der Client sendet seinen Hash an den Server
          und der Server verifiziert dann, dass die Hashes
          zusammenpassen.</para>

<!--
        <para>Configuring Apache to use Digest authentication is
          straightforward.  You'll need to ensure that
          the <command>mod_auth_digest</command> module is available
          (instead of <command>mod_auth_basic</command>), and then
          make a few small variations on our prior example:</para>
-->
        <para>Die Konfigurierung von Apache für die
          Digest-Authentifikation ist unkompliziert. Sie müssen
          sicher stellen, dass das Modul
          <command>mod_auth_digest</command> (statt
          <command>mod_auth_basic</command>) verfügbar ist, und dann
          nur noch ein wenig von unserem vorangegangenen
          Beispiel abweichen:</para>

        <informalexample>
          <programlisting>
&lt;Location /svn&gt;
  DAV svn
  SVNParentPath /var/svn

  # Authentication: Digest
  AuthName "Subversion repository"
  AuthType Digest
  AuthDigestProvider file
  AuthUserFile /etc/svn-auth.htdigest

  # Authorization: Authenticated users only
  Require valid-user
&lt;/Location&gt;
</programlisting>
        </informalexample>

<!--
        <para>Notice that <literal>AuthType</literal> is now set to
          <literal>Digest</literal>, and we specify a different path
          for <literal>AuthUserFile</literal>.  Digest authentication
          uses a different file format than Basic authentication, 
          created and managed using Apache's <command>htdigest</command>
          utility<footnote><para>See
          <ulink url="http://httpd.apache.org/docs/current/programs/htdigest.html"
          />.</para></footnote> rather than <command>htpasswd</command>.
          Digest authentication Also Has The additional concept of a
          <quote>realm</quote>, which must match the value of the
          <literal>AuthName</literal> directive.</para>
-->
        <para>Beachten Sie, dass <literal>AuthType</literal> nun auf
          <literal>Digest</literal> gesetzt ist, und wir einen
          unterschiedlichen Pfad für <literal>AuthUserFile</literal>
          angegeben haben. Digest-Authentifikation verwendet ein
          unterschiedliches Dateiformat als einfache
          Authentifikation, erzeugt und verwaltet
          mit Apaches Dienstprogramm <command>htdigest</command>
          <footnote><para>Siehe
          <ulink url="http://httpd.apache.org/docs/current/programs/htdigest.html"
          />.</para></footnote> statt mit <command>htpasswd</command>.
          Digest-Authentifikation besitzt auch das zusätzliche
          Konzept eines Bereichs,
          <foreignphrase>realm</foreignphrase>, der dem Wert der
          Direktive <literal>AuthName</literal> entsprechen
          muss.</para>

        <note>
<!--
          <para>For Digest authentication, the authentication provider
            is selected using the <literal>AuthDigestProvider</literal>
            as shown in the previous example.  As was the case with
            the <literal>AuthBasicProvider</literal> directive,
            <literal>file</literal> is the default value of the
            <literal>AuthDigestProvider</literal> option, so this
            line is not strictly required unless you need to override
            a different value thereof inherited from a broader
            configuration context.</para>
-->
          <para>Für die Digest-Authentifikation wird der Anbieter mit
            der Direktive <literal>AuthDigestProvider</literal>
            ausgewählt, wie im vorangegangenen Beispiel gezeigt. Wie
            bei der Direktive <literal>AuthBasicProvider</literal>,
            ist auch hier <literal>file</literal> der Standardwert der
            Option <literal>AuthDigestProvider</literal>, so
            dass diese Zeile nicht unbedingt notwendig ist, es sei
            denn, Sie müssen einen aus einem weiteren
            Konfigurations-Kontext ererbten unterschiedlichen Wert
            angeben.</para>
        </note>

<!--
        <para>The password file can be created as follows:</para>
-->
        <para>Die Passwort-Datei kann wie folgt erzeugt werden:</para>

<!--
        <informalexample>
          <screen>
$ ### First time: use -c to create the file
$ htdigest -c /etc/svn-auth.htdigest "Subversion repository" harry
Adding password for harry in realm Subversion repository.
New password: *****
Re-type new password: *****
$ htdigest /etc/svn-auth.htdigest "Subversion repository" sally
Adding user sally in realm Subversion repository
New password: *******
Re-type new password: *******
$
</screen>
        </informalexample>
-->
        <informalexample>
          <screen>
$ ### Beim ersten Mal: -c zum Erzeugen der Datei verwenden
$ htdigest -c /etc/svn-auth.htdigest "Subversion repository" harry
Adding password for harry in realm Subversion repository.
New password: *****
Re-type new password: *****
$ htdigest /etc/svn-auth.htdigest "Subversion repository" sally
Adding user sally in realm Subversion repository
New password: *******
Re-type new password: *******
$
</screen>
        </informalexample>

      </sect3>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.httpd.authz">
<!--
      <title>Authorization Options</title>
-->
      <title>Autorisierungs-Optionen</title>

<!--
      <para>At this point, you've configured authentication, but not
        authorization.  Apache is able to challenge clients and
        confirm identities, but it has not been told how to allow or
        restrict access to the clients bearing those identities.  This
        section describes two strategies for controlling access to
        your repositories.</para>
-->
      <para>An diesem Punkt haben Sie die Authentifikation
        eingerichtet, nicht jedoch die Autorisierung. Apache kann
        Clients auffordern und Identitäten bestätigen, aber es wurde
        ihm noch nicht gesagt, wie er den Zugriff von Clients mit diesen
        Identitäten erlauben oder einschränken soll. Dieser Abschnitt
        beschreibt zwei Strategien, um den Zugriff auf Ihre
        Projektarchive zu kontrollieren.</para>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.httpd.authz.blanket">
<!--
        <title>Blanket access control</title>
-->
        <title>Pauschale Zugriffskontrolle</title>

<!--
        <para>The simplest form of access control is to authorize
          certain users for either read-only access to a repository or
          read/write access to a repository.</para>
-->
        <para>Die einfachste Form der Zugriffskontrolle besteht darin,
          bestimmten Nutzern entweder nur Lesezugriff oder Lese- und
          Schreibzugriff auf ein Projektarchiv zu gewähren.</para>

<!--
        <para>You can restrict access on all repository operations by
          adding <literal>Require valid-user</literal> directly inside
          the <literal>&lt;Location&gt;</literal> block.  The example
          from <xref linkend="svn.serverconfig.httpd.authn.digest"/>
          allows only clients that successfully authenticate to do
          anything with the Subversion repository:</para>
-->
        <para>Sie können den Zugriff auf alle Operationen im
          Projektarchiv einschränken, indem Sie 
          <literal>Require valid-user</literal> direkt dem
          <literal>&lt;Location&gt;</literal>-Block hinzufügen. Das 
          Beispiel von <xref linkend="svn.serverconfig.httpd.authn.digest"/>
          erlaubt nur Clients, die sich erfolgreich authentifiziert
          haben, um irgendetwas mit dem Subversion-Projektarchiv zu
          machen:</para>

<!--
        <informalexample>
          <programlisting>
&lt;Location /svn&gt;
  DAV svn
  SVNParentPath /var/svn

  # Authentication: Digest
  AuthName "Subversion repository"
  AuthType Digest
  AuthUserFile /etc/svn-auth.htdigest

  # Authorization: Authenticated users only
  Require valid-user
&lt;/Location&gt;
</programlisting>
        </informalexample>
-->
        <informalexample>
          <programlisting>
&lt;Location /svn&gt;
  DAV svn
  SVNParentPath /var/svn

  # Authentifikation: Digest
  AuthName "Subversion repository"
  AuthType Digest
  AuthUserFile /etc/svn-auth.htdigest

  # Autorisierung: Nur für authentifizierte Anwender
  Require valid-user
&lt;/Location&gt;
</programlisting>
        </informalexample>

<!--
        <para>Sometimes you don't need to run such a tight ship.  For
          example, the server hosting Subversion's own source code at
          <ulink url="https://svn.apache.org/repos/asf/subversion/"/> allows
          anyone in the world to perform read-only repository tasks (such as
          checking out working copies and browsing the repository),
          but restricts write operations to authenticated users.  The
          <literal>Limit</literal> and <literal>LimitExcept</literal>
          directives allow for this type of selective restriction.
          Like the <literal>Location</literal> directive, these blocks
          have starting and ending tags, and you would nest them
          inside your <literal>&lt;Location&gt;</literal>
          block.</para>
-->
        <para>Manchmal müssen Sie gar nicht so ein strenges Regiment
          führen. So erlaubt beispielsweise der Server, der das eigene
          Projektarchiv von Subversion unter
          <ulink url="http://svn.collab.net/repos/svn"/> beherbergt,
          allen auf der Welt lesende Operationen (wie etwa das
          Auschecken von Arbeitskopien und das Stöbern im
          Projektarchiv), beschränkt jedoch Schreiboperationen auf
          authentifizierte Nutzer. Die Direktiven
          <literal>Limit</literal> und <literal>LimitExcept</literal>
          erlauben diese Art der selektiven Einschränkung. Ähnlich der
          Direktive <literal>Location</literal> haben diese Blöcke
          Start- und Ende-Tags, die Sie innerhalb Ihres
          <literal>&lt;Location&gt;</literal>-Blocks
          unterbringen.</para>

<!--
        <para>The parameters present on the <literal>Limit</literal>
          and <literal>LimitExcept</literal> directives are HTTP
          request types that are affected by that block.  For example,
          to allow anonymous read-only operations, you would use the
          <literal>LimitExcept</literal> directive (passing the
          <literal>GET</literal>, <literal>PROPFIND</literal>,
          <literal>OPTIONS</literal>, and <literal>REPORT</literal>
          request type parameters) and place the previously mentioned
          <literal>Require valid-user</literal> directive inside the
          <literal>&lt;LimitExcept&gt;</literal> block instead of just
          inside the <literal>&lt;Location&gt;</literal> block.</para>
-->
        <para>Die für die Direktiven <literal>Limit</literal> und
          <literal>LimitExcept</literal> verfügbaren Parameter sind
          HTTP-Anfrage-Typen, die von diesem Block beeinflusst werden.
          Falls Sie beispielsweise anonyme Nur-Lese-Zugriffe erlauben
          wollen, so würden Sie die Direktive
          <literal>LimitExcept</literal> (mit den Anfrage-Parametern
          <literal>GET</literal>, <literal>PROPFIND</literal>,
          <literal>OPTIONS</literal> und <literal>REPORT</literal>)
          verwenden und die vorher erwähnte Direktive <literal>Require
          valid-user</literal> im Block
          <literal>&lt;LimitExcept&gt;</literal> statt nur innerhalb
          des <literal>&lt;Location&gt;</literal>-Blocks
          einfügen.</para>

<!--
        <informalexample>
          <programlisting>
&lt;Location /svn&gt;
  DAV svn
  SVNParentPath /var/svn

  # Authentication: Digest
  AuthName "Subversion repository"
  AuthType Digest
  AuthUserFile /etc/svn-auth.htdigest

  # Authorization: Authenticated users only for non-read-only
  #                (write) operations; allow anonymous reads
  &lt;LimitExcept GET PROPFIND OPTIONS REPORT&gt;
    Require valid-user
  &lt;/LimitExcept&gt;
&lt;/Location&gt;
</programlisting>
        </informalexample>
-->
        <informalexample>
          <programlisting>
&lt;Location /svn&gt;
  DAV svn
  SVNParentPath /var/svn

  # Authentifikation: Digest
  AuthName "Subversion repository"
  AuthType Digest
  AuthUserFile /etc/svn-auth.htdigest

  # Autorisierung: Nur authentifizierte Anwender für nicht Nur-Lese
  #                (Schreib-) Operationen; anonymes Lesen zulassen
  &lt;LimitExcept GET PROPFIND OPTIONS REPORT&gt;
    Require valid-user
  &lt;/LimitExcept&gt;
&lt;/Location&gt;
</programlisting>
        </informalexample>

<!--
        <para>These are only a few simple examples.  For more in-depth
          information about Apache access control and the
          <literal>Require</literal> directive, take a look at the
          <literal>Security</literal> section of the Apache
          documentation's tutorials collection at <ulink
          url="http://httpd.apache.org/docs-2.0/misc/tutorials.html"/>.</para>
-->
        <para>Dies sind nur ein paar einfache Beispiele. Für tiefer
          gehende Informationen über Apaches Zugriffskontrolle und die
          Direktive <literal>Require</literal> sollten Sie im
          Abschnitt <literal>Security</literal> der Apache
          Lehrbuchsammlung unter <ulink
          url="http://httpd.apache.org/docs-2.0/misc/tutorials.html"/>
          nachlesen.</para>


      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.httpd.authz.perdir">
<!--
        <title>Per-directory access control</title>
-->
        <title>Verzeichnisweise Zugriffskontrolle</title>

<!--
        <para>It's possible to set up finer-grained permissions using
          <command>mod_authz_svn</command>.  This Apache module grabs
          the various opaque URLs passing from client to server, asks
          <command>mod_dav_svn</command> to decode them, and then
          possibly vetoes requests based on access policies defined in
          a configuration file.</para>
-->
        <para>Es ist möglich, detailliertere Zugriffsrechte mithilfe
          von <command>mod_authz_svn</command> einzurichten.  Dieses
          Apache-Modul schnappt sich die verschiedenen
          undurchsichtigen URLs, die vom Client zum Server gereicht
          werden, fordert <command>mod_dav_svn</command> auf, sie zu
          dekodieren, und unterbindet dann möglicherweise
          Anforderungen entsprechend in einer Konfigurationsdatei
          definierter Zugriffsregeln.  </para>

<!--
        <para>If you've built Subversion from source code,
          <command>mod_authz_svn</command> is automatically built
          and installed alongside <command>mod_dav_svn</command>.
          Many binary distributions install it automatically as well.
          To verify that it's installed correctly, make sure it comes
          right after <command>mod_dav_svn</command>'s
          <literal>LoadModule</literal> directive in
          <filename>httpd.conf</filename>:</para>
-->
        <para>Falls Sie Subversion aus Quellcode gebaut haben, ist
          <command>mod_authz_svn</command> automatisch neben
          <command>mod_dav_svn</command> gebaut und installiert
          worden. Viele binäre Distributionen installieren es
          ebenfalls automatisch. Um die korrekte Installation zu
          überprüfen, müssen Sie sicherstellen, dass es direkt hinter
          der <literal>LoadModule</literal>-Direktive von
          <command>mod_dav_svn</command> in
          <filename>httpd.conf</filename> auftaucht:</para>

        <informalexample>
          <programlisting>
LoadModule dav_module         modules/mod_dav.so
LoadModule dav_svn_module     modules/mod_dav_svn.so
LoadModule authz_svn_module   modules/mod_authz_svn.so
</programlisting>
        </informalexample>

<!--
        <para>To activate this module, you need to configure your
          <literal>&lt;Location&gt;</literal> block to use the
          <literal>AuthzSVNAccessFile</literal> directive which specifies
          a single file containing the permissions policy for paths within
          your repositories.  Beginning with Subversion 1.7, you can
          also use <literal>AuthzSVNReposRelativeAccessFile</literal>
          directive to specify a per repository access file.
          (In a moment, we'll discuss the format of that file.)</para>
-->
        <para>Zur Aktivierung dieses Moduls müssen Sie Ihren
          <literal>&lt;Location&gt;</literal>-Block mit der Direktive
          <literal>AuthzSVNAccessFile</literal> konfigurieren, die eine
          einzelne Datei mit Zugriffs-Richtlinien für Pfade in Ihren
          Projektarchiven bezeichnet. Beginnend mit Subversion 1.7 können
          Sie auch die Direktive
          <literal>AuthzSVNReposRelativeAccessFile</literal> verwenden, um
          eine Zugriffsdatei per Projektarchiv zu spezifizieren. (Gleich
          werden wir auf das Format dieser Datei eingehen.)</para>

<!--
        <para>Apache is flexible, so you have the option to configure
          your block in one of three general patterns.  To begin,
          choose one of these basic configuration patterns.  (The
          following examples are very simple; look at Apache's own
          documentation for much more detail on Apache authentication
          and authorization options.)</para>
-->
        <para>Da Apache flexibel ist, haben Sie die Wahl, Ihren Block
          auf eine von drei Arten zu konfigurieren. Fangen Sie mit der
          Auswahl eines dieser grundlegenden Konfigurationsmuster an.
          (Die folgenden Beispiele sind sehr einfach gehalten; sehen
          Sie sich die mitgelieferte Apache-Dokumentation an, um
          wesentlich mehr Einzelheiten zu den Authentifikations- und
          Autorisierungs-Optionen von Apache zu erfahren.)</para>

<!--
        <para>The most open approach is to allow access to everyone.
          This means Apache never sends authentication challenges, and
          all users are treated as <quote>anonymous</quote>.  (See
          <xref linkend="svn.serverconfig.httpd.authz.perdir.ex-1"
          />.)</para>
-->
        <para>Der offenste Ansatz besteht aus Zugriff für jeden. Das
          bedeutet, dass Apache niemals Aufforderungen zur
          Authentifikation sendet, so dass alle Anwender als
          <quote>anonymous</quote> behandelt werden.  (Siehe
          <xref linkend="svn.serverconfig.httpd.authz.perdir.ex-1"
          />.)
        </para>

        <example id="svn.serverconfig.httpd.authz.perdir.ex-1">
<!--
          <title>A sample configuration for anonymous access</title>
-->
          <title>Eine Beispielkonfiguration für anonymen Zugriff</title>
<!--
          <programlisting>
&lt;Location /repos&gt;
  DAV svn
  SVNParentPath /var/svn

  # Authentication: None

  # Authorization: Path-based access control
  AuthzSVNAccessFile /path/to/access/file
&lt;/Location&gt;
</programlisting>
-->
          <programlisting>
&lt;Location /repos&gt;
  DAV svn
  SVNParentPath /var/svn

  # Authentifikation: keine

  # Autorisierung: pfad-basierte Zugriffskontrolle
  AuthzSVNAccessFile /path/to/access/file
&lt;/Location&gt;
</programlisting>
        </example>

<!--
        <para>On the opposite end of the paranoia scale, you can
          configure Apache to authenticate all clients.
          This block unconditionally requires authentication via the
          <literal>Require valid-user</literal> directive, and defines
          a means to authenticate valid users.  (See
          <xref linkend="svn.serverconfig.httpd.authz.perdir.ex-2"/>.)</para>
-->
        <para>Am anderen Ende der Paranoia-Skala können Sie Apache
          dergestalt konfigurieren, dass er alle Clients
          authentifiziert.  Dieser Block verlangt eine unbedingte
          Authentifikation durch die Direktive
          <literal>Require valid-user</literal> und definiert wie
          berechtigte Anwender authentifiziert werden sollen.  (Siehe
          <xref linkend="svn.serverconfig.httpd.authz.perdir.ex-2"/>.)
        </para>

        <example id="svn.serverconfig.httpd.authz.perdir.ex-2">
<!--
          <title>A sample configuration for authenticated access</title>
-->
          <title>Eine Beispielkonfiguration für authentifizierten Zugriff</title>
<!--
          <programlisting>
&lt;Location /repos&gt;
  DAV svn
  SVNParentPath /var/svn

  # Authentication: Digest
  AuthName "Subversion repository"
  AuthType Digest
  AuthUserFile /etc/svn-auth.htdigest

  # Authorization: Path-based access control; authenticated users only
  AuthzSVNAccessFile /path/to/access/file
  Require valid-user
&lt;/Location&gt;
</programlisting>
-->
          <programlisting>
&lt;Location /repos&gt;
  DAV svn
  SVNParentPath /var/svn

  # Authentifikation: Digest
  AuthName "Subversion repository"
  AuthType Digest
  AuthUserFile /etc/svn-auth.htdigest

  # Autorisierung: pfad-basierte Zugriffskontrolle; nur für authentifizierte Anwender
  AuthzSVNAccessFile /path/to/access/file
  Require valid-user
&lt;/Location&gt;
</programlisting>
        </example>

<!--
        <para>A third very popular pattern is to allow a combination
          of authenticated and anonymous access.  For example, many
          administrators want to allow anonymous users to read certain
          repository directories, but restrict access to more
          sensitive areas to authenticated users.  In this setup, all
          users start out accessing the repository anonymously.  If
          your access control policy demands a real username at any
          point, Apache will demand authentication from the client.
          To do this, use both the <literal>Satisfy Any</literal>
          and <literal>Require valid-user</literal> directives.  (See
          <xref linkend="svn.serverconfig.httpd.authz.perdir.ex-3"
          />.)</para>
-->
        <para>Ein drittes sehr verbreitetes Muster ist es, eine
          Kombination aus authentifizierten und anonymen Zugriff zu
          erlauben. So möchten beispielsweise viele Administratoren
          für anonyme Anwender den Lesezugriff auf bestimmte
          Verzeichnisse des Projektarchivs freigeben, während
          für heikle Bereichen nur authentifizierte Anwender
          zugelassen werden.  Bei dieser Einstellung greifen alle
          Anwender zunächst anonym auf das Projektarchiv zu. Falls
          Ihre Zugriffsrichtlinien an einer Stelle einen echten
          Anwendernamen erfordern sollte, fordert Apache den Client
          auf, sich zu authentisieren. Eingestellt wird dieses
          Verhalten mit den Direktiven <literal>Satisfy Any</literal>
          sowie <literal>Require valid-user</literal>. (Siehe
          <xref linkend="svn.serverconfig.httpd.authz.perdir.ex-3"
          />.)</para>

        <example id="svn.serverconfig.httpd.authz.perdir.ex-3">
<!--
          <title>A sample configuration for mixed
            authenticated/anonymous access</title>
-->
          <title>Eine Beispielkonfiguration für gemischten
            authentifizierten/anonymen Zugriff</title>
<!--
          <programlisting>
&lt;Location /repos&gt;
  DAV svn
  SVNParentPath /var/svn

  # Authentication: Digest
  AuthName "Subversion repository"
  AuthType Digest
  AuthUserFile /etc/svn-auth.htdigest

  # Authorization: Path-based access control; try anonymous access
  #                first, but authenticate if necessary
  AuthzSVNAccessFile /path/to/access/file
  Satisfy Any
  Require valid-user
&lt;/Location&gt;
</programlisting>
-->
          <programlisting>
&lt;Location /repos&gt;
  DAV svn
  SVNParentPath /var/svn

  # Authentifikation: Digest
  AuthName "Subversion repository"
  AuthType Digest
  AuthUserFile /etc/svn-auth.htdigest

  # Autorisierung: pfad-basierte Zugriffskontrolle; zunächst anonymen Zugriff
  #                versuchen, doch wenn nötig authentifizieren
  AuthzSVNAccessFile /path/to/access/file
  Satisfy Any
  Require valid-user
&lt;/Location&gt;
</programlisting>
        </example>

<!--
        <para>The next step is to create the authorization file
          containing access rules for particular paths within the
          repository.  We describe how later in this chapter, in
          <xref linkend="svn.serverconfig.pathbasedauthz"/>.</para>
-->
        <para>Der nächste Schritt ist, eine Autorisierungsdatei zu
          erstellen, die Zugriffsregeln für bestimmte Pfade innerhalb
          des Projektarchivs enthält. Wie, beschreiben wir später in
          <xref linkend="svn.serverconfig.pathbasedauthz"/>.</para>

      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.httpd.authz.pathauthzoff">
<!--
        <title>Disabling path-based checks</title>
-->
        <title>Unterbinden pfad-basierter Prüfungen</title>

<!--
        <para>The <command>mod_dav_svn</command> module goes through a
          lot of work to make sure that data you've marked
          <quote>unreadable</quote> doesn't get accidentally leaked.
          This means it needs to closely monitor all of the paths
          and file-contents returned by commands such as <command>svn
          checkout</command> and <command>svn update</command>.
          If these commands encounter a path that isn't
          readable according to some authorization policy, the
          path is typically omitted altogether.  In the case of
          history or rename tracing&mdash;for example, running a command such
          as <userinput>svn cat -r OLD foo.c</userinput> on a file that
          was renamed long ago&mdash;the rename tracking will simply
          halt if one of the object's former names is determined to be
          read-restricted.</para>
-->
        <para>Das Modul <command>mod_dav_svn</command> unternimmt
          einen hohen Arbeitsaufwand, um sicherzustellen, dass Daten,
          die Sie als <quote>nicht lesbar</quote> markiert haben,
          nicht versehentlich nach draußen geraten. Das bedeutet, dass
          es aufmerksam alle Pfade überwachen muss, die von Befehlen
          wie <command>svn checkout</command> und <command>svn
            update</command> zurückgegeben werden. Begegnen diese
          Befehle einem Pfad, der aufgrund einer
          Autorisierungsrichtlinie nicht lesbar ist, wird dieser Pfad
          üblicherweise vollständig unterdrückt. Im Fall der
          Historien- oder Umbenennungsverfolgung, z.B. mit einem
          Befehl wie <userinput>svn cat -r OLD foo.c</userinput> auf
          einer Datei, die vor langer Zeit umbenannt wurde, bleibt die
          Umbenennungsverfolgung einfach stehen, wenn einer der
          früheren Namen des Objektes als lesebeschränkt erkannt
          wird.</para>

<!--
        <para>All of this path checking can sometimes be quite
          expensive, especially in the case of <command>svn
          log</command>.  When retrieving a list of revisions, the
          server looks at every changed path in each revision and
          checks it for readability.  If an unreadable path is
          discovered, it's omitted from the list of the revision's
          changed paths (normally seen with
          the <option>- -verbose</option> (<option>-v</option>) option), 
          and the whole log message is suppressed.  Needless to say,
          this can be time-consuming on revisions that affect a large
          number of files.  This is the cost of security: even if you
          haven't configured a module such as
          <command>mod_authz_svn</command> at all, the
          <command>mod_dav_svn</command> module is still asking Apache
          <command>httpd</command> to run authorization checks on
          every path.  The <command>mod_dav_svn</command> module has
          no idea what authorization modules have been installed, so
          all it can do is ask Apache to invoke whatever might be
          present.</para>
-->
        <para>All diese Pfadüberprüfungen können manchmal sehr teuer
          werden, besonders mit <command>svn log</command>. Wenn eine
          Liste mit Revisionen erstellt wird, sieht der Server bei
          jedem geänderten Pfad in jeder Revision nach, ob er lesbar
          ist. Falls ein nicht lesbarer Pfad entdeckt wird, taucht er
          in der Liste der geänderten Pfade dieser Revision nicht auf
          (normalerweise sichtbar mit der Option
          <option>--verbose</option> (<option>-v</option>)), und die
          gesamte Protokollnachricht wird unterdrückt. Es bedarf wohl
          keiner Erwähnung, dass dies bei Revisionen, die eine große
          Anzahl an Pfaden betreffen, sehr zeitaufwändig sein kann.
          Das ist der Preis für Sicherheit: selbst wenn Sie überhaupt
          kein Modul wie <command>mod_authz_svn</command> konfiguriert
          haben, fordert das Modul <command>mod_dav_svn</command>
          Apache <command>httpd</command> auf,
          Autorisierungsüberprüfungen für jeden Pfad vorzunehmen. Das
          Modul <command>mod_dav_svn</command> weiß nicht, welche
          Autorisierungsmodule installiert wurden, also kann es
          lediglich Apache auffordern, all das aufzurufen, was
          vorhanden sein könnte.</para>

<!--
        <para>On the other hand, there's also an escape hatch of
          sorts, which allows you to trade security features for
          speed.  If you're not enforcing any sort of per-directory
          authorization (i.e., not using
          <command>mod_authz_svn</command> or similar module),
          you can disable all of this path checking.  In your
          <filename>httpd.conf</filename> file, use the
          <literal>SVNPathAuthz</literal> directive as shown in
          <xref linkend="svn.serverconfig.httpd.authz.pathauthzoff.ex-1"/>.</para>
-->
        <para>Auf der anderen Seite gibt es auch eine Art Notausgang,
          der es Ihnen erlaubt, Sicherheitsmerkmale gegen
          Geschwindigkeit zu tauschen. Falls Sie nicht irgendeine Art
          verzeichnisbasierter Autorisierung durchsetzen möchten (d.h.,
          <command>mod_authz_svn</command> oder ähnliche Module nicht
          verwenden), können Sie die gesamte Pfadüberprüfung
          abstellen. Verwenden Sie die Direktive
          <literal>SVNPathAuthz</literal> in Ihrer Datei
          <filename>httpd.conf</filename> wie in <xref
            linkend="svn.serverconfig.httpd.authz.pathauthzoff.ex-1"/>
          gezeigt.  </para>

        <example id="svn.serverconfig.httpd.authz.pathauthzoff.ex-1">
<!--
          <title>Disabling path checks altogether</title>
-->
          <title>Abstellen aller Pfadüberprüfungen</title>
          <programlisting>
&lt;Location /repos&gt;
  DAV svn
  SVNParentPath /var/svn

  SVNPathAuthz off
&lt;/Location&gt;
</programlisting>
        </example>

<!--
        <para>The <literal>SVNPathAuthz</literal> directive
          is <quote>on</quote> by default.  When
          set to <quote>off,</quote> all path-based authorization
          checking is disabled;
          <command>mod_dav_svn</command> stops invoking authorization
          checks on every path it discovers.</para>
-->
        <para>Standardmäßig steht die Direktive
          <literal>SVNPathAuthz</literal> auf <quote>on</quote>.  Auf
          <quote>off</quote> gesetzt, wird die gesamte pfad-basierte
          Autorisierungsüberprüfung abgestellt.
          <command>mod_dav_svn</command> beendet den Aufruf von
          Autorisierungsüberprüfungen für jeden entdeckten
          Pfad.</para>

      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.httpd.authz.inrepo-authz">
<!--
        <title>Versioned in repository access files</title>
-->
        <title>Im Projektarchiv versionierte Zugriffs-Dateien</title>

<!--
        <para>Beginning with Subversion 1.8, access files can be
          stored inside a Subversion repository. It is possible to
          store the access file in the same repository to which the
          access rules are being applied, or you can store it in an
          entirely different repository. This approach enables
          versioning features of Subversion for the path-based
          authorization configuration.</para>
-->
        <para>Beginnend mit Subversion 1.8 können Zugriffs-Dateien innerhalb
          eines Subversion-Projektarchivs gespeichert werden. Es ist
          möglich, die Zugriffs-Datei im selben Projektarchiv auf das
          die Zugriffsregeln angewendet werden zu speichen, oder in einem
          ganz anderen Projektarchiv. Dieser Ansatz ermöglicht die
          Versionierungs-Funktionalität von Subversion für die pfad-basierte
          Autorisierungs-Konfiguration.</para>

<!--
        <para>Both <literal>AuthzSVNAccessFile</literal> and
          <literal>AuthzSVNReposRelativeAccessFile</literal> configuration
          directives allow to specify in-repository access file's location.
          The directives accept absolute <literal>file://</literal> URLs
          and repository relative URLs (one which begins with
          <literal>^/</literal>).</para>
-->
        <para>Die Konfigurations-Direktiven
          <literal>AuthzSVNAccessFile</literal> und
          <literal>AuthzSVNReposRelativeAccessFile</literal> erlauben
          beide, einen Pfad innerhalb des Projektarchivs für die
          Zugriffs-Datei anzugeben. Die Direktiven akzeptieren
          absolute <literal>file://</literal>-URLs und URLs relativ zum
          Projektarchiv (solche, die mit <literal>^/</literal>
          beginnen).</para>

<!--
        <para>For example, it is possible to specify an absolute URL to
          in-repository access file as shown in
          <xref linkend="svn.serverconfig.httpd.authz.inrepo-authz.ex-1"/>.</para>
-->
        <para>Es ist beispielsweise möglich, einen absoluten URL zu einer
          Zugriffs-Datei in einem Projektarchiv anzugeben, wie in
          <xref linkend="svn.serverconfig.httpd.authz.inrepo-authz.ex-1"/>
          gezeigt.</para>

        <example id="svn.serverconfig.httpd.authz.inrepo-authz.ex-1">
<!--
          <title>Using single versioned in repo access file</title>
-->
          <title>Einzelne im Projektarchiv versionierte Zugriffs-Datei</title>
          <programlisting>
&lt;Location /repos&gt;
  DAV svn
  SVNParentPath /var/svn
  AuthzSVNAccessFile file:///var/svn/authzrepo/authz
&lt;/Location&gt;
</programlisting>
        </example>

<!--
        <para>You can also specify relative URL to an in repository access
          file as demonstrated in
          <xref linkend="svn.serverconfig.httpd.authz.inrepo-authz.ex-2"/>.</para>
-->
        <para>Sie können auch einen relativen URL zu einer Zugriffs-Datei im
          Projektarchiv angeben, wie in
          <xref linkend="svn.serverconfig.httpd.authz.inrepo-authz.ex-2"/>
          gezeigt.</para>

        <example id="svn.serverconfig.httpd.authz.inrepo-authz.ex-2">
<!--
          <title>Using per repository in repo authz files</title>
-->
          <title>Verwendung von im Projektarchiv versionierten authz-Dateien pro Projektarchiv</title>
          <programlisting>
&lt;Location /repos&gt;
  DAV svn
  SVNParentPath /var/svn
  AuthzSVNReposRelativeAccessFile ^/authz
&lt;/Location&gt;
</programlisting>
        </example>

      </sect3>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.httpd.ssl">
<!--
      <title>Protecting network traffic with SSL</title>
-->
      <title>Schutz des Netzwerkverkehrs durch SSL</title>

<!--
      <para>Connecting to a repository via <literal>http://</literal>
        means that all Subversion activity is sent across the network
        in the clear.  This means that actions such as checkouts,
        commits, and updates could potentially be intercepted by an
        unauthorized party <quote>sniffing</quote> network traffic.
        Encrypting traffic using SSL is a good way to protect
        potentially sensitive information over the network.</para>
-->
      <para>Die Verbindung zu einem Projektarchiv über
        <literal>http://</literal> bedeutet, dass alle
        Subversion-Aktivitäten im Klartext über das Netzwerk geschickt
        werden. Dass heißt, dass Operationen wie das Auschecken,
        Übergaben und Aktualisierungen potentiell durch Unbefugte, die
        den Netzwerkverkehr <quote>abschnorcheln</quote>, abgefangen
        werden können. Die Verschlüsselung des Verkehrs mit SSL ist
        eine gute Maßnahme, um möglicherweise heikle Informationen im
        Netzwerk zu schützen.</para>

<!--
      <para>If a Subversion client is compiled to use OpenSSL,
        it gains the ability to speak to an Apache server via
        <literal>https://</literal> URLs, so all traffic is encrypted
        with a per-connection session key.  The WebDAV library used by
        the Subversion client is not only able to verify server
        certificates, but can also supply client certificates when
        challenged by the server.</para>
-->
      <para>Wird ein Subversion-Client für die Verwendung von OpenSSL
        übersetzt, erlangt er die Fähigkeit, mit einem Apache-Server
        über <literal>https://</literal>-URLs zu kommunizieren, wobei
        sämtlicher Verkehr durch einen Sitzungsschlüssel pro
        Verbindung verschlüsselt wird. Die vom
        Subversion-Client verwendete WebDAV-Bibliothek kann nicht nur
        Server-Zertifikate verifizieren, sondern nach Aufforderung
        auch Client-Zertifikate liefern.</para>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.httpd.ssl.server">
<!--
        <title>Subversion server SSL certificate configuration</title>
-->
        <title>Konfiguration von Subversion-Server SSL-Zertifikaten</title>

<!--
        <para>It's beyond the scope of this book to describe how to
          generate client and server SSL certificates and how to
          configure Apache to use them.  Many other references,
          including Apache's own documentation (<ulink 
          url="http://httpd.apache.org/docs/current/ssl/"/>),
          describe the process.</para>
-->
        <para>Es würde den Rahmen dieses Buches sprengen, wenn
          beschrieben würde, wie Client- und Server SSL-Zertifikate erzeugt
          werden und wie Apache für ihre Verwendung konfiguriert wird.
          Viele andere Bücher, darunter Apaches eigene Dokumentation
          (<ulink url="http://httpd.apache.org/docs/current/ssl/"/>),
          erläutern diese Aufgabe.</para>

        <tip>
<!--
          <para>SSL certificates from well-known entities generally
            cost money, but at a bare minimum, you can configure
            Apache to use a self-signed certificate generated with a
            tool such as OpenSSL (<ulink url="http://openssl.org"
            />).<footnote><para>While self-signed certificates are
            still vulnerable to a <quote>man-in-the-middle</quote>
            attack (before a client sees the certificate for the first
            time), such an attack is much more difficult for a casual
            observer to pull off, compared to sniffing unprotected
            passwords.</para></footnote></para>
-->
          <para>SSL-Zertifikate von wohlbekannten Instanzen sind in
            der Regel kostenpflichtig, doch können Sie als
            Minimallösung Apache so konfigurieren, das er ein
            selbstgezeichnetes Zertifikat verwendet, dass durch ein
            Werkzeug wie etwa OpenSSL erzeugt wurde
            (<ulink url="http://openssl.org"
            />).<footnote><para>Obgleich selbstgezeichnete
            Zertifikate anfällig für
            <quote>Man-in-the-Middle</quote>-Angriffe sind (bevor ein
            Client das Zertifikat erstmalig sieht), ist ein solcher
            Angriff schwieriger für einen laienhaften Beobachter
            durchzuführen als ungeschützte Passwörter
            abzuschnorcheln.</para></footnote></para>
        </tip>

      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.httpd.ssl.client">
<!--
        <title>Subversion client SSL certificate management</title>
-->
        <title>Subversion-Client SSL-Zertifikat-Verwaltung</title>

<!--
        <para>When connecting to Apache via <literal>https://</literal>,
          a Subversion client can receive two different types of
          responses:</para>
-->
        <para>Bei einer Verbindung zu Apache über <literal>https://</literal>
          kann ein Subversion-Client zwei unterschiedliche Arten von
          Antworten empfangen:</para>

        <itemizedlist>
          <listitem>
<!--
            <para>A server certificate</para>
-->
            <para>Ein Server-Zertifikat</para>
          </listitem>
          <listitem>
<!--
            <para>A challenge for a client certificate</para>
-->
            <para>Eine Aufforderung zur Vorlage eines
              Client-Zertifikats</para>
          </listitem>
        </itemizedlist>

        <sect4 id="svn.serverconfig.httpd.ssl.client.servercert">
<!--
          <title>Server certificate</title>
-->
          <title>Server-Zertifikat</title>

<!--
          <para>When the client receives a server certificate, it needs
            to verify that the server is who it claims to be. OpenSSL
            does this by examining the signer of the server certificate,
            or <firstterm>certificate authority</firstterm> (CA).  If
            OpenSSL is unable to automatically trust the CA, or if some
            other problem occurs (such as an expired certificate or
            hostname mismatch), the Subversion command-line client will
            ask you whether you want to trust the server certificate
            anyway:</para>
-->
          <para>Wenn der Client ein Server-Zertifikat empfängt, muss
            er sicherstellen, dass der Server derjenige ist, für den
            er sich ausgibt. OpenSSL macht das, indem der
            Unterzeichner des Server-Zertifikats, die sogenannte
            <firstterm>Certificate Authority</firstterm> (CA), oder
            Zertifizierungsstelle, untersucht wird. Falls OpenSSL der
            CA nicht automatisch vertrauen kann, oder falls ein
            anderes Problem auftaucht (etwa ein abgelaufenes
            Zertifikat oder ein nicht übereinstimmender Rechnername),
            fragt Sie der Subversion-Befehlszeilen-Client, ob Sie dem
            Server-Zertifikat dennoch vertrauen möchten:</para>

<!--
          <informalexample>
            <screen>
$ svn list https://host.example.com/repos/project

Error validating server certificate for 'https://host.example.com:443':
 - The certificate is not issued by a trusted authority.  Use the
   fingerprint to validate the certificate manually!
Certificate information:
 - Hostname: host.example.com
 - Valid: from Jan 30 19:23:56 2004 GMT until Jan 30 19:23:56 2006 GMT
 - Issuer: CA, example.com, Sometown, California, US
 - Fingerprint: 7d:e1:a9:34:33:39:ba:6a:e9:a5:c4:22:98:7b:76:5c:92:a0:9c:7b

(R)eject, accept (t)emporarily or accept (p)ermanently?
</screen>
          </informalexample>
-->
          <informalexample>
            <screen>
$ svn list https://host.example.com/repos/project

Fehler bei der Validierung des Serverzertifikats für »https://host.example.com:443«:
 - Das Zertifikat ist nicht von einer vertrauenswürdigen Instanz ausgestellt
   Überprüfen Sie den Fingerabdruck, um das Zertifikat zu validieren!
Zertifikats-Informationen:
 - Hostname: host.example.com
 - Gültig: von Jan 30 19:23:56 2004 GMT bis Jan 30 19:23:56 2006 GMT
 - Aussteller: CA, example.com, Sometown, California, US
 - Fingerabdruck: 7d:e1:a9:34:33:39:ba:6a:e9:a5:c4:22:98:7b:76:5c:92:a0:9c:7b

Ve(r)werfen, (t)emporär akzeptieren oder (p)ermanent akzeptieren?
</screen>
          </informalexample>

<!--
          <para>This dialogue is essentially the same question you may
            have seen coming from your web browser (which is just
            another HTTP client like Subversion).  If you choose the
            <literal>(p)</literal>ermanent option, Subversion will
            cache the server certificate in your private runtime
            <filename>auth/</filename> area, just as your username and
            password are cached (see <xref
            linkend="svn.serverconfig.netmodel.credcache"/>), and will
            automatically trust the certificate in the future.</para>
-->
          <para>Dieser Dialog ist im Wesentlichen dieselbe Frage, die
            Sie bei Ihrem Web-Browser gesehen haben (der auch bloß ein
            weiterer HTTP-Client ist, so wie Subversion).  Falls Sie
            die Option <literal>(p)</literal>ermanent auswählen, wird
            Subversion das Server-Zertifikat in Ihrem privaten
            Laufzeitbereich <filename>auth/</filename>
            zwischengespeichert, ebenso wie Ihr Anwendername und
            Passwort (siehe
            <xref linkend="svn.serverconfig.netmodel.creds"/>), und
            diesem Zertifikat bei künftigen Protokollverhandlungen
            vertrauen.</para>

<!--
          <para>Your runtime <filename>servers</filename> file also gives
            you the ability to make your Subversion client automatically
            trust specific CAs, either globally or on a per-host basis.
            Simply set the <literal>ssl-authority-files</literal>
            variable to a semicolon-separated list of PEM-encoded CA
            certificates:</para>
-->
          <para>Ihre Laufzeit-Datei <filename>servers</filename>
            ermöglicht es Ihrem Subversion-Client ebenso, automatisch
            bestimmten CAs zu vertrauen, entweder global oder pro
            Host. Setzen Sie die Variable
            <literal>ssl-authority-files</literal> auf eine durch
            Semikolons getrennte Liste PEM-kodierter
            CA-Zertifikate:</para>

          <informalexample>
            <programlisting>
[global]
ssl-authority-files = /path/to/CAcert1.pem;/path/to/CAcert2.pem
</programlisting>
          </informalexample>

<!--
          <para>Many OpenSSL installations also have a predefined set
            of <quote>default</quote> CAs that are nearly universally
            trusted.  To make the Subversion client automatically trust
            these standard authorities, set the
            <literal>ssl-trust-default-ca</literal> variable to
            <literal>true</literal>.</para>
-->
          <para>Viele OpenSSL-Installationen besitzen auch eine
            vordefinierte Menge von <quote>Standard</quote>-CAs, denen
            nahezu allgemein vertraut wird. Damit der Subversion-Client
            diesen Standard-Zertifizierungsstellen automatisch vertraut,
            setzen Sie die Variable
            <literal>ssl-trust-default-ca</literal> auf
            <literal>true</literal>.</para>

        </sect4>

        <sect4 id="svn.serverconfig.httpd.ssl.client.clientcert">
<!--
          <title>Client certificate challenge</title>
-->
          <title>Client-Zertifikat-Abfrage</title>

<!--
          <para>If the client receives a challenge for a certificate,
            the server is asking the client to prove its identity.
            The client must send back a certificate signed by a CA
            that the server trusts, along with a <firstterm>challenge
            response</firstterm> which proves that the client owns the
            private key associated with the certificate.  The private
            key and certificate are usually stored in an encrypted
            format on disk, protected by a passphrase.  When Subversion
            receives this challenge, it will ask you for the path to the
            encrypted file and the passphrase that protects it:</para>
-->
          <para>Falls der Client eine die Aufforderung erhält, ein
            Client-Zertifikat vorzulegen, ersucht Apache den Client,
            sich zu identifizieren.  Der Client muss ein Zertifikat
            zurückschicken, das von einer CA signiert wurde, der
            Apache vertraut, zusätzlich mit einer
            <firstterm>Aufforderungserwiederung</firstterm>
            (<foreignphrase>Challenge Response</foreignphrase>), die beweist,
            dass der Client in Besitz des zum Zertifikat gehörigen
            privaten Schlüssels ist. Für gewöhnlich wird der private
            Schlüssel und das Client-Zertifikat, durch eine lokale
            Passphrase geschützt, verschlüsselt auf Platte
            gespeichert.  Wenn Subversion diese Aufforderung erhält,
            fragt es Sie nach dem Pfad zum Zertifikat und der
            Passphrase, das jenes schützt:</para>

<!--
          <informalexample>
            <screen>
$ svn list https://host.example.com/repos/project

Authentication realm: https://host.example.com:443
Client certificate filename: /path/to/my/cert.p12
Passphrase for '/path/to/my/cert.p12':  ********
</screen>
          </informalexample>
-->
          <informalexample>
            <screen>
$ svn list https://host.example.com/repos/project

Anmeldebereich: https://host.example.com:443
Client Zertifikatsdatei: /path/to/my/cert.p12
Passphrase für »/path/to/my/cert.p12«:  ********
</screen>
          </informalexample>

<!--
          <para>Notice that the client credentials are stored in a
            <literal>.p12</literal> file.  To use a client certificate
            with Subversion, it must be in PKCS#12 format, which is a
            portable standard.  Most web browsers are able to import
            and export certificates in that format.  Another option
            is to use the OpenSSL command-line tools to convert
            existing certificates into PKCS#12.</para>
-->
          <para>Beachten Sie, dass die Zugriffsdaten des Clients in
            einer <literal>.p12</literal>-Datei gespeichert werden. Um
            ein Client-Zertifikat mit Subversion verwenden zu können,
            muss es im PKCS#12-Format vorliegen, was einem portablen
            Standard entspricht. Die meisten Web-Browser können
            Zertifikate in diesem Format im-
            und exportieren. Eine weitere Option ist es, die
            OpenSSL-Befehlszeilenwerkzeuge zu verwenden, um
            bestehende Zertifikate in PKCS#12 zu überführen.</para>

<!--
          <para>The runtime <filename>servers</filename> file also
            allows you to automate this challenge on a per-host basis.
            If you set the <literal>ssl-client-cert-file</literal>
            and <literal>ssl-client-cert-password</literal> variables,
            Subversion can automatically respond to a client
            certificate challenge without prompting you:</para>
-->
          <para>Die Laufzeitdatei <filename>servers</filename> erlaubt
            Ihnen auch, diese Aufforderung pro Host zu
            automatisieren. Falls Sie die Variablen
            <literal>ssl-client-cert-file</literal> und
            <literal>ssl-client-cert-password</literal> setzen, kann
            Subversion automatisch auf Client-Zertifikat-Anforderungen
            antworten, ohne bei Ihnen nachzufragen:</para>

          <informalexample>
            <programlisting>
[groups]
examplehost = host.example.com

[examplehost]
ssl-client-cert-file = /path/to/my/cert.p12
ssl-client-cert-password = somepassword
</programlisting>
          </informalexample>

<!--
          <para>More security-conscious folk might want to exclude
            <literal>ssl-client-cert-password</literal> to avoid
            storing the passphrase in the clear on disk.</para>
-->
          <para>Sicherheitsbewusstere Leute lassen
            möglicherweise <literal>ssl-client-cert-password</literal>
            weg, um zu vermeiden, die Passphrase im Klartext auf
            Platte zu speichern.</para>

        </sect4>
      </sect3>
    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.httpd.perf">
<!--
      <title>Tuning for Performance</title>
-->
      <title>Auf Leistung abstimmen</title>

<!--
      <para>The Apache HTTP Server is built for performance, but you
        can improve upon its default configuration to get even better
        results out of your Subversion service offering.  In this
        section, we'll recommend some specific configuration changes
        to consider.  Understand, however, that some of
        the <filename>httpd.conf</filename> configuration options
        we'll be discussing herein affect the general behavior of your
        server, not merely the Subversion service.  As such, you need
        to consider the full breadth of your HTTP service offering to
        discern how modifications to these settings for Subversion's
        sake may affect your other services.</para>
-->
      <para>Der Apache HTTP-Server ist zwar für Leistungsfähigkeit
        gebaut worden, jedoch können Sie seine Standard-Konfiguration
        verbessern, um noch bessere Ergebnisse beim Anbieten Ihrer
        Subversion-Dienste zu erhalten. In diesem Abschnitt empfehlen
        wir einige zielgerichtete Konfigurations-Änderungen zu
        erwägen. Seien Sie sich jedoch bewusst, das einige der hier
        erörterten Konfigurations-Optionen von
        <filename>httpd.conf</filename> Auswirkungen auf das
        allgemeine Verhalten Ihres Servers haben, nicht bloß für den
        Subversion-Dienst. Insofern müssen Sie die gesamte Breite
        Ihrer HTTP-Dienste berücksichtigen, um festzustellen, welche
        Auswirkungen Änderungen an diesen Einstellungen wegen
        Subversion auf Ihre anderen Dienste haben werden.</para>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.httpd.perf.keepalive">
        <title>KeepAlive</title>

<!--
        <para>By default, the Apache HTTP Server is configured to
          enable the re-use of a single server connection for multiple
          requests.  That's very beneficial for Subversion, because
          unlike many HTTP-based applications, Subversion can very
          quickly generate hundreds or thousands of requests against
          the server for a single operation, and the cost of opening a
          new connection to the server is non-trivial.  Subversion
          wants to squeeze as many requests as possible out of a
          single connection before that connection is terminated by
          the server.  The <literal>KeepAlive</literal> directive is the
          boolean flag which enables or disables this connection
          re-use facility, and as we indicated previously, by default
          its value is <literal>On</literal>.</para>
-->
        <para>Standardmäßig ist der Apache HTTP-Server so eingestellt,
          dass er es erlaubt, eine einzelne Verbindung zum Server für
          mehrere Anfragen wiederzuverwenden. Für Subversion ist das
          sehr vorteilhaft, da, anders als bei vielen HTTP=basierten
          Anwendungen, Subversion schnell für eine einzelne Operation
          hunderte oder tausende von Anfragen an einen Server erzeugen
          kann, und die Kosten beim Öffnen einer neuen Verbindung zum
          Server nicht trivial sind. Subversion versucht, so viele
          Anfragen wie möglich aus einer Verbindung herauszuquetschen,
          bevor der Server sie beendet. Die Direktive
          <literal>KeepAlive</literal> ist der boolesche Schalter, der
          diese Möglichkeit zur Wiederverwendung einer Verbindung
          ermöglicht oder unterbindet. Wie bereits erwähnt ist deren
          Wert standardmäßig <literal>On</literal>.</para>

<!--
        <para>But there's another directive which limits the number of
          requests a client is allowed to submit on a single
          connection:  the <literal>MaxKeepAliveRequests</literal>
          directive.  The default value for that option
          is <literal>100</literal>.  This was probably sufficient for
          older versions of Subversion, but Subversion 1.8 employs a
          different HTTP communications library (called Serf) which
          prefers to pipeline several smaller requests for specific bits
          of information rather than asking the server to transmit
          huge chunks of data in a single response.  We recommend that
          you increase the value of the
          <literal>MaxKeepAliveRequests</literal> option
          to at least <literal>1000</literal>.</para>
-->
        <para>Es gibt aber noch eine weitere Direktive, die die Anzahl
          von Anfragen einschränkt, die ein Client über einer einzelne
          Verbindung übermitteln darf: die Direktive
          <literal>MaxKeepAliveRequests</literal>. Der Standardwert
          für diese Option ist <literal>100</literal>. Das war
          wahrscheinlich ausreichend für ältere Subversion-Versionen,
          doch Subversion 1.8 setzt eine unterschiedliche Bibliothek
          für die HTTP-Kommunikation ein (Serf genannt), die es
          vorzieht, mehrere kleinere Anfragen für bestimmte
          Informationsschnipsel zu versenden, anstatt den Server darum
          zu bitten, große Datenbrocken mit einer einzelnen Antwort zu
          übertragen. Wir empfehlen, den Wert der Option
          <literal>MaxKeepAliveRequests</literal> auf mindestens
          <literal>1000</literal> zu erhöhen.</para>

        <informalexample>
<!--
          <programlisting>
#
# KeepAlive: Whether or not to allow persistent connections (more than
# one request per connection). Set to "Off" to deactivate.
#
KeepAlive On

#
# MaxKeepAliveRequests: The maximum number of requests to allow
# during a persistent connection. Set to 0 to allow an unlimited amount.
# We recommend you leave this number high, for maximum performance.
#
MaxKeepAliveRequests 1000
</programlisting>
-->
          <programlisting>
#
# KeepAlive: Durchgehende Verbindungen erlauben oder verbieten (mehr
# als eine Anfrage pro Verbindung). Zum verbieten auf "Off" setzen.
#
KeepAlive On

#
# MaxKeepAliveRequests: Die Maximalanzahl erlaubter Anfragen während
# einer durchgehenden Verbindung. Auf 0 setzen, um eine unbegrenzte
# Anzahl zu erlauben.
# Wir empfehlen, diese Zahl hoch zu halten, um maximale
# Leistungsfähigkeit zu gewährleisten.
#
MaxKeepAliveRequests 1000
</programlisting>
        </informalexample>
      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.httpd.perf.bulk-updates">
<!--
        <title>Bulk updates</title>
-->
        <title>Massen-Aktualisierungen</title>

<!--
        <para>The biggest difference between the way that Subversion
          1.8 clients and pre-1.8 clients behave is in how update-style
          operations (<command>svn checkout</command>, <command>svn
          update</command>, <command>svn switch</command>, etc.) are
          handled.  Older clients which used the Neon HTTP library for
          communications preferred to ask the server for the entire
          payload of information required from the server in a single
          request.  Admins will have noticed that in their server
          logs, there would be some initial handshaking operations,
          and then a <literal>REPORT</literal> request with a massive
          response.  That response was the entire checkout/update
          dataset!</para>
-->
        <para>Der größte Unterschied im Verhalten von Subversion 1.8
          Clients und älteren Clients besteht in der Behandlung von
          Operationen ähnlich einer Aktualisierung (<command>svn
          checkout</command>, <command>svn update</command>,
          <command>svn switch</command> usw.).
          Ältere Clients, die die Bibliothek Neon HTTP zur
          Kommunikation verwendeten, bevorzugten es, vom Server
          die gesamte Informations-Nutzlast mit einer Abfrage
          anzufordern. Administratoren werden bemerkt haben, dass in
          den Protokolldateien des Servers zunächst einige
          Vermittlungsoperationen auftraten und dann eine
          <literal>REPORT</literal>-Anfrage mit einer massiven Antwort
          folgte. Diese Antwort umfasste den kompletten Datenumfang
          des Checkouts bzw. der Aktualisierung!</para>

<!--
        <para>Subversion clients which use the Serf HTTP
          library&mdash;which includes all clients built atop the
          Subversion 1.8&mdash;still send the <literal>REPORT</literal>
          request, but with slightly different flags set inside that
          request.  These flags ask the server not to send all the
          data for the operation, but to instead send only a checklist
          of other more specific things that the client needs to
          subsequently fetch from the server in order to complete that
          operation.  In the server's <filename>access_log</filename>,
          that <literal>REPORT</literal> is followed by many smaller
          requests (<literal>GET</literal>s and, in older versions of
          Subversion, <literal>PROPFIND</literal>s).</para>
-->
        <para>Subversion Clients, die die Bibliothek Serf HTTP
          verwenden &ndash; zu denen alle auf Subversion 1.8 gebauten
          Clients gehören &ndash; senden immer noch die
          <literal>REPORT</literal>-Anfrage, allerdings mit etwas
          anders gesetzten Schaltern innerhalb der Abfrage. Diese
          Schalter fordern den Server auf, nicht alle Daten für die
          Operation zu senden, sondern stattdessen nur eine Checkliste
          mit anderen, spezifischeren Dingen, die der Client im
          Folgenden vom Server abrufen muss, um die Operation zu
          vervollständigen. Im <filename>access_log</filename> des
          Servers folgen diesem <literal>REPORT</literal> viele
          kleinere Anfragen (<literal>GET</literal>s und, in älteren
          Versionen von Subversion,
          <literal>PROPFIND</literal>s).</para>

<!--
        <para>There are pros and cons to each approach.  As we've
          mentioned, the so-called bulk updates generate considerably
          less information in the server logs, but a given Apache HTTP
          Server child process is completely consumed for the duration
          of what could be a lengthy operation.  Non-bulk updates
          offer opportunities for setting up content caches (which
          themselves can improve performance), but generate server log
          traffic which is whole orders of magnitude larger than the
          bulk update approach.  So, for one reason or another,
          administrators may desire to exert a little more control
          over which approach the clients use.  Subversion 1.6
          introduced the <literal>SVNAllowBulkUpdates</literal>
          <command>mod_dav_svn</command> directive&mdash;a simple
          boolean flag&mdash;to allow admins to specify whether the
          server was allowed to honor bulk update requests.  In
          Subversion 1.8, this directive has expanded to include
          a <literal>Prefer</literal> value in addition to the
          <literal>On</literal> and <literal>Off</literal> values it
          already supported. When <literal>SVNAllowBulkUpdates</literal>
          is set to <literal>Prefer</literal>, supporting clients (1.8
          or newer) will try to use the bulk update approach unless
          otherwise configured.</para>
-->
        <para>Jeder dieser Ansätze hat Vor- und Nachteile. Wie bereits
          erwähnt, erzeugen sogenannte Massen-Aktualisierungen
          wesentlich weniger Information in den Protokolldateien des
          Servers, jedoch wird ein gegebener Kindprozess eines
          Apache-HTTP-Servers für die Dauer einer eventuell längeren
          Operation vollständig in Anspruch genommen.  Normale
          Aktualisierungen bieten die Gelegenheit, Zwischenspeicher
          für Inhalte anzulegen (die an sich die Leistung erhöhen
          können), erzeugen jedoch eine Protokollnachrichten-Aufkommen
          auf dem Server, dass erheblich umfangreicher ist als bei dem
          Ansatz mit den Massen-Aktualisierungen. Aus verschiedenen
          Gründen könnten Administratoren etwas mehr Einfluss auf den
          clientseitig verwendeten Ansatz nehmen wollen.  Subversion
          1.6 führte die <command>mod_dav_svn</command>-Direktive
          <literal>SVNAllowBulkUpdates</literal> &ndash; ein einfacher
          boolescher Schalter &ndash; ein, damit Administratoren
          angeben können, ob der Server Anfragen für
          Massen-Aktualisierungen zulassen darf.  In Subversion 1.8
          wurde diese Direktive zusätzlich zu den bereits
          unterstützten Werten <literal>On</literal> und
          <literal>Off</literal> um den Wert <literal>Prefer</literal>
          erweitert.  Wenn <literal>SVNAllowBulkUpdates</literal> auf
          <literal>Prefer</literal> gesetzt wird, versuchen Clients,
          die er unterstützen (1.8 oder neuer) den Ansatz der
          Massen-Aktualisierung, wenn nicht etwas anderes konfiguriert
          wurde.</para>

      </sect3>
    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.httpd.extra">
<!--
      <title>Extra Goodies</title>
-->
      <title>Extra Schmankerl</title>

<!--
      <para>We've covered most of the authentication and authorization
        options for Apache and <command>mod_dav_svn</command>.  But
        there are a few other nice features that Apache
        provides.</para>
-->
      <para>Die meisten Authentifikations- und Autorisierungsoptionen
        für Apache und <command>mod_dav_svn</command> haben wir
        abgehandelt. Es gibt jedoch noch ein paar weitere nette Dinge,
        die Apache zu bieten hat.</para>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.httpd.extra.browsing">
<!--
        <title>Repository browsing</title>
-->
        <title>Stöbern im Projektarchiv</title>

<!--
        <para>One of the most useful benefits of an Apache/WebDAV
          configuration for your Subversion repository is that your
          versioned files and directories are immediately available
          for viewing via a regular web browser.  Since Subversion
          uses URLs to identify versioned resources, those URLs used
          for HTTP-based repository access can be typed directly into
          a web browser.  Your browser will issue an
          HTTP <literal>GET</literal> request for that URL; based on
          whether that URL represents a versioned directory or
          file, <command>mod_dav_svn</command> will respond with a
          directory listing or with file contents.</para>
-->
        <para>Einer der nützlichsten Vorteile eines Apache/WebDAV
          Aufbaus für Ihr Subversion Projektarchiv besteht darin, dass
          Ihre versionierten Dateien und Verzeichnisse unmittelbar mit
          einem gewöhnlichen Webbrowser betrachtet werden können. Da
          Subversion zur Identifizierung versionierter Ressourcen URLs
          verwendet, können diese URLs für den HTTP-basierten Zugriff
          direkt im Webbrowser eingetippt werden. Ihr Browser
          verschickt daraufhin für diesen URL eine HTTP
          <literal>GET</literal>-Anfrage; je nachdem, ob dieser URL
          ein versioniertes Verzeichnis oder eine Datei repräsentiert,
          antwortet <command>mod_dav_svn</command> mit der Auflistung
          eines Verzeichnisinhalts oder mit dem Inhalt einer
          Datei.</para>

        <sect4 id="svn.serverconfig.httpd.extra.browsing.syntax">
<!--
          <title>URL syntax</title>
-->
          <title>URL Syntax</title>
<!--
          <para>If the URLs do not contain any information about which
            version of the resource you wish to
            see, <command>mod_dav_svn</command> will answer with the
            youngest version.  This functionality has the wonderful
            side effect that you can pass around Subversion URLs to
            your peers as references to documents, and those URLs will
            always point at the latest manifestation of that document.
            Of course, you can even use the URLs as hyperlinks from
            other web sites, too.</para>
-->
          <para>Falls die URLs keinerlei Informationen über die
            Ressourcenversion enthalten, die Sie sehen möchten, wird
            <command>mod_dav_svn</command> stets mit der jüngsten
            Version antworten. Diese Funktionalität hat den
            wundervollen Nebeneffekt, dass Sie Subversion-URLs als
            Dokumentverweise an Ihre Mitarbeiter weitergeben können,
            die stets auf die neuesten Ausprägungen dieser Dokumente
            zeigen werden.  Natürlich können Sie diese URLs auch aus
            anderen Webseiten heraus verwenden.</para>

<!--
          <para>As of Subversion 1.6, <command>mod_dav_svn</command>
            supports a public URI syntax for examining older revisions
            of both files and directories.  The syntax uses the query
            string portion of the URL to specify either or both of a
            peg revision and operative revision, which Subversion will
            then use to determine which version of the file or
            directory to display to your web browser.  Add the query
            string name/value pair
            <literal>p=<replaceable>PEGREV</replaceable></literal>,
            where <replaceable>PEGREV</replaceable> is a revision
            number, to specify the peg revision you wish to apply to the
            request.  Use
            <literal>r=<replaceable>REV</replaceable></literal>,
            where <replaceable>REV</replaceable> is a revision number, to
            specify an operative revision.</para>
-->
          <para>Seit Subversion 1.6 unterstützt
            <command>mod_dav_svn</command> eine öffentliche URI Syntax
            zur Untersuchung älterer Revisionen sowohl von Dateien als
            auch Verzeichnissen. Die Syntax verwendet den Teil des
            Query-Strings des URL, um entweder die Peg-Revision oder
            die operative Revision oder beide anzugeben, die
            Subversion dann verwendet, um die in Ihrem Browser
            darzustellende Version zu ermitteln. Fügen Sie dem
            Query-String das Namens-Wert-Paar
            <literal>p=<replaceable>PEGREV</replaceable></literal>,
            hinzu, wobei <replaceable>PEGREV</replaceable> eine
            Revisionsnummer ist, die die Peg-Revision festlegt, die
            Sie für die Abfrage anwenden möchten. Verwenden Sie
            <literal>r=<replaceable>REV</replaceable></literal>,
            wobei <replaceable>REV</replaceable> eine Revisionsnummer
            ist, die die operative Revisionsnummer festlegt.</para>

<!--
          <para>For example, if you wish to see the latest version of a
            <filename>README.txt</filename> file located in your
            project's <filename>/trunk</filename>, point your web
            browser to that file's repository URL, which might look
            something like the following:</para>
-->
          <para>Wenn Sie beispielsweise die letzte Version einer Datei
            <filename>README.txt</filename> in
            <filename>/trunk</filename> Ihres Projektes sehen möchten,
            zeigen Sie mit Ihrem Webbrowser auf die Projektarchiv-URL
            dieser Datei, die ähnlich der folgenden aussehen
            sollte:</para>

          <informalexample>
            <programlisting>
http://host.example.com/repos/project/trunk/README.txt
</programlisting>
          </informalexample>

<!--
          <para>If you now wish to see some older version of that
            file, add an operative revision to the URL's query
            string:</para>
-->
          <para>Falls Sie nun eine ältere Version dieser Datei sehen
            wollten, fügen Sie dem Query-String der URL eine operative
            Revision hinzu:</para>

          <informalexample>
            <programlisting>
http://host.example.com/repos/project/trunk/README.txt?r=1234
</programlisting>
          </informalexample>

<!--
          <para>What if the thing you're trying to view no longer exists
            in the youngest revision of the repository?  That's where a
            peg revision is handy:</para>
-->
          <para>Was ist, falls das Objekt, das Sie sehen möchten,
            nicht mehr in der letzten Revision des Projektarchivs
            vorhanden ist? Hierbei ist eine Peg-Revision sehr
            hilfreich:</para>

          <informalexample>
            <programlisting>
http://host.example.com/repos/project/trunk/deleted-thing.txt?p=321
</programlisting>
          </informalexample>

<!--
          <para>And of course, you can combine peg revision and
            operative revision specifiers to fine-tune the exact item
            you wish to view:</para>
-->
          <para>Natürlich können Sie Peg-Revisions- und Angaben für
            operative Revisionen kombinieren, um genau anzugeben, was
            genau Sie sehen möchten:</para>

          <informalexample>
            <programlisting>
http://host.example.com/repos/project/trunk/renamed-thing.txt?p=123&amp;r=21
</programlisting>
          </informalexample>

<!--
          <para>The previous URL would display revision 21 of the
            object which, in revision 123, was located
            at <filename>/trunk/renamed-thing.txt</filename> in the
            repository.  See <xref linkend="svn.advanced.pegrevs" /> for a
            detailed explanation of these <quote>peg revision</quote>
            and <quote>operative revision</quote> concepts.  They can
            be a bit tricky to wrap your head around.</para>
-->
          <para>Der obige URL würde Revision 21 des Objekts anzeigen,
            das in Revision 123 an der Stelle
            <filename>/trunk/renamed-thing.txt</filename> im
            Projektarchiv lag.  Siehe
            <xref linkend="svn.advanced.pegrevs" /> für eine
            detaillierte Erörterung dieser Konzepte von
            <quote>Peg-Revision</quote> und <quote>operativer
            Revision</quote>. Sie könnten etwas schwer verständlich
            sein.</para>

<!--
          <para>Beginning with Subversion 1.8, <command>mod_dav_svn</command>
            has the ability to substitute keywords.  When 
            <command>mod_dav_svn</command>
            finds the query argument <literal>kw=1</literal> added to
            the URL of a file, it will expand keywords when delivering
            the file's content.  Omitting the <literal>kw</literal>
            parameter or using any value besides <literal>1</literal>
            for that parameter will cause Subversion to use its
            default behavior, which is to deliver the file's content
            without any keywords expanded.</para>
-->
          <para>Seit Subversion 1.8 kann <command>mod_dav_svn</command>
            Schlüsselworte ersetzen. Wenn
            <command>mod_dav_svn</command> im Query-String des URL
            einer Datei den benannten Parameter
            <literal>kw=1</literal> findet, werden beim Ausliefern des
            Dateiinhaltes Schlüsselworte ersetzt. Wird der Parameter
            <literal>kw</literal> weggelassen oder hat er einen
            anderen Wert als <literal>1</literal>, verhält sich
            Subversion standardmäßig, d.h., der Dateiinhalt wird ohne
            ersetzte Schlüsselworte ausgeliefert.</para>

<!--
          <para>Because keyword substitution is typically performed by the
            Subversion client as part of its working copy administration
            and management, this is a handy way to get the server to deliver
            a keyword-expanded form of your versioned file without the use
            of a working copy.</para>
-->
          <para>Da die Schlüsselwort-Ersetzung normalerweise im Rahmen
            der Arbeitskopie-Verwaltung vom Subversion-Client
            vorgenommen wird, ist dies eine praktische Möglichkeit,
            den Server dazu zu bringen, ein Format Ihrer versionierten
            Datei mit expandierten Schlüsselworten abzuliefern, ohne
            eine Arbeitskopie zu verwenden.</para>

<!--
          <para>For example, if you wish to see the latest version of a
            <filename>README.txt</filename> file located in your
            project's <filename>/trunk</filename> with keywords
            expanded, add the query argument <literal>kw=1</literal> to the
            URL:</para>
-->
          <para>Wenn Sie beispielsweise die letzte Version einer Datei
            <filename>README.txt</filename> im <filename>/trunk</filename>
            Ihres Projektes mit ersetzten Schlüsselworten sehen
            möchten, fügen Sie dem URL den Query-Parameter
            <literal>kw=1</literal> hinzu:</para>

          <informalexample>
            <programlisting>
http://host.example.com/repos/project/trunk/README.txt?kw=1
</programlisting>
          </informalexample>

<!--
          <para>As with client-side keyword expansion, only those keywords
            which are explicitly designated for expansion via the
            <literal>svn:keywords</literal> property set on the file itself
            will be expanded.  See
            <xref linkend="svn.advanced.props.special.keywords" /> for a
            detailed description of the keyword substitution feature.</para>
-->
          <para>Ebenso wie bei der client-seitigen Ersetzung von
            Schlüsselworten, werden nur diejenigen Schlüsselworte
            ersetzt, die über die sich an der Datei befindlichen Eigenschaft
            <literal>svn:keywords</literal> ausdrücklich hierfür
            vorgesehen sind. Siehe
            <xref linkend="svn.advanced.props.special.keywords" /> für
            eine detaillierte Beschreibung der
            Schlüsselwort-Ersetzung.</para>

<!--
          <para>As a reminder, <command>mod_dav_svn</command> offers only a
            limited repository browsing experience.  You can see directory
            listings and file contents, but no revision properties
            (such as commit log messages) or file/directory
            properties.  For folks who require more extensive browsing
            of repositories and their history, there are several
            third-party software packages which offer this.  Some
            examples include ViewVC (<ulink url="http://viewvc.org" />),
            Trac (<ulink url="http://trac.edgewall.org" />) and WebSVN
            (<ulink url="http://websvnphp.github.io" />).  These third-party
            tools don't affect <command>mod_dav_svn</command>'s
            built-in <quote>browseability</quote>, and generally offer
            a much wider set of features, including the display of the
            aforementioned property sets, display of content
            differences between file revisions, and so on.</para>
-->
          <para>Zur Erinnerung: Diese Funktionalität von
            <command>mod_dav_svn</command> bietet nur ein
            eingeschränktes Stöbererlebnis im Projektarchiv. Sie
            können Verzeichnislisten und Dateiinhalte sehen, jedoch
            keine Revisionseigenschaften (wie etwa
            Protokollnachrichten) oder Datei- oder
            Verzeichniseigenschaften. Für Leute, die weitergehende
            Informationen zum Projektarchiv und seiner Geschichte
            benötigen gibt es hierfür mehrere Softwarepakete von
            Drittanbietern. Hierzu zählen beispielsweise ViewVC
            (<ulink url="http://viewvc.org"/>), Trac (<ulink
            url="http://trac.edgewall.org"/>) und WebSVN (<ulink
            url="http://websvnphp.github.io"/>). Diese Werkzeuge von
            Drittanbietern beeinträchtigen nicht die eingebaute
            <quote>Stöberfähigkeit</quote> von
            <command>mod_dav_svn</command> und bieten im Allgemeinen
            weitergehende Funktionalität, wozu die Anzeige der eben
            erwähnten Mengen von Eigenschaften, die Anzeige von
            Unterschieden zwischen Dateirevisionen u.a. gehört.</para>

        </sect4>

        <sect4 id="svn.serverconfig.httpd.extra.browsing.mimetype">
<!--
          <title>Proper MIME type</title>
-->
          <title>Passender MIME-Typ</title>

<!--
          <para>When browsing a Subversion repository, the web browser
            gets a clue about how to render a file's contents by
            looking at the <literal>Content-Type:</literal> header
            returned in Apache's response to the
            HTTP <literal>GET</literal> request.  The value of this
            header is some sort of MIME type.  By default, Apache will
            tell the web browsers that all repository files are of
            the <quote>default</quote> MIME type,
            typically <literal>text/plain</literal>.  This can be
            frustrating, however, if a user wishes repository files to
            render as something more meaningful&mdash;for example,
            it might be nice to have a <filename>foo.html</filename> file
            in the repository actually render as HTML when
            browsing.</para>
-->
          <para>Während des Durchstöberns eines
            Subversion-Projektarchivs bekommt der Web-Browser Hinweise
            zur Darstellung des Inhalts einer Datei, indem er in den
            <literal>Content-Type:</literal>-Header von Apaches
            Antwort auf die HTTP <literal>GET</literal>-Anfrage
            schaut. Der Wert dieses Headers ist eine Art MIME-Typ.
            Standardmäßig teilt Apache den Web-Browsern mit, dass alle
            Dateien des Projektarchivs den
            <quote>Standard</quote>-MIME-Typen besitzen, normalerweise
            <literal>text/plain</literal>. Das kann jedoch
            frustrierend sein, wenn ein Anwender möchte, dass Dateien
            aus dem Projektarchiv etwas aussagekräftiger dargestellt
            werden; beispielsweise wäre es nett, wenn eine Datei
            <filename>foo.html</filename> aus dem Projektarchiv auch
            als HTML-Datei angezeigt würde.</para>

<!--
          <para>To make this happen, you need only to make sure that
            your files have the proper <literal>svn:mime-type</literal>
            set.  We discuss this in more detail in
            <xref linkend="svn.advanced.props.special.mime-type"/>,
            and you can even configure your client to automatically
            attach proper <literal>svn:mime-type</literal> properties
            to files entering the repository for the first time; see
            <xref linkend="svn.advanced.props.auto"/>.</para>
-->
          <para>Um das zu erreichen, müssen Sie nur sicherstellen,
            dass Ihre Dateien den passenden
            <literal>svn:mime-type</literal> gesetzt haben. Im Detail
            besprechen wir das in
            <xref linkend="svn.advanced.props.special.mime-type"/>.
            Sie können Ihren Client sogar so konfigurieren, dass er
            automatisch passende
            <literal>svn:mime-type</literal>-Eigenschaften an Dateien
            hängt, wenn sie das erste Mal in das Projektarchiv
            eingebracht werden (siehe
            <xref linkend="svn.advanced.props.auto"/>).</para>

<!--
          <para>Continuing our example, if one were to set
            the <literal>svn:mime-type</literal> property
            to <literal>text/html</literal> on
            file <filename>foo.html</filename>, Apache would properly
            tell your web browser to render the file as HTML.  One
            could also attach proper <literal>image/*</literal>
            MIME-type properties to image files and ultimately get an
            entire web site to be viewable directly from a repository!
            There's generally no problem with this, as long as the web
            site doesn't contain any dynamically generated
            content.</para>
-->
          <para>Um mit unserem Beispiel fortzufahren, wenn also jemand
            die Eigenschaft <literal>svn:mime-type</literal> mit dem
            Wert <literal>text/html</literal> an die Datei
            <filename>foo.html</filename> hänge, würde Apache Ihrem
            Browser wahrscheinlich mitteilen, dass die Datei als HTML
            darzustellen sei. Man könnte auch passende
            <literal>image/*</literal>-MIME-Type-Eigenschaften an
            Bilddateien hängen und somit eine komplette Webpräsenz
            direkt aus dem Projektarchiv heraus sichtbar machen!
            Solange die Webpräsenz keinen dynamisch erzeugten Inhalt
            hat, gibt es damit im Allgemeinen kein Problem.</para>
        </sect4>

        <sect4 id="svn.serverconfig.httpd.extra.browsing.xslt">
<!--
          <title>Customizing the look</title>
-->
          <title>Anpassung der Darstellung</title>

<!--
          <para>You generally will get more use out of URLs to
            versioned files&mdash;after all, that's where the
            interesting content tends to lie.  But you might have
            occasion to browse a Subversion directory listing, where
            you'll quickly note that the generated HTML used to
            display that listing is very basic, and certainly not
            intended to be aesthetically pleasing (or even
            interesting).  To enable customization of these directory
            displays, Subversion provides an XML index feature.  A
            single <literal>SVNIndexXSLT</literal> directive in your
            repository's <literal>Location</literal> block of
            <filename>httpd.conf</filename> will
            instruct <command>mod_dav_svn</command> to generate XML
            output when displaying a directory listing, and to
            reference the XSLT stylesheet of your choice:</para>
-->
          <para>Gemeinhin werden Sie mehr Nutzen aus URLs auf
            versionierte Dateien ziehen &ndash; hier liegt schließlich
            der interessante Inhalt. Gelegentlich werden Sie beim
            Durchstöbern eines Subversion-Verzeichnisinhalts
            feststellen, dass das zur Darstellung verwendete HTML sehr
            einfach ist und bestimmt nicht ästhetisch ansprechend (oder
            gar interessant). Um eine Anpassung dieser
            Verzeichnisdarstellungen zu ermöglichen, stellt Subversion
            einen XML-Index-Mechanismus zur Verfügung. Eine einzelne 
            <literal>SVNIndexXSLT</literal>-Direktive im
            <literal>Location</literal>-Block des Projektarchivs in
            <filename>httpd.conf</filename> fordert
            <command>mod_dav_svn</command> auf, bei der Anzeige von
            Verzeichnisinhalten XML auszugeben und ein XSLT-Stylesheet
            Ihrer Wahl zu verwenden:</para>

          <informalexample>
            <programlisting>
&lt;Location /svn&gt;
  DAV svn
  SVNParentPath /var/svn
  SVNIndexXSLT "/svnindex.xsl"
  &hellip;
&lt;/Location&gt;
</programlisting>
          </informalexample>

<!--
          <para>Using the <literal>SVNIndexXSLT</literal> directive
            and a creative XSLT stylesheet, you can make your
            directory listings match the color schemes and imagery
            used in other parts of your web site.  Or, if you'd
            prefer, you can use the sample stylesheets provided in the
            Subversion source distribution's
            <filename>tools/xslt/</filename> directory.
            Keep in mind that the path provided to the
            <literal>SVNIndexXSLT</literal> directive is actually a
            URL path&mdash;browsers need to be able to read your
            stylesheets to make use of them!</para>
-->
          <para>Wenn Sie die Direktive <literal>SVNIndexXSLT</literal>
            zusammen mit einem gestalterischen XSLT-Stylesheet
            verwenden, können Sie die Verzeichnisinhalte an das
            Farbschema und die bildliche Darstellung anderer Teile
            Ihrer Webpräsenz anpassen. Sollten Sie es vorziehen, können
            Sie auch die Beispiel-Stylesheets aus dem Verzeichnis
            <filename>tools/xslt/</filename> des
            Subversion-Quelltextpakets verwenden. Beachten Sie, dass
            die Pfadangabe des Verzeichnisses
            <literal>SVNIndexXSLT</literal> tatsächlich um einen
            URL-Pfad handelt &ndash; Browser müssen Ihre Stylesheets
            lesen können, um sie zu verwenden!</para>

        </sect4>

        <sect4 id="svn.serverconfig.httpd.extra.browsing.reposlisting">
<!--
          <title>Listing repositories</title>
-->
          <title>Anzeige von Projektarchiven</title>

<!--
          <para>If you're serving a collection of repositories from a
            single URL via the <literal>SVNParentPath</literal>
            directive, then it's also possible to have Apache display
            all available repositories to a web browser.  Just
            activate the <literal>SVNListParentPath</literal>
            directive:</para>
-->
          <para>Falls Sie mit einem einzelnen URL eine Ansammlung von
            Projektarchiven über die Direktive
            <literal>SVNParentPath</literal> verfügbar machen, ist es
            auch möglich, dass Apache einem Web-Browser alle
            verfügbaren Projektarchive anzeigt. Sie müssen nur die
            Direktive <literal>SVNListParentPath</literal>
            aktivieren:</para>

          <informalexample>
            <programlisting>
&lt;Location /svn&gt;
  DAV svn
  SVNParentPath /var/svn
  SVNListParentPath on
  &hellip;
&lt;/Location&gt;
</programlisting>
          </informalexample>

<!--
          <para>If a user now points her web browser to the
            URL <literal>http://host.example.com/svn/</literal>,
            she'll see a list of all Subversion repositories sitting
            in <filename>/var/svn</filename>.  Obviously, this can be
            a security problem, so this feature is turned off by
            default.</para>
-->
          <para>Falls ein Anwender nun mit dem Web-Browser auf den URL
            <literal>http://host.example.com/svn/</literal> geht,
            sieht er eine Liste aller Projektarchive unterhalb von
            <filename>/var/svn</filename>. Offensichtlich kann dies
            ein Sicherheitsproblem sein, so dass dieser Mechanismus
            standardmäßig abgestellt ist.</para>

        </sect4>

      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.httpd.extra.logging">
<!--
        <title>Apache logging</title>
-->
        <title>Protokollierung von Apache</title>

<!--
        <para>Because Apache is an HTTP server at heart, it contains
          fantastically flexible logging features.  It's beyond the
          scope of this book to discuss all of the ways logging can be
          configured, but we should point out that even the most
          generic <filename>httpd.conf</filename> file will cause
          Apache to produce two logs:
          <filename>error_log</filename>
          and <filename>access_log</filename>.  These logs may appear
          in different places, but are typically created in the
          logging area of your Apache installation.  (On Unix, they
          often live
          in <filename>/usr/local/apache2/logs/</filename>.)</para>
-->
        <para>Da Apache im Grunde genommen ein HTTP-Server ist,
          beinhaltet er fantastisch anpassungsfähige
          Protokollierungs-Möglichkeiten. Es würde den Rahmen dieses
          Buches sprengen, alle Protokollierungs-Einstellungen zu
          erörtern, doch soll darauf hingewiesen werden, dass selbst
          die gewöhnlichste <filename>httpd.conf</filename>-Datei 
          Apache veranlasst, zwei Protokolldateien anzulegen:
          <filename>error_log</filename> 
          und <filename>access_log</filename>. Diese Protokolldateien
          können an unterschiedlichen Orten liegen, werden
          normalerweise aber im Protokollbereich Ihrer
          Apache-Installation angelegt. (Unter Unix liegen sie oft
          in  <filename>/usr/local/apache2/logs/</filename>.)</para>

<!--
        <para>The <filename>error_log</filename> describes any internal
          errors that Apache runs into as it works.
          The <filename>access_log</filename> file records every
          incoming HTTP request received by Apache.  This makes it
          easy to see, for example, which IP addresses Subversion
          clients are coming from, how often particular clients use
          the server, which users are authenticating properly, and
          which requests succeed or fail.</para>
-->
        <para>Die Datei <filename>error_log</filename> zeichnet
          sämtliche internen Fehler beim Betrieb von Apache auf.
          Die Datei <filename>access_log</filename> protokolliert
          jede von Apache empfangene eingehende HTTP-Abfrage. Das
          macht es einfach, festzustellen, von welchen IP-Adressen
          Subversion-Clients kommen, wie oft bestimmte Clients den
          Server benutzen, welche Anwender sich richtig anmelden und
          welche Abfragen erfolgreich sind oder fehlschlagen.</para>

<!--
        <para>Unfortunately, because HTTP is a stateless protocol,
          even the simplest Subversion client operation generates
          multiple network requests.  It's very difficult to look at
          the <filename>access_log</filename> and deduce what the
          client was doing&mdash;most operations look like a series
          of cryptic <literal>PROPPATCH</literal>, <literal>GET</literal>,
          <literal>PUT</literal>, and <literal>REPORT</literal>
          requests.  To make things worse, many client operations send
          nearly identical series of requests, so it's even harder to
          tell them apart.</para>
-->
        <para>Da HTTP ein zustandsloses Protokoll ist, erzeugt selbst
          die einfachste Funktion eines Subversion Clients leider
          mehrere Netzwerkabfragen. Es ist sehr schwer, anhand der Datei
          <filename>access_log</filename> herzuleiten, was der Client
          tat; die meisten Funktionen sehen aus wie eine Folge
          kryptischer <literal>PROPPATCH</literal>-,
          <literal>GET</literal>-, <literal>PUT</literal>- und
          <literal>REPORT</literal>-Abfragen. Und, was alles noch
          komplizierter macht: viele Client-Funktionen schicken fast
          identische Anfragen, was ein Auseinanderhalten
          erschwert.</para>

<!--
        <para><command>mod_dav_svn</command>, however, can come to
          your aid.  By activating an <quote>operational
          logging</quote> feature, you can
          ask <command>mod_dav_svn</command> to create a separate log
          file describing what sort of high-level operations your
          clients are performing.</para>
-->
        <para><command>mod_dav_svn</command> kann Ihnen jedoch helfen.
          Durch die Aktivierung einer <quote>operativen
          Protokollierung</quote> können Sie
          <command>mod_dav_svn</command> veranlassen, eine gesonderte
          Protokolldatei anzulegen, die festhält, welche Art von
          Funktionen Ihre Clients auf höherer Ebene ausführen.</para>

<!--
        <para>To do this, you need to make use of
          Apache's <literal>CustomLog</literal> directive (which is
          explained in more detail in Apache's own documentation).
          Be sure to invoke this
          directive <emphasis>outside</emphasis> your
          Subversion <literal>Location</literal> block:</para>
-->
        <para>Um das zu bewerkstelligen, müssen Sie die
          Apache-Direktive <literal>CustomLog</literal> verwenden (die
          detailliert in der Dokumentation zu Apache beschrieben
          wird). Stellen Sie sicher, dass Sie die Direktive
          <emphasis>außerhalb</emphasis> Ihres Subversion
          <literal>Location</literal>-Blocks verwenden:</para>

        <informalexample>
          <programlisting>
&lt;Location /svn&gt;
  DAV svn
  &hellip;
&lt;/Location&gt;

CustomLog logs/svn_logfile "%t %u %{SVN-ACTION}e" env=SVN-ACTION
</programlisting>
        </informalexample>

<!--
        <para>In this example, we're asking Apache to create a special
          logfile, <filename>svn_logfile</filename>, in the standard
          Apache <filename>logs</filename> directory.
          The <literal>%t</literal> and <literal>%u</literal>
          variables are replaced by the time and username of the
          request, respectively.  The really important parts are the
          two instances of <literal>SVN-ACTION</literal>.
          When Apache sees that variable, it substitutes the value of
          the <literal>SVN-ACTION</literal> environment variable,
          which is automatically set by <command>mod_dav_svn</command>
          whenever it detects a high-level client action.</para>
-->
        <para>In diesem Beispiel veranlassen wir Apache, die spezielle
          Protokolldatei <filename>svn_logfile</filename> im
          standardmäßigen Verzeichnis für Apache Protokolldateien,
          <filename>logs</filename>, anzulegen. Die Variablen
          <literal>%t</literal> und <literal>%u</literal> werden
          durch die Zeit bzw. den Anwendernamen der  Anfrage ersetzt.
          Die wirklich wichtigen Teile sind die zwei Instanzen von
          <literal>SVN-ACTION</literal>. Wenn Apache diese Variable
          sieht, ersetzt er den Wert der Umgebungsvariablen
          <literal>SVN-ACTION</literal>, die automatisch von
          <command>mod_dav_svn</command> belegt wird, wenn eine
          Client-Funktion auf hoher Ebene feststellt wird.</para>

<!--
        <para>So, instead of having to interpret a
          traditional <filename>access_log</filename> like
          this:</para>
-->
        <para>Statt also eine traditionelle
          <filename>access_log</filename>-Protokolldatei auswerten zu
          müssen, die etwa so aussieht:</para>

        <informalexample>
          <programlisting>
[26/Jan/2007:22:25:29 -0600] "PROPFIND /svn/calc/!svn/vcc/default HTTP/1.1" 207 398
[26/Jan/2007:22:25:29 -0600] "PROPFIND /svn/calc/!svn/bln/59 HTTP/1.1" 207 449
[26/Jan/2007:22:25:29 -0600] "PROPFIND /svn/calc HTTP/1.1" 207 647
[26/Jan/2007:22:25:29 -0600] "REPORT /svn/calc/!svn/vcc/default HTTP/1.1" 200 607
[26/Jan/2007:22:25:31 -0600] "OPTIONS /svn/calc HTTP/1.1" 200 188
[26/Jan/2007:22:25:31 -0600] "MKACTIVITY /svn/calc/!svn/act/e6035ef7-5df0-4ac0-b811-4be7c823f998 HTTP/1.1" 201 227
&hellip;
</programlisting>
        </informalexample>

<!--
        <para>you can peruse a much more
          intelligible <filename>svn_logfile</filename> like
          this:</para>
-->
        <para>können Sie eine weit verständlichere Datei
          <filename>svn_logfile</filename> durchgehen, die so
          aussieht:</para>

        <informalexample>
          <programlisting>
[26/Jan/2007:22:24:20 -0600] - get-dir /tags r1729 props
[26/Jan/2007:22:24:27 -0600] - update /trunk r1729 depth=infinity
[26/Jan/2007:22:25:29 -0600] - status /trunk/foo r1729 depth=infinity
[26/Jan/2007:22:25:31 -0600] sally commit r1730
</programlisting>
        </informalexample>

<!--
        <para>In addition to the <literal>SVN-ACTION</literal>
          environment variable, <command>mod_dav_svn</command> also
          populates the <literal>SVN-REPOS</literal>
          and <literal>SVN-REPOS-NAME</literal> variables, which carry
          the filesystem path to the repository and the basename
          thereof, respectively.  You might wish to include references
          to one or both of these variables in
          your <literal>CustomLog</literal> format string, too,
          especially if you are combining usage information from
          multiple repositories into a single log file.  For an
          exhaustive list of all actions logged, see
          <xref linkend="svn.serverconfig.operational-logging"/>.</para>
-->
        <para>Zusätzlich zur Umgebungsvariablen
          <literal>SVN-ACTION</literal> besetzt
          <command>mod_dav_svn</command> auch die Variablen
          <literal>SVN-REPOS</literal> und
          <literal>SVN-REPOS-NAME</literal>, die den Dateisystempfad
          zum Projektarchiv bzw. dessen Basisnamen beinhalten.  Es sei
          empfohlen, Referenzen auf eine oder beide dieser Variablen
          in Ihre <literal>CustomLog</literal> Formatbeschreibung
          einzufügen; besonders dann, falls Sie Informationen aus
          mehreren Projektarchiven in einer einzelnen Protokolldatei
          sammeln.  Eine vollständige Liste mit allen protokollierten
          Aktionen finden Sie unter
          <xref linkend="svn.serverconfig.operational-logging"/>.</para>

<!--
        <para>Obviously, the more information that Apache logs about
          your Subversion activities, the more disk space on your
          server those logs consume.  It is non uncommon for
          high-traffic Subversion servers to generate many gigabytes
          of log information daily.  Obviously, logs are only valuable
          if they can be meaningfully processed, and huge log files
          can quickly become unwieldy.  There are various standard
          approaches to Apache HTTP Server log management which are
          outside the scope of this book.  Administrators are
          encouraged to use the log rotation and archival approach
          which works best for them.</para>
-->
        <para>Es leuchtet ein, dass je mehr Informationen Apache über
          Ihre Aktivitäten mit Subversion protokolliert, desto mehr
          Speicherplatz durch diese Protokolldateien auf Ihrem Server
          beansprucht wird. Es ist nicht ungewöhnlich für
          Subversion-Server mit hohem Verkehrsaufkommen, dass sie
          täglich mehrere Gigabytes an Protokollinformationen
          erzeugen. Es ist klar, dass Protokolldateien nur dann von
          Wert sind, wenn sie auch sinnstiftend ausgewertet werden
          können, und umfangreiche Protokolldateien können schnell
          unhandlich werden. Es gibt verschiedene Standardansätze für
          die Verwaltung der Apache HTTP-Server Protokollierung, die
          durch dieses Buch nicht behandelt werden. Den
          Administratoren wird nahegelegt, denjenigen Ansatz mit
          rotierenden und archivierten Protokolldateien zu wählen, der
          für sie am besten funktioniert.</para>

<!--
        <para>But what if Subversion is simply generating too much log
          information to be useful?  For example, in
          <xref linkend="svn.serverconfig.httpd.perf.bulk-updates" />,
          we mentioned that certain approaches that Subversion clients
          may take to checkouts and other update-style operations can
          cause rapid growth of your server logs as requests for
          individual pieces of the update data set are individually
          logged (whereas in previous version of Subversion, they
          might not have been).  In this case, you might consider
          using some Apache configuration magic to selectively silence
          some of that log activity.</para>
-->
        <para>Doch was ist, wenn Subversion einfach zu viel
          Protokolldaten erzeugt, um von Nutzen zu sein? So erwähnten
          wir beispielsweise in
          <xref linkend="svn.serverconfig.httpd.perf.bulk-updates" />,
          dass bestimmte Ansätze, die Subversion-Clients bei Checkouts
          und anderen Aktualisierungsoperationen wählen könnten, einen
          rasanten Zuwachs Ihrer Protokolldateien auf dem Server zur
          Folge haben kann, da Anfragen für individuelle Teile des
          Aktualisierungs-Datensatzes individuell protokolliert werden
          (wobei das in früheren Versionen von Subversion nicht
          geschah). In diesem Fall sollten Sie etwas
          Apache-Konfigurations-Magie anwenden, um selektiv Teile
          dieser Protokollaktivitäten ruhig zu stellen.</para>

<!--
        <para>Apache HTTP Server's
          <command>mod_setenvif</command> module offers
          a <literal>SetEnvIf</literal> directive which is handy for
          conditionally setting environment variables.  And as it
          turns out, the <literal>CustomLog</literal> directive can be
          told to conditionally log requests based on the state of
          environment variables.  The following is a sample
          configuration which instructs the server
          to <emphasis>not</emphasis> log <literal>GET</literal>
          and <literal>PROPFIND</literal> requests aimed at private
          Subversion URLs.</para>
-->
        <para>Das Modul <command>mod_setenvif</command> des Apache
          HTTP-Servers stellt eine Direktive
          <literal>SetEnvIf</literal> zur Verfügung, die praktisch
          ist, um bedingt Umgebungsvariablen zu setzen. Und wie sich
          herausstellt, kann der Direktive
          <literal>CustomLog</literal> mitgeteilt werden, Anfragen je
          nach Zustand von Umgebungsvariablen zu protokollieren. Das
          Folgende ist eine Beispiel-Konfiguration, die den Server
          auffordert, <emphasis>keine</emphasis> <literal>GET</literal>-
          und <literal>PROPFIND</literal>-Anfragen zu protokollieren,
          die an private Subversion URLs gerichtet sind.</para>

        <informalexample>
<!--
          <programlisting>
# Matches everything, just to initialize the "in_repos" variable.
SetEnvIf Request_URI "^" in_repos=0

# Set "in_repos" if this is a request for a private Subversion URL.
SetEnvIf Request_URI "/!svn/" in_repos=1

# Set "do_not_log" for non-public request types we don't care to log.
SetEnvIf Request_Method "GET" do_not_log
SetEnvIf Request_Method "PROPFIND" do_not_log

# Unset "do_not_log" for URLs that aren't private Subversion URLs.
SetEnvIf in_repos 0 !do_not_log

# Log requests, but only if "do_not_log" isn't set.
CustomLog logs/access_log env=!do_not_log
</programlisting>
-->
          <programlisting>
# Passt auf alles, nur zur Initialisierung von "in_repos".
SetEnvIf Request_URI "^" in_repos=0

# "in_repos" setzen, falls Anfrage für private Subversion URL.
SetEnvIf Request_URI "/!svn/" in_repos=1

# "do_not_log" für nicht-öffentliche Anfragetypen, die nicht protokolliert werden sollen.
SetEnvIf Request_Method "GET" do_not_log
SetEnvIf Request_Method "PROPFIND" do_not_log

# "do_not_log" zurücksetzen für nicht-private Subversion URLs
SetEnvIf in_repos 0 !do_not_log

# Anfragen protokollieren, nuer wenn "do_not_log" nicht gesetzt
CustomLog logs/access_log env=!do_not_log
</programlisting>
        </informalexample>

<!--
        <para>Using this configuration, <command>httpd</command> would
          still log <literal>GET</literal> requests aimed at public
          Subversion URLs.  These are the sorts of requests generated
          by a web browser as someone navigates the repository
          directly.  But <literal>GET</literal>
          and <literal>PROPFIND</literal> requests aimed at so-called
          <quote>private</quote> Subversion URLs&mdash;which are the very sorts of
          requests used to fetch each and every individual file during
          a checkout operation&mdash;won't get logged.</para>
-->
        <para>Bei Verwendung dieser Konfiguration würde
          <command>httpd</command> immer noch
          <literal>GET</literal>-Anfragen an öffentliche Subversion
          URLs protokollieren. Das sind die Art Anfragen, wie sie von
          einem Web-Browser erzeugt werden, wenn jemand direkt im
          Projektarchiv navigiert. Jedoch werden
          <literal>GET</literal>- und
          <literal>PROPFIND</literal>-Anfragen nicht protokolliert,
          die an sogenannte <quote>private</quote> Subversion-URLs gehen &ndash;
          das sind genau die Anfragen, die Verwendet werden, um jede
          einzelne Datei während einer Checkout-Operation zu
          holen.</para>

      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.httpd.extra.writethruproxy">
<!--
        <title>Write-through proxying</title>
-->
        <title>Proxy mit Weiterleitung beim Schreiben</title>

<!--
        <para>
          <indexterm>
            <primary>WebDAV</primary>
            <secondary>proxies</secondary>
            <see>httpd, write-through proxies</see>
          </indexterm>
          <indexterm>
            <primary>httpd</primary>
            <secondary>write-through proxies</secondary>
            <tertiary>master</tertiary>
          </indexterm>
          <indexterm>
            <primary>httpd</primary>
            <secondary>write-through proxies</secondary>
            <tertiary>slave</tertiary>
          </indexterm>One of the nice advantages of using Apache as a
          Subversion server is that it can be set up for simple
          replication.  For example, suppose that your team is
          distributed across four offices around the globe.  The
          Subversion repository can exist only in one of those
          offices, which means the other three offices will not enjoy
          accessing it&mdash;they're likely to experience
          significantly slower traffic and response times when
          updating and committing code.  A powerful solution is to set
          up a system consisting of one <firstterm>master</firstterm>
          Apache server and several <firstterm>slave</firstterm>
          Apache servers.  If you place a slave server in each office,
          users can check out a working copy from whichever slave
          is closest to them.  All read requests go to their local
          slave.  Write requests get automatically routed to the
          single master server.  When the commit completes, the master
          then automatically <quote>pushes</quote> the new revision to
          each slave server using the <command>svnsync</command>
          replication tool.</para>
-->
        <para>
          <indexterm>
            <primary>WebDAV</primary>
            <secondary>Proxys</secondary>
            <see>httpd, Proxys mit Schreib-Weiterleitung</see>
          </indexterm>
          <indexterm>
            <primary>httpd</primary>
            <secondary>Proxys mit Schreib-Weiterleitung</secondary>
            <tertiary>Master</tertiary>
          </indexterm>
          <indexterm>
            <primary>httpd</primary>
            <secondary>Proxys mit Schreib-Weiterleitung</secondary>
            <tertiary>Slave</tertiary>
          </indexterm>Einer der netten Vorteile von Apache als
          Subversion-Server ist die Möglichkeit zur Einrichtung eines
          einfachen Abgleichs. Nehmen wir zum Beispiel an, dass Ihr
          Team über vier Standorte auf der Welt verteilt ist. Da das
          Subversion-Projektarchiv nur an einem davon untergebracht
          sein kann, ist es für die anderen drei Standorte kein
          Vergnügen, darauf zuzugreifen, da sie wahrscheinlich eine
          spürbar langsamere Verbindung und längere Antwortzeiten beim
          Aktualisieren und Abliefern von Code erdulden müssen. Eine
          leistungsfähige Lösung besteht darin, ein System
          aufzusetzen, das aus einem
          <firstterm>Master</firstterm>-Apache-Server und mehreren
          <firstterm>Slave</firstterm>-Apache-Servern besteht. Falls
          Sie an jedem Standort einen Slave-Server aufstellen, können
          die Anwender eine Arbeitskopie vom nächstgelegenen Slave
          auschecken. Alle Leseanfragen gehen an den Server vor Ort.
          Schreibanfragen werden automatisch an den einzigen
          Master-Server weitergeleitet. Wenn die Übergabe
          abgeschlossen ist, <quote>schiebt</quote> der Master
          automatisch die neue Revision mithilfe des
          Abgleichswerkzeugs <command>svnsync</command> auf jeden
          Slave-Server.</para>

<!--
        <para>This configuration creates a huge perceptual speed
          increase for your users, because Subversion client traffic
          is typically 80&ndash;90% read requests.  And if those
          requests are coming from a <emphasis>local</emphasis>
          server, it's a huge win.</para>
-->
        <para>Diese Konfiguration bewirkt eine riesige, für Ihre
          Anwender deutlich wahrnehmbare Geschwindigkeitszunahme, da
          der Netzwerkverkehr von Subversion-Clients normalerweise zu
          80&mdash;90% aus Leseabfragen besteht. Und wenn diese
          Abfragen von einem <emphasis>lokalen</emphasis> Server
          kommen, ist das ein Riesengewinn.</para>

<!--
        <para>In this section, we'll walk you through a standard setup
          of this single-master/multiple-slave system.  However, keep
          in mind that your servers must be running at least Apache
          2.2.0 (with <command>mod_proxy</command> loaded) and
          Subversion 1.5 (<command>mod_dav_svn</command>).</para>
-->
        <para>In diesem Abschnitt begleiten wir Sie durch eine
          Standard-Einrichtung dieses
          Ein-Master/Mehrere-Slaves-Systems. Denken Sie jedoch daran,
          dass auf Ihren Servern mindestens Apache 2.2.0 (mit
          geladenem <command>mod_proxy</command>) und Subversion 1.5
          (<command>mod_dav_svn</command>) laufen muss.</para>

        <note>
<!--
          <para>Ours is just one example of how you might setup a
            Subversion write-through proxy configuration.  There are
            other approaches.  For example, rather than having the
            master server push changes out to every slave server, the
            slaves could periodically pull those changes from the
            master.  Or perhaps the master could push changes to a
            single slave, which then pushes the same change to the
            next slave, and so on down the line.  Administrators are
            encouraged to use this section for basic understanding
            of what happens in a Subversion WebDAV proxy deployment
            scenario, and then implement the specific approach that
            works best for their organization.</para>
-->
          <para>Unseres ist nur ein Beispiel, wie Sie eine
            Konfiguration für einen durchreichenden Subversion-Proxy
            einrichten können. Es gibt auch andere Ansätze.  Anstatt
            den Master-Server Änderungen an jeden Slave-Server
            schicken zu lassen, könnten beispielsweise diese
            Slave-Server periodisch diese Änderungen vom Master
            abrufen. Oder vielleicht könnte der Master Änderungen an
            einen einzigen Slave schicken, der dann dieselbe Änderung
            an den nächsten Slave weitergibt, und so der Reihe entlang
            weiterreicht. Administratoren sei nahegelegt, diesen
            Abschnitt zu verwenden, um ein grundsätzliches Verständnis
            darüber zu erlangen, was in einem Subversion-WebDAV-Proxy
            Szenario vor sich geht, und denjenigen Lösungsansatz zu
            wählen, der für ihre Organisation am besten
            funktioniert.</para>
        </note>

        <sect4 id="svn.serverconfig.httpd.extra.writethruproxy.configure">
<!--
          <title>Configure the servers</title>
-->
          <title>Einrichtung der Server</title>

<!--
          <para>First, configure your master server's
            <filename>httpd.conf</filename> file in the usual way.
            Make the repository available at a certain URI location,
            and configure authentication and authorization however
            you'd like.  After that's done, configure each of your
            <quote>slave</quote> servers in the exact same way, but
            add the special <literal>SVNMasterURI</literal> directive
            to the block:</para>
-->
          <para>Konfigurieren Sie zunächst die Datei
            <filename>httpd.conf</filename> des Master-Servers auf die
            übliche Art. Stellen Sie das Projektarchiv unter einem
            bestimmten URI zur Verfügung und richten Sie nach ihren
            Wünschen die Authentifikation sowie Autorisierung ein.
            Sobald dies erledigt ist, konfigurieren Sie jeden Ihrer
            <quote>Slave</quote>-Server auf exakt dieselbe Art, fügen
            jedoch die besondere Direktive
            <literal>SVNMasterURI</literal> dem Block hinzu:</para>

          <informalexample>
            <programlisting>
&lt;Location /svn&gt;
  DAV svn
  SVNPath /var/svn/repos
  SVNMasterURI http://master.example.com/svn
  &hellip;
&lt;/Location&gt;
</programlisting>
          </informalexample>

<!--
          <para>This new directive tells a slave server to redirect
            all write requests to the master.  (This is done
            automatically via Apache's <command>mod_proxy</command>
            module.)  Ordinary read requests, however, are still
            serviced by the slaves.  Be sure that your master and
            slave servers all have matching authentication and
            authorization configurations;  if they fall out of sync,
            it can lead to big headaches.</para>
-->
          <para>Diese neue Direktive teilt dem Slave-Server mit, alle
            Schreibanfragen an den Master weiterzuleiten. (Dies
            geschieht durch das Apache-Modul
            <command>mod_proxy</command> automatisch.) Gewöhnliche
            Leseanfragen werden jedoch immer noch von den Slaves
            bedient. Stellen Sie sicher, dass Ihre Master- und
            Slave-Server die gleichen Authentifikations- und
            Autorisierungs-Konfigurationen haben; falls sie nicht mehr
            synchron sein sollten, kann das zu heftigen Kopfschmerzen
            führen.</para>

<!--
          <para>Next, we need to deal with the problem of infinite
            recursion.  With the current configuration, imagine what
            will happen when a Subversion client performs a commit to
            the master server.  After the commit completes, the server
            uses <command>svnsync</command> to replicate the new
            revision to each slave.  But because
            <command>svnsync</command> appears to be just another
            Subversion client performing a commit, the slave will
            immediately attempt to proxy the incoming write request
            back to the master!  Hilarity ensues.</para>
-->
          <para>Als nächstes müssen wir uns um das Problem unendlicher
            Rekursion kümmern. Stellen Sie sich vor, was unter der
            gegenwärtigen Konfiguration passiert, wenn ein
            Subversion-Client eine Übergabe an den Master-Server
            vornimmt. Wenn die Übergabe abgeschlossen ist, benutzt der
            Server <command>svnsync</command>, um die neue Revision
            nach jedem Slave zu replizieren. Da sich aber
            <command>svnsync</command> wie ein gewöhnlicher
            Subversion-Client bei einer Übergabe verhält, wird der
            Slave sofort versuchen, die hereinkommende
            Schreibaufforderung zurück an den Master weiterzuleiten!
            Da kommt Freude auf.</para>

<!--
          <para>The solution to this problem is to have the master
            push revisions to a different
            <literal>&lt;Location&gt;</literal> on the slaves.  This
            location is configured to <emphasis>not</emphasis> proxy
            write requests at all, but to accept normal commits from
            (and only from) the master's IP address:</para>
-->
          <para>Die Lösung des Problems besteht darin, den Master
            Revisionen an eine unterschiedliche
            <literal>&lt;Location&gt;</literal> auf den Slaves senden
            zu lassen. Dieser Ort ist dergestalt konfiguriert, dass
            Schreibanfragen <emphasis>nicht</emphasis>  weitergeleitet
            werden, sondern normale Übergaben von der IP-Adresse des
            Masters (und nur von dort) angenommen werden:</para>

          <informalexample>
            <programlisting>
&lt;Location /svn-proxy-sync&gt;
  DAV svn
  SVNPath /var/svn/repos
  Order deny,allow
  Deny from all <!--
  # Only let the server's IP address access this Location:
-->
  # Nur Zugriffe auf diese Location von der IP-Adresse des Servers erlauben:
  Allow from 10.20.30.40
  &hellip;
&lt;/Location&gt;
</programlisting>
          </informalexample>

        </sect4>

        <sect4 id="svn.serverconfig.httpd.extra.writethruproxy.replicate">
<!--
          <title>Set up replication</title>
-->
          <title>Einrichten der Replizierung</title>

<!--
          <para>Now that you've configured
            your <literal>Location</literal> blocks on master and
            slaves, you need to configure the master to replicate to
            the slaves.  Our walkthough uses <command>svnsync</command>,
            which is covered in more detail in
            <xref linkend="svn.reposadmin.maint.replication.svnsync"
            />.</para>
-->
          <para>Nachdem Sie nun Ihre
            <literal>Location</literal>-Blöcke auf Mastern und Slaves
            konfiguriert haben, müssen Sie nun Ihren Master für die
            Replizierung zu den Slaves einrichten. Unser
            Anwendungsbeispiel verwendet <command>svnsync</command>,
            welches detailliert in
            <xref linkend="svn.reposadmin.maint.replication.svnsync"/>
            behandelt wird.</para>

<!--
          <para>First, make sure that each slave repository has a
            pre-revprop-change hook script which
            allows remote revision property changes.  (This is
            standard procedure for being on the receiving end of
            <command>svnsync</command>.) Then log into the master
            server and configure each of the slave repository URIs to
            receive data from the master repository on the local
            disk:</para>
-->
          <para>Stellen Sie zunächst sicher, dass jedes
            Slave-Projektarchiv ein
            pre-revprop-change-Hook-Skript hat,
            das Änderungen an Revisions-Eigenschaften aus der Ferne
            ermöglicht. (Das ist Standard, wenn von
            <command>svnsync</command> empfangen wird.) Melden Sie
            sich dann auf dem Master-Server an und konfigurieren jede
            der Slave-Projektarchiv-URIs, so dass sie Daten vom
            Master-Projektarchiv auf der lokalen Platte
            empfangen:</para>

          <informalexample>
            <screen>
$ svnsync init http://slave1.example.com/svn-proxy-sync \
               file:///var/svn/repos <!--
Copied properties for revision 0.
-->
Eigenschaften für Revision 0 kopiert.
$ svnsync init http://slave2.example.com/svn-proxy-sync \
               file:///var/svn/repos <!--
Copied properties for revision 0.
-->
Eigenschaften für Revision 0 kopiert.
$ svnsync init http://slave3.example.com/svn-proxy-sync \
               file:///var/svn/repos <!--
Copied properties for revision 0.
-->
Eigenschaften für Revision 0 kopiert.
<!--
# Perform the initial replication
-->
# Die initiale Replizierung durchführe

$ svnsync sync http://slave1.example.com/svn-proxy-sync \
$              file:///var/syn/repos <!--
Transmitting file data ....
Committed revision 1.
Copied properties for revision 1.
Transmitting file data .......
Committed revision 2.
Copied properties for revision 2.
-->
Übertrage Daten ....
Revision 1 übertragen.
Eigenschaften für Revision 1 kopiert.
Übertrage Daten ....
Revision 2 übertragen.
Eigenschaften für Revision 2 kopiert.
&hellip;

$ svnsync sync http://slave2.example.com/svn-proxy-sync \
               file:///var/svn/repos  <!--
Transmitting file data ....
Committed revision 1.
Copied properties for revision 1.
Transmitting file data .......
Committed revision 2.
Copied properties for revision 2.
-->
Übertrage Daten ....
Revision 1 übertragen.
Eigenschaften für Revision 1 kopiert.
Übertrage Daten ....
Revision 2 übertragen.
Eigenschaften für Revision 2 kopiert.
&hellip;

$ svnsync sync http://slave3.example.com/svn-proxy-sync \
               file:///var/svn/repos <!--
Transmitting file data ....
Committed revision 1.
Copied properties for revision 1.
Transmitting file data .......
Committed revision 2.
Copied properties for revision 2.
-->
Übertrage Daten ....
Revision 1 übertragen.
Eigenschaften für Revision 1 kopiert.
Übertrage Daten ....
Revision 2 übertragen.
Eigenschaften für Revision 2 kopiert.
&hellip;
</screen>
          </informalexample>

<!--
          <para>After this is done, we configure the master server's
            post-commit hook script to invoke
            <command>svnsync</command> on each slave server:</para>
-->
          <para>Nachdem das erledigt ist, wird das
            post-commit-Hook-Skript des
            Master-Servers konfiguriert, damit
            <command>svnsync</command> auf jedem Slave-Server
            aufgerufen wird:</para>

          <informalexample>
            <programlisting>
#!/bin/sh <!--
# Post-commit script to replicate newly committed revision to slaves
-->
# Post-Commit-Skript zum Replizieren der neu übertragenen Revision an die Slaves

svnsync sync http://slave1.example.com/svn-proxy-sync \
             file:///var/svn/repos &gt; /dev/null 2&gt;&amp;1 &amp;
svnsync sync http://slave2.example.com/svn-proxy-sync \
             file:///var/svn/repos &gt; /dev/null 2&gt;&amp;1 &amp;
svnsync sync http://slave3.example.com/svn-proxy-sync \
             file:///var/svn/repos &gt; /dev/null 2&gt;&amp;1 &amp;
</programlisting>
          </informalexample>

<!--
          <para>The extra bits on the end of each line aren't
            necessary, but they're a sneaky way to allow the sync
            commands to run in the background so that the Subversion
            client isn't left waiting forever for the commit to
            finish.  In addition to this
            post-commit hook, you'll need a
            post-revprop-change hook as well so
            that when a user, say, modifies a log message, the slave
            servers get that change also:</para>
-->
          <para>Die zusätzlichen Stückchen am Ende jeder Zeile sind
            zwar nicht notwendig, erlauben es aber den Sync-Befehlen,
            auf eine leise Art und Weise im Hintergrund zu laufen, so
            dass der Subversion-Client keine Ewigkeit auf den Abschluss
            der Übergabe warten muss. Zusätzlich zu diesem
            post-commit-Hook werden Sie außerdem
            einen post-revprop-change-Hook
            benötigen, damit, wenn ein Anwender beispielsweise eine
            Protokollnachricht verändert, die Slave-Server diese
            Änderung ebenfalls mitbekommen:</para>

          <informalexample>
            <programlisting>
#!/bin/sh <!--
# Post-revprop-change script to replicate revprop-changes to slaves
-->
# Post-revprop-Change-Skript zur Weitergabe der Änderung an den Revisionseigenschaften an die Slaves

REV=${2}
svnsync copy-revprops http://slave1.example.com/svn-proxy-sync \
                      file:///var/svn/repos \
                      -r ${REV} &gt; /dev/null 2&gt;&amp;1 &amp;
svnsync copy-revprops http://slave2.example.com/svn-proxy-sync \
                      file:///var/svn/repos \
                      -r ${REV} &gt; /dev/null 2&gt;&amp;1 &amp;
svnsync copy-revprops http://slave3.example.com/svn-proxy-sync \
                      file:///var/svn/repos \
                      -r ${REV} &gt; /dev/null 2&gt;&amp;1 &amp;
</programlisting>
          </informalexample>

<!--
          <para>The only thing we've left out here is what to do about
            user-level locks (of the <command>svn lock</command>
            variety).  Locks are enforced by the master server during
            commit operations; but all the information about locks is
            distributed during read operations such as <command>svn
            update</command> and <command>svn status</command> by the
            slave server.  As such, a fully functioning proxy setup
            needs to perfectly replicate lock information from the
            master server to the slave servers.  Unfortunately, most
            of the mechanisms that one might employ to accomplish this
            replication fall short in one way or
            another<footnote><para><ulink
            url="http://subversion.tigris.org/issues/show_bug.cgi?id=3457"
            /> tracks these problems.</para></footnote>.  Many teams
            don't use Subversion's locking features at all, so this
            may be a nonissue for you.  Sadly, for those teams which
            do use locks, we have no recommendations on how to
            gracefully work around this shortcoming.</para>
-->
          <para>Das Einzige, was wir hier ausgelassen haben, ist die
            Behandlung von Sperren auf Anwenderebene (der Sorte
            <command>svn lock</command>). Sperren werden vom
            Master-Server während der Übergabeoperationen
            durchgesetzt; alle Informationen zu Sperren werden jedoch
            während Leseoperationen wie <command>svn
            update</command> und <command>svn status</command> durch
            den Slave-Server verteilt. An und für sich müsste eine
            voll funktionsfähige Proxy-Umgebung die Sperrinformationen
            vom Master-zum Slave-Server perfekt replizieren. Leider
            sind die meisten der hierfür eingesetzten Mechanismen auf
            die eine oder andere Art
            unzureichend<footnote><para><ulink
            url="http://subversion.tigris.org/issues/show_bug.cgi?id=3457"
            /> verfolgt diese Probleme.</para></footnote>. Viele
            Teams verwenden die Sperrfunktionalität von Subversion
            überhaupt nicht, so dass es Sie gar nicht betreffen
            könnte. Leider können wir den Teams, die Sperren
            verwenden, keine Empfehlungen aussprechen, wie diese
            Schwäche umgangen werden kann.</para>

        </sect4>

        <sect4 id="svn.serverconfig.httpd.extra.writethruproxy.caveats">
<!--
          <title>Caveats</title>
-->
          <title>Warnungen</title>
<!--
          <para>Your master/slave replication system should now be
            ready to use.  A couple of words of warning are in order,
            however.  Remember that this replication isn't entirely
            robust in the face of computer or network crashes.  For
            example, if one of the automated
            <command>svnsync</command> commands fails to complete for
            some reason, the slaves will begin to fall behind.  For
            example, your remote users will see that they've committed
            revision 100, but then when they run <command>svn
            update</command>, their local server will tell them that
            revision 100 doesn't yet exist!  Of course, the problem
            will be automatically fixed the next time another commit
            happens and the subsequent <command>svnsync</command> is
            successful&mdash;the sync will replicate all waiting
            revisions.  But still, you may want to set up some sort of
            out-of-band monitoring to notice synchronization failures
            and force <command>svnsync</command> to run when things go
            wrong.</para>
-->

          <para>Nun sollte Ihr Master-Slave-Replizierungssystem
            einsatzbereit sein. An dieser Stelle sind einige Worte zur
            Warnung angebracht. Bedenken Sie, dass diese Replizierung
            nicht vollständig robust gegenüber Rechner- und
            Netzwerkausfällen ist. Wenn beispielsweise einer der
            automatisierten <command>svnsync</command>-Befehle aus
            irgendeinem Grund nicht vollständig abgeschlossen wird,
            beginnen die Slaves, hinterher zu hinken. Ihre entfernten
            Anwender werden sehen, dass sie Revision 100 übertragen
            haben; wenn sie allerdings <command>svn update</command>
            aufrufen, wird ihr lokaler Server ihnen mitteilen, dass
            Revision 100 noch nicht existiert! Natürlich wird das
            Problem automatisch mit der nächsten Übergabe behoben wenn
            das folgende <command>svnsync</command> erfolgreich ist
            &ndash; alle wartenden Revisionen werden dann repliziert.
            Trotzdem möchten Sie vielleicht eine zusätzliche
            Überwachung einrichten, um auf Synchronisierungsfehler
            hingewiesen zu werden, damit Sie in diesem Fall
            <command>svnsync</command> erneut aufrufen können.</para>

<!--
          <para>Another limitation of the write-through proxy
            deployment model involves version mismatches&mdash;of the
            version of Subversion which is installed, that
            is&mdash;between the master and slave servers.  Each new
            release of Subversion may (and often does) add new
            features to the network protocol used between the clients
            and servers.  Since feature negotiation happens against
            the slave, it is the slave's protocol version and feature
            set which is used.  But write operations are passed
            through to the master server quite literally.  Therefore,
            there is a risk that the slave server will answer a
            feature negotiation request from the client in way that is
            true for the slave, but untrue for the master if the
            master is running an older version of Subversion.  This
            could result in the client trying to use a new feature
            that the master doesn't understand, and failing.</para>
-->
          <para>Eine weitere Einschränkung des Modells eines
            durchreichenden Proxy-Einsatzes betrifft nicht
            übereinstimmende Versionen &ndash; und zwar der
            installierten Subversion-Version &ndash; zwischen dem
            Master und den Slave-Servern. Jede neue Veröffentlichung
            von Subversion kann dem Netzwerkprotokoll, das zwischen
            den Clients und den Servern verwendet wird neue
            Funktionalität hinzufügen (und macht dies auch oftmals).
            Da die Aushandlung der Funktionalität mit dem Slave
            erfolgt, wird hier das Protokoll und der
            Funktionalitätsumfang des Slaves benutzt. Allerdings
            werden Schreiboperationen ziemlich wörtlich an den
            Master-Server weitergereicht. Daher besteht die
            Gefahr, dass der Slave-Server eine Funktionalitäts-Anfrage
            auf eine Art beantwortet, die für den Slave zutrifft, für
            den Master aber nicht, sofern er eine ältere Version von
            Subversion betreibt. Das kann dazu führen, dass der Client
            eine neue Funktionalität verwenden möchte, die der Master
            nicht versteht, und somit zu einem Fehler.</para>

<!--
          <para>Subversion 1.8 helps to mitigate this problem via the
            introduction of a new Apache configuration
            directive, <literal>SVNMasterVersion</literal>.  By
            configuring each of your slave servers
            with <literal>SVNMasterVersion</literal> set to the
            release version of the Subversion instance which is
            running on your master server, the slave servers can more
            accurately negotiate feature support with the
            client.</para>
-->
          <para>Subversion 1.8 hilft, dieses Problem durch die
            Einführung einer neuen Apache Konfigurations-Direktive zu
            entschärfen: <literal>SVNMasterVersion</literal>. Indem
            Sie jeden Ihrer Slave-Server so konfigurieren, dass
            <literal>SVNMasterVersion</literal> auf die Version der
            Subversion-Instanz gesetzt wird, die auf dem Master-Server
            läuft, können die Slave-Server viel genauer die
            unterstützten Funktionalitäten mit dem Client
            aushandeln.</para>

<!--
          <para>Unfortunately, Subversion 1.7 doesn't offer
            the <literal>SVNMasterVersion</literal> configuration
            directive and is known to have some specific problems
            along these lines.  If you are deploying a Subversion 1.7
            slave server in front of a pre-1.7 master, you'll want to
            configure your slave server's
            Subversion <literal>&lt;Location&gt;</literal> block with
            the <literal>SVNAdvertiseV2Protocol Off</literal>
            directive.</para>
-->
          <para>Leider unterstützt Subversion 1.7 die
            Konfigurations-Direktive
            <literal>SVNMasterVersion</literal> nicht und hat
            bekanntermaßen einige Probleme in diesem Zusammenhang.
            Falls Sie einen Slave mit Subversion 1.7 vor einem Master
            mit einer älteren Version als 1.7 betreiben, sollten Sie
            den Subversion <literal>&lt;Location&gt;</literal>-Block
            Ihres Slave-Servers mit der Direktive
            <literal>SVNAdvertiseV2Protocol Off</literal>
            konfigurieren.</para>

          <tip>
<!--
            <para>For the best results possible, try to run the same
              version of Subversion on your master and slave
              servers.</para>
-->
            <para>Für ein bestmögliches Ergebnis sollten Sie
              versuchen, dieselbe Version von Subversion auf dem
              Master- und Slave-Server laufen zu lassen.</para>
          </tip>

          <sidebar>
<!--
            <title>Can We Set Up Replication with svnserve?</title>
-->
            <title>Können wir eine Replizierung mit svnserve aufsetzen?</title>

<!--
            <para>If you're using <command>svnserve</command> instead
              of Apache as your server, you can certainly configure
              your repository's hook scripts to invoke
              <command>svnsync</command> as we've shown here, thereby
              causing automatic replication from master to slaves.
              Unfortunately, at the time of this writing there is no way to
              make slave <command>svnserve</command> servers
              automatically proxy write requests back to the master
              server.  This means your users would only be able to
              check out read-only working copies from the slave
              servers.  You'd have to configure your slave servers to
              disallow write access completely.  This might be useful
              for creating read-only <quote>mirrors</quote> of popular
              open source projects, but it's not a transparent
              proxying system.</para>
          </sidebar>

-->
            <para>Falls Sie <command>svnserve</command> statt Apache
              als Server verwenden, können Sie sicherlich die
              Hook-Skripte Ihres Projektarchivs dergestalt
              konfigurieren, dass sie <command>svnsync</command> wie
              hier gezeigt aufrufen und somit eine Replizierung vom
              Master zu den Slaves bewirken. Leider besteht zum
              gegenwärtigen Zeitpunkt nicht die Möglichkeit,
              Slave-<command>svnserve</command>-Server dazu zu
              veranlassen, Schreibanfragen automatisch an den Master
              weiterzuleiten. Das bedeutet, dass Ihre Anwender nur
              Lesekopien von den Slave-Servern auschecken können. Sie
              müssten Ihre Slave-Server so konfigurieren, dass sie
              Schreibanfragen vollständig verbieten. Das könnte für
              die Bereitstellung von <quote>Spiegeln</quote> mit
              Lesezugriff beliebter Open-Source-Projekte nützlich
              sein, jedoch stellt es kein transparentes Proxy-System
              dar.</para>
          </sidebar>

        </sect4>
      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.httpd.extra.other">
<!--
        <title>Other Apache features</title>
-->
        <title>Andere Funktionen von Apache</title>

<!--
        <para>Several of the features already provided by Apache in
          its role as a robust web server can be leveraged for
          increased functionality or security in Subversion as well.
          The Subversion client is able to use SSL (the Secure Sockets
          Layer, discussed earlier).  If your Subversion client is
          built to support SSL, it can access your Apache server
          using <literal>https://</literal> and enjoy a high-quality
          encrypted network session.</para>

-->
        <para>Einige der Funktionen, die Apache als robuster Webserver
          mitbringt, können auch zur Verbesserung der Funktionalität
          und Sicherheit in Subversion verwendet werden. Der
          Subversion-Client kann SSL (den bereits besprochenen Secure
          Sockets Layer) verwenden. Falls ihr Subversion-Client mit
          SSL-Unterstützung gebaut wurde, kann er auf Ihren
          Apache-Server mit <literal>https://</literal> zugreifen und
          sich einer verschlüsselten Netzwerksitzung von hoher
          Qualität erfreuen.</para>

<!--
        <para>Equally useful are other features of the Apache and
          Subversion relationship, such as the ability to specify a
          custom port (instead of the default HTTP port 80) or a
          virtual domain name by which the Subversion repository
          should be accessed, or the ability to access the repository
          through an HTTP proxy.</para>

-->
        <para>Gleichermaßen nützlich sind andere Funktionen der
          Beziehung zwischen Apache und Subversion, wie etwa die
          Möglichkeit, einen besonderen Port zu spezifizieren (statt
          des HTTP Standard-Ports 80), oder einen virtuellen
          Domain-Namen, unter dem das Subversion-Projektarchiv
          erreichbar sein soll, oder die Möglichkeit, das
          Projektarchiv über einen HTTP-Proxy zu erreichen.</para>

<!--
        <para>Finally, because <command>mod_dav_svn</command> is
          speaking a subset of the WebDAV/DeltaV protocol, it's
          possible to access the repository via third-party DAV
          clients.  Most modern operating systems (Win32, OS X, and
          Linux) have the built-in ability to mount a DAV server as a
          standard network <quote>shared folder.</quote> This is a
          complicated topic, but also wondrous when implemented.  For
          details, read <xref linkend="svn.webdav"/>.</para>

-->
        <para>Da <command>mod_dav_svn</command> eine Teilmenge des
          WebDAV/DeltaV-Protokolls spricht, ist es möglich, auf das
          Projektarchiv über DAV-Clients von Drittanbietern
          zuzugreifen. Die meisten modernen Betriebssysteme (Win32, OS
          X und Linux) besitzen die eingebaute Fähigkeit, einen
          DAV-Server als eine Standard-Netz-<quote>Freigabe</quote>
          einzuhängen. Das ist eine komplizierte Angelegenheit, doch
          ebenso erstaunlich, wenn es implementiert ist. Zu
          Einzelheiten, siehe <xref linkend="svn.webdav"/>.</para>

<!--
        <para>Note that there are a number of other small tweaks one
          can make to <command>mod_dav_svn</command> that perhaps do
          not merit extensive coverage.  For those interested,
          however, we provide a complete list of
          all <filename>httpd.conf</filename> directives
          to which <command>mod_dav_svn</command> responds in
          <xref linkend="svn.serverconfig.httpd.ref.mod_dav_svn"
          />.</para>
-->
        <para>Beachten Sie, dass es noch eine Anzahl weiterer kleiner
          Schräubchen gibt, an denen man bei
          <command>mod_dav_svn</command> drehen kann, die aber einer
          ausführlichen Behandlung nicht Wert sind. Für diejenigen,
          die es interessiert, stellen wir jedoch eine
          vollständige Liste aller <filename>httpd.conf</filename>
          Direktiven, auf die <command>mod_dav_svn</command> reagiert,
          unter
          <xref linkend="svn.serverconfig.httpd.ref.mod_dav_svn"/> zur
          Verfügung.</para>

      </sect3>
    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.httpd.ref">
<!--
      <title>Subversion Apache HTTP Server Configuration Reference</title>
-->
      <title>Subversion Apache HTTP-Server Konfigurations~Referenz</title>

<!--
      <para>In the previous sections, we've mentioned numerous
        directives that administrators can use in their
        <filename>httpd.conf</filename> files to enable and configure
        their Subversion server offering, introducing each directive
        as we also introduce the functionality it toggles.  In this
        section, we'll quickly summarize <emphasis>all</emphasis> the
        configuration directives supported by both of the Apache HTTP
        Server modules which are provided as part of the standard
        Subversion distribution.</para>
-->
      <para>In den vorhergehenden Abschnitten erwähnten wir eine Vielzahl an
        Direktiven, die Administratoren in Ihren
        <filename>httpd.conf</filename>-Dateien verwenden können, um
        die Angebote ihres Subversion-Servers zu ermöglichen und zu
        konfigurieren, wobei wir bei der Einführung jeder Direktive
        auch die Funktionalität vorstellten, die dadurch
        umgeschaltet wird. In diesem Abschnitt werden wir schnell 
        <emphasis>alle</emphasis> Direktiven zusammenfassen, die
        von beiden
        Apache HTTP-Server-Modulen unterstützt werden, die als Teil
        des Standardpaketes von Subversion mitgeliefert werden.</para>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.httpd.ref.mod_dav_svn">
<!--
        <title>mod_dav_svn configuration directives</title>
-->
        <title>mod_dav_svn Konfigurations-Direktiven</title>

<!--
        <para>The following configuration directives are recognized
          and supported by Subversion's Apache HTTP Server module,
          <command>mod_dav_svn</command>.</para>
-->
        <para>Die folgenden Konfigurations-Direktiven werden von
          Subversions Apache HTTP-Server-Modul
          <command>mod_dav_svn</command> erkannt und
          unterstützt.</para>

        <variablelist>

          <varlistentry>
            <term><literal>DAV svn</literal></term>
            <listitem>

<!--
              <para>Must be included in any
                <literal>Directory</literal> or <literal>Location</literal>
                block for a Subversion repository.  It
                tells <command>httpd</command> to use the Subversion
                backend for <command>mod_dav</command> to handle all
                requests.</para>
-->
              <para>Muss in jedem <literal>Directory</literal>- oder
                <literal>Location</literal>-Abschnitt für ein
                Subversion-Projektarchiv enthalten sein. Sie fordert
                <command>httpd</command> auf, das Subversion-Backend
                von <command>mod_dav</command> zur Auftragsabwicklung
                zu verwenden.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNActivitiesDB
              <replaceable>directory-path</replaceable></literal></term>
            <listitem>

<!--
              <para>Specifies the location in the filesystem where the
                activities database should be stored.  By default,
                <command>mod_dav_svn</command> creates and uses a
                directory in the repository
                called <filename>dav/activities.d</filename>.  The
                path specified with this option must be an absolute
                path.</para>
-->
              <para>Bestimmt den Ort im Dateisystem, an dem die
                Datenbank für Aktivitäten abgelegt werden soll.
                Standardmäßig erzeugt und verwendet
                <command>mod_dav_svn</command> ein Verzeichnis im
                Projektarchiv namens
                <filename>dav/activities.d</filename>. Der durch diese
                Option angegebene Pfad muss absolut sein.</para>

<!--
              <para>If specified for
                an <literal>SVNParentPath</literal>
                area, <command>mod_dav_svn</command> appends the
                basename of the repository to the path specified here.
                For example:</para>
-->

              <para>Falls ein <literal>SVNParentPath</literal>-Bereich
                angegeben wurde, hängt <command>mod_dav_svn</command>
                den Basisnamen des Projektarchivs an diesen Pfad an,
                beispielsweise:</para>

              <informalexample>
          <screen>
&lt;Location /svn&gt;
  DAV svn

<!--
  # any "/svn/foo" URL will map to a repository in 
  # /net/svn.nfs/repositories/foo
-->
  # jeder "/svn/foo" URL wird auf ein Projektarchiv in
  # /net/svn.nfs/repositories/foo abgebildet
  SVNParentPath         "/net/svn.nfs/repositories"

<!--
  # any "/svn/foo" URL will map to an activities db in
  #  /var/db/svn/activities/foo
-->
  # jeder "/svn/foo" URL wird auf eine Aktivitäten-Datenbank in
  #  /var/db/svn/activities/foo abgebildet
  SVNActivitiesDB       "/var/db/svn/activities"
&lt;/Location&gt;
</screen>
        </informalexample>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNAdvertiseV2Protocol On|Off</literal></term>
            <listitem>

<!--
              <para>New to Subversion 1.7, this toggles
                whether <command>mod_dav_svn</command> advertises its
                support for the new version of its HTTP protocol also
                introduced in that version.  Most admins will not wish
                to use this directive (which is <literal>On</literal>
                by default), choosing instead to enjoy the performance
                benefits that the new protocol offers.  However, when
                configuring a server as a write-through proxy to
                another server which does not support the new
                protocol, set this directive's value
                to <literal>Off</literal>.</para>
-->
              <para>Neu in Subversion 1.7. Schaltet die
                Benachrichtigung ein oder aus, dass
                <command>mod_dav_svn</command> die neue Version seines
                ebenfalls in dieser Version vorgestellten
                HTTP-Protokolls unterstützt. Die meisten
                Administratoren werden diese Direktive nicht verwenden
                wollen (deren Standardwert <literal>On</literal> ist),
                da sie lieber die Leistungsverbesserung des neuen
                Protokolls nutzen möchten. Falls jedoch ein Server als
                Durchschreib-Proxy für einen anderen Server, der das
                neue Protokoll nicht unterstützt, eingerichtet werden
                soll, ist der Wert dieser Direktive auf
                <literal>Off</literal> zu setzen.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNAllowBulkUpdates On|Off|Prefer</literal></term>
            <listitem>

<!--
              <para>Toggles support for all-inclusive responses to
                update-style requests.  Subversion clients use
                <literal>REPORT</literal> requests to get information
                about directory tree checkouts and updates from
                <command>mod_dav_svn</command>.  They can ask the
                server to send that information in one of two ways:
                with the entirety of the tree's information in one
                massive (bulk) response, or with a
                <firstterm>skelta</firstterm> (a skeletal
                representation of a tree delta) which contains just
                enough information for the client to know what
                <emphasis>additional</emphasis> data to fetch from the
                server using subsequent requests.  When this directive
                is included with a value of <literal>Off</literal>,
                <command>mod_dav_svn</command> will only ever respond
                to these <literal>REPORT</literal> requests with
                skelta responses, regardless of the type of responses
                requested by the client.</para>
-->
              <para>Ändert die Unterstützung für vollständige
                Antworten auf Anfragen im
                Stil von Aktualisierungen. Subversion-Clients
                verwenden <literal>REPORT</literal>-Anfragen, um von
                <command>mod_dav_svn</command> Informationen über
                Checkouts und Aktualisierungen von Verzeichnisbäumen
                zu erhalten. Dabei kann vom Server verlangt werden,
                diese Information auf zwei mögliche Weisen zu senden:
                entweder mit den Informationen zum gesamten Teilbaum
                in einer umfangreichen Antwort (Masse) oder als ein
                <firstterm>Skelta</firstterm> (eine skelettierte
                Repräsentation eines Baum-Deltas), das dem Client
                gerade genug Informationen liefert, so dass er weiß,
                welche <emphasis>zusätzlichen</emphasis> Daten er
                mittels weiterer Anfragen vom Server holen muss. Wird
                diese Direktive mit dem
                Wert <literal>Off</literal> versehen, werden
                <literal>REPORT</literal>-Anfragen von
                <command>mod_dav_svn</command> ausschließlich mit
                Skeltas beantwortet, egal welche Art der Antwort vom
                Client verlangt wurde.</para>

<!--
              <para>The default value of this directive is
                <literal>On</literal>, which permits the server to
                reply to update requests using the style of response
                (bulk or skelta) requested by the client.  Beginning
                in Subversion 1.8, this directive also accepts a value
                of <literal>Prefer</literal>, which is similar
                to <literal>On</literal> but additionally causes the
                server to announce to clients that it
                <emphasis>prefers</emphasis> to handle bulk update
                requests.</para>
-->
              <para>Der Standardwert dieser Direktive ist
                <literal>On</literal>, um dem Server zu erlauben, auf
                Aktualisierungs-Anfragen im vom Client gewünschten
                Stil (Masse oder Skelta) zu antworten. Beginnend mit
                Subversion 1.8, akzeptiert diese Direktive auch den
                Wert <literal>Prefer</literal>, der ähnlich dem zu
                <literal>On</literal> ist, jedoch zusätzlich dazu
                führt, dass der Server Clients mitteilt, dass er
                Massen-Aktualisierungs-Anfragen
                <emphasis>bevorzugt</emphasis>.</para>
<!--
              <para>Most folks won't need to use this directive at
                all.  It primarily exists for administrators who
                wish&mdash;for security or auditing reasons&mdash;to
                force Subversion clients to fetch individually all the
                files and directories needed for updates and
                checkouts, thus leaving an audit trail of
                <literal>GET</literal> and <literal>PROPFIND</literal>
                requests in Apache's logs.</para>
-->
              <para>Die Meisten werden diese Direktive überhaupt nicht
                benötigen. Sie existiert hauptsächlich für
                Administratoren, die &ndash; aus Gründen der
                Sicherheit oder Nachprüfbarkeit &ndash;
                Subversion-Clients dazu zwingen möchten, alle für
                Checkouts oder Aktualisierungen benötigten Dateien und
                Verzeichnisse individuell abzurufen, um somit eine
                Spur aus <literal>GET</literal>- und
                <literal>PROPFIND</literal>-Anfragen in den
                Protokolldateien von Apache zu hinterlassen.</para>

            </listitem>
          </varlistentry>
          <varlistentry>
            <term><literal>SVNAutoversioning On|Off</literal></term>
            <listitem>

<!--
              <para>When its value is
                <literal>On</literal>, allows write requests from
                WebDAV clients to result in automatic commits.  A
                generic log message is auto-generated and attached to
                each revision.  If you enable autoversioning, you'll
                likely want to set <literal>ModMimeUsePathInfo
                On</literal> so that <command>mod_mime</command> can
                set <literal>svn:mime-type</literal> to the correct
                MIME type automatically (as best as
                <command>mod_mime</command> is able to, of course).
                For more information, see <xref
                linkend="svn.webdav"/>.  The default value of this
                directive is <literal>Off</literal>.</para>
-->
              <para>Wenn der Wert <literal>On</literal> ist, führen
                Schreibanfragen von WebDAV-Clients zu automatischen
                Übergaben ins Projektarchiv. Eine automatisch erzeugte,
                generische Protokollnachricht wird mit jeder Revision
                verknüpft. Falls Sie automatische Versionierung
                ermöglichen, werden Sie sicherlich auch
                <literal>ModMimeUsePathInfo On</literal> setzen
                wollen, so dass <command>mod_mime</command>
                <literal>svn:mime-type</literal> automatisch auf den
                richtigen MIME-Typen setzen kann (natürlich nur so
                gut, wie es <command>mod_mime</command> kann).  Für
                weitere Informationen, siehe <xref
                linkend="svn.webdav"/>.  Der Standardwert dieser
                Direktive ist <literal>Off</literal>.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNCacheFullTexts On|Off</literal></term>
            <listitem>

<!--
              <para>When set to <literal>On</literal>, this tells
                Subversion to cache content fulltexts if sufficient
                in-memory cache is available, which could offer a
                significant performance benefit to the server.  (See
                also the <literal>SVNInMemoryCacheSize</literal>
                directive.)  The default value of this directive
                is <literal>Off</literal>.</para>
-->
              <para>Der Wert <literal>On</literal> teilt Subversion
                mit, Volltextinhalt zwischenzuspeichern, sofern
                ausreichend Zwischenspeicherplatz vorhanden ist, was
                dem Server einen deutlichen Leistungsvorteil
                bescheren könnte. (Siehe hierzu auch die Direktive
                <literal>SVNInMemoryCacheSize</literal>.) Der
                Standardwert dieser Direktive ist
                <literal>Off</literal>.</para>

            </listitem>
          </varlistentry>
          <varlistentry>
            <term><literal>SVNCacheTextDeltas On|Off</literal></term>
            <listitem>

<!--
              <para>When set to <literal>On</literal>, this tells
                Subversion to cache content deltas if sufficient
                in-memory cache is available, which could offer a
                significant performance benefit to the server.  (See
                also the <literal>SVNInMemoryCacheSize</literal>
                directive.)  The default value of this directive
                is <literal>Off</literal>.</para>
-->
              <para>Der Wert <literal>On</literal> teilt Subversion
                mit, Deltas von Inhalten zwischenzuspeichern, sofern
                ausreichend Zwischenspeicherplatz vorhanden ist, was
                dem Server einen deutlichen Leistungsvorteil
                bescheren könnte. (Siehe hierzu auch die Direktive
                <literal>SVNInMemoryCacheSize</literal>.) Der
                Standardwert dieser Direktive ist
                <literal>Off</literal>.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNCompressionLevel
              <replaceable>level</replaceable></literal></term>
            <listitem>

<!--
              <para>Specifies the compression level used when sending
                file content over the network.  A value
                of <literal>0</literal> disables compression
                altogether, and <literal>9</literal> is the maximum
                value.  <literal>5</literal> is the default
                value.</para>
-->
              <para>Spezifiziert den Kompressionsgrad wenn
                Dateiinhalte über das Netz gesendet werden. Der Wert
                <literal>0</literal> unterbindet die Kompression
                vollständig und <literal>9</literal> ist der
                Maximalwert.  <literal>5</literal> ist der
                Standardwert.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNHooksEnv
              <replaceable>file-path</replaceable></literal></term>
            <listitem>

<!--
              <para>Specifies the location of the Subversion
                repository hook script environment configuration file.
                This file is used to describe the initial environment
                in which repository hook scripts are executed.  For
                more on this feature, see
                <xref linkend="svn.reposadmin.hooks.configuration"
                />.</para>
-->
              <para>Gibt den Ort der Konfigurationsdatei für die
                Subversion Hook-Script-Umgebung an. Diese Datei wird
                verwendet, um die anfängliche Umgebung zu beschreiben,
                in der Hook-Skripte ausgeführt werden. Für weitere
                Informationen hierzu, siehe 
                <xref linkend="svn.reposadmin.hooks.configuration"
                />.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNIndexXSLT
              <replaceable>directory-path</replaceable></literal></term>
            <listitem>

<!--
              <para>Specifies the URI of an XSL transformation for
                directory indexes.  This directive is optional.</para>
-->
              <para>Spezifiziert den URI einer XSL-Transformation für
                Verzeichnisindexe. Diese Direktive ist optional.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNInMemoryCacheSize
              <replaceable>size</replaceable></literal></term>
            <listitem>

<!--
              <para>Specifies the maximum size (in kbytes) per process
                of Subversion's in-memory object cache.  The default
                value is <literal>16384</literal>; use a value
                of <literal>0</literal> to deactivate this cache
                altogether.</para>
-->
              <para>Spezifiziert die Maximalgröße des
                Zwischenspeichers von Subversion (in kBytes) pro
                Prozess. Der Standardwert ist
                <literal>16384</literal>; verwenden Sie den Wert
                <literal>0</literal>, um die Zwischenspeicherung
                vollständig zu unterbinden.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNListParentPath On|Off</literal></term>
            <listitem>

<!--
              <para>When set to <literal>On</literal>, allows
                a <literal>GET</literal>
                of <literal>SVNParentPath</literal>, which results in
                a listing of all repositories under that path.  The
                default setting is
                <literal>Off</literal>.</para>
-->
              <para>Wenn sie auf <literal>On</literal> gesetzt ist,
                wird ein <literal>GET</literal> von
                <literal>SVNParentPath</literal> erlaubt, was zu einer
                Auflistung aller Projektarchive unter diesem Pfad führt.
                Der Standardwert ist <literal>Off</literal>.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNMasterURI
              <replaceable>url</replaceable></literal></term>
            <listitem>

<!--
              <para>Specifies a URI to the master Subversion
                repository (used for a write-through proxy).</para>
-->
              <para>Der URI des Master-Subversion-Projektarchivs
                (verwendet für einen Proxy, über den geschrieben
                wird).</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNMasterVersion
              <replaceable>X.Y</replaceable></literal></term>
            <listitem>

<!--
              <para>Specifies the release version number of the
                Subversion instance which is serving the master
                repository (used for a write-through proxy).</para>
-->
              <para>Gibt die Versionsnummer der Subversion-Instanz an,
                die das Master-Projektarchiv betreut (verwendet für
                einen Proxy mit Schreib-Weiterleitung).</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNParentPath
              <replaceable>directory-path</replaceable></literal></term>
            <listitem>

<!--
              <para>Specifies the location in the filesystem of a
                parent directory whose child directories are
                Subversion repositories.  In a configuration block for
                a Subversion repository, either this directive or
                <literal>SVNPath</literal> must be present, but not
                both.</para>
-->
              <para>Spezifiziert den Ort im Dateisystem, an dem ein
                Elternverzeichnis liegt, dessen Kindverzeichnisse
                Subversion-Projektarchive sind. In einem
                Konfigurationsblock für ein Subversion-Projektarchiv muss
                entweder diese Direktive oder
                <literal>SVNPath</literal> vorhanden sein, jedoch
                nicht beide.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNPath
              <replaceable>directory-path</replaceable></literal></term>
            <listitem>

<!--
              <para>Specifies the location in the
                filesystem for a Subversion repository's files.  In a
                configuration block for a Subversion repository,
                either this directive or
                <literal>SVNParentPath</literal> must be present, but
                not both.</para>
-->
              <para>Gibt den Ort im Dateisystem an, an dem die Dateien
                eines Subversion-Projektarchivs liegen. In einem
                Konfigurationsblock für ein Subversion-Projektarchiv muss
                entweder diese Direktive oder
                <literal>SVNParentPath</literal> vorhanden sein,
                jedoch nicht beide.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNPathAuthz On|Off|short_circuit</literal></term>
            <listitem>

<!--
              <para>Controls path-based authorization by enabling
                subrequests (<literal>On</literal>), disabling
                subrequests (<literal>Off</literal>; see <xref
                linkend="svn.serverconfig.httpd.authz.pathauthzoff"/>),
                or querying <command>mod_authz_svn</command> directly
                (<literal>short_circuit</literal>).  The default
                value of this directive is <literal>On</literal>.</para>
-->
              <para>Kontrolliert pfad-basierte Autorisierung, indem
                Unteranfragen ermöglicht (<literal>On</literal>) oder
                abgeschaltet (<literal>Off</literal>; siehe <xref
                linkend="svn.serverconfig.httpd.authz.pathauthzoff"/>)
                werden oder bei <command>mod_authz_svn</command>
                direkt nachgefragt wird
                (<literal>short_circuit</literal>). Der Standardwert
                dieser Direktive ist <literal>On</literal>.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNReposName
              <replaceable>name</replaceable></literal></term>
            <listitem>

<!--
              <para>Specifies the name of a Subversion repository for
                use in <literal>HTTP GET</literal> responses.  This
                value will be prepended to the title of all directory
                listings (which are served when you navigate to a
                Subversion repository with a web browser).  This
                directive is optional.</para>
-->
              <para>Spezifiziert den Namen eines
                Subversion-Projektarchivs zur Verwendung für
                <literal>HTTP GET</literal>-Antworten. Dieser Wert
                wird dem Titel aller Verzeichnisauflistungen
                vorangestellt (die übertragen werden, wenn Sie mit
                einem Browser zu einem Subversion-Projektarchiv
                navigieren). Diese Direktive ist optional.</para>

               <note>
<!--
                 <para>Subversion will not use the repository name as
                   configured via this directive when trying to match
                   rules in access control files.  The repository names
                   used in that file's syntax are always derived from
                   the repository URL.  See
                   <xref linkend="svn.serverconfig.pathbasedauthz.getting-started"
                   /> for details.</para>
-->
                 <para>Beim Suchen nach passenden Regeln in
                   Zugriffskontroll-Dateien wird Subversion den über diese
                   Direktive konfigurierten Namen des Projektarchivs nicht
                   verwenden. Die in der Syntax dieser Datei verwendeten
                   Projektarchiv-Namen werden stets vom URL des Projektarchivs
                   abgeleitet. Zu Details, siehe
                   <xref linkend="svn.serverconfig.pathbasedauthz.getting-started"
                   />.</para>
               </note>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNSpecialURI
              <replaceable>component</replaceable></literal></term>
            <listitem>

<!--
              <para>Specifies the URI component (namespace) for
                special Subversion resources.  The default is
                <literal>!svn</literal>, and most
                administrators will never use this directive.  Set
                this only if there is a pressing need to have a file
                named <filename>!svn</filename> in your repository.
                If you change this on a server already in use, it will
                break all of the outstanding working copies, and your
                users will hunt you down with pitchforks and flaming
                torches.</para>
-->
              <para>Spezifiziert die URI-Komponente (Namensraum) für
                besondere Subversion-Ressourcen. Der Standardwert ist
                <literal>!svn</literal>, und die meisten
                Administratoren werden diese Direktive nie verwenden.
                Setzen Sie sie nur, falls die dringende Notwendigkeit
                besteht, eine Datei namens <filename>!svn</filename>
                in Ihrem Projektarchiv zu haben. Falls Sie diese
                Direktive auf einem Server ändern, der bereits in
                Gebrauch ist, werden alle offenstehenden Arbeitskopien
                unbrauchbar gemacht, und Ihre Benutzer werden Sie mit
                Mistgabeln und Fackeln zur Strecke bringen.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNUseUTF8 On|Off</literal></term>
            <listitem>

<!--
              <para>When set to <literal>On</literal>,
                <command>mod_dav_svn</command> will communicate with
                hook scripts using repository root paths encoded in
                UTF-8, and will expect those scripts to likewise
                generate output (such as error messages) encoded in
                UTF-8.  The default value of this option
                is <literal>Off</literal>, which means
                that <command>mod_dav_svn</command> assumes a 7-bit
                ASCII encoding for its hook script interactions.  This
                option is available as of Subversion 1.8.</para>
-->
              <para>Wenn auf <literal>On</literal> gesetzt,
                kommuniziert <command>mod_dav_svn</command> mit
                Hook-Skripten unter Verwendung von
                Projektarchiv-Wurzel-Pfaden, die UTF-8-kodiert sind
                und erwartet, dass diese Skripte ebenso UTF-8-kodierte
                Ausgaben (etwa Fehlermeldungen) erzeugen. Der
                Standardwert dieser Option ist <literal>Off</literal>,
                was bedeutet, dass <command>mod_dav_svn</command> für
                seine Kommunikation mit Hook-Skripten von einer
                7-Bit-ASCII-Kodierung ausgeht. Diese Option ist seit
                Subversion 1.8 verfügbar.</para>

              <note>
<!--
                <para>Administrators should ensure that the character
                  set and encoding expectations of hook scripts match
                  all the ways they might be invoked.  For example, if
                  one repository is served by both <command>httpd</command>
                  and <command>svnserve</command>, <command>svnserve</command>
                  should also be configured to use UTF-8 (by setting
                  an appropriate locale in its environment) if this
                  option is enabled for <command>mod_dav_svn</command>.
                  Also, local filesystem paths containing non-ASCII
                  characters which will be accessed by those scripts
                  (such as repository root paths) must be properly
                  encoded in the filesystem to match the scripts'
                  expectations.</para>
-->
                <para>Administratoren sollten sicherstellen, dass die
                  Erwartungen bezüglich Zeichensatz und Kodierung von
                  Hook-Skripten zu allen möglichen Aufruf-Szenarien
                  passen. Wenn beispielsweise ein Projektarchiv sowohl
                  von <command>httpd</command> als auch von
                  <command>svnserve</command> bedient wird, sollte
                  <command>svnserve</command> ebenfalls so
                  konfiguriert sein, dass es UTF-8 verwendet (durch
                  Einstellung der passenden Locale in seiner
                  Umgebung), falls diese Option für
                  <command>mod_dav_svn</command> aktiviert ist. Lokale
                  Dateisystem-Pfade mit nicht-ASCII Zeichen, auf die
                  von diesen Skripten zugegriffen wird (wie etwa
                  Projektarchiv-Wurzel-Pfade) müssen passend im
                  Dateisystem kodiert sein, damit sie den Erwartungen
                  der Skripte entsprechen.</para>
              </note>

            </listitem>
          </varlistentry>

        </variablelist>
      </sect3>

      <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
      <sect3 id="svn.serverconfig.httpd.ref.mod_authz_svn">
<!--
        <title>mod_authz_svn configuration directives</title>
-->
        <title>mod_authz_svn Konfigurations-Direktiven</title>

<!--
        <para>The following configuration directives are provided
          by <command>mod_authz_svn</command>, Subversion's path-based
          authorization Apache HTTP Server module.  For an in-depth
          description of using path-based authorization in Subversion,
          see <xref linkend="svn.serverconfig.pathbasedauthz"/>.</para>
-->
        <para>Die folgenden Konfigurations-Direktiven werden geliefert
          von <command>mod_authz_svn</command>, Subversions Apache
          HTTP-Server-Modul für pfad-basierte Autorisierung. Für eine
          erschöpfende Beschreibung der Verwendung pfad-basierter
          Autorisierung in Subversion, siehe
          <xref linkend="svn.serverconfig.pathbasedauthz"/>.</para>

        <variablelist>
   
          <varlistentry>
            <term><literal>AuthzForceUsernameCase Upper|Lower</literal></term>
            <listitem>

<!--
              <para>Set to <literal>Upper</literal>
                or <literal>Lower</literal> to perform case conversion
                of the specified sort on the authenticated username
                before checking it for authorization.  While usernames
                are compared in a case-sensitive fashion against those
                referenced in the authorization rules file, this
                directive can at least normalize variably-cased
                usernames into something consistent.</para>
-->
              <para>Entweder <literal>Upper</literal> oder
                <literal>Lower</literal>, um die entsprechende
                Umwandlung des authentifizierten Anwendernamens vor
                der Autorisierungsprüfung in Klein- oder
                Großschreibung vorzunehmen. Während Anwendernamen
                unter Beachtung der Klein- oder Großschreibung mit
                denjenigen in der Autorisierungs-Regel-Datei
                verglichen werden, kann diese Direktive zumindest
                gemischt geschriebene Anwendernamen in irgendetwas
                konsistentes normalisieren.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>AuthzSVNAccessFile
              <replaceable>file-path</replaceable></literal></term>
            <listitem>

<!--
              <para>Consult <replaceable>file-path</replaceable> for
                access rules describing the permissions for paths in
                Subversion repository.  In a configuration
                block for a Subversion repository or a colletion of repositories,
                either this directive or
                <literal>AuthzSVNReposRelativeAccessFile</literal> can be
                present, but not both.</para>
-->
              <para>Für Zugriffsregeln, die Rechte auf Pfaden im
                Subversion-Projektarchiv beschreiben, soll in
                <replaceable>file-path</replaceable> nachgesehen werden. In
                einem Konfigurations-Block für ein Subversion-Projektarchiv
                oder eine Ansammlung von Projektarchiven kann entweder
                diese Direktive oder
                <literal>AuthzSVNReposRelativeAccessFile</literal>
                verwendet werden, jedoch nicht beide.</para>

<!--
              <para>Beginning with Subversion 1.8,
                <literal>AuthzSVNAccessFile</literal> accepts a URL to a file
                stored inside a Subversion repository&mdash;either the
                same repository to which the access rules are
                being applied, or an entirely different repository.</para>
-->
              <para>Beginnend mit Subversion 1.8 akzeptiert
                <literal>AuthzSVNAccessFile</literal> einen URL zu einer
                innerhalb eines Subversion-Projektarchivs gespeicherten
                Datei &ndash; entweder dasselbe Projektarchiv
                auf das die Zugriffsregeln angewendet werden,
                oder ein ganz anderes Projektarchiv.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>AuthzSVNAnonymous On|Off</literal></term>
            <listitem>

<!--
              <para>Set to <literal>Off</literal> to disable two
                special-case behaviours of this module: interaction
                with the <literal>Satisfy Any</literal> directive and
                enforcement of the authorization policy even when no
                <literal>Require</literal> directives are present.
                The default value of this directive is
                <literal>On</literal>.</para>
-->
              <para>Um zwei besondere Verhaltensweisen dieses Moduls
                zu unterbinden, sollte diese Direktive auf
                <literal>Off</literal> gesetzt werden: Die Interaktion
                mit der <literal>Satisfy Any</literal>-Anweisung und
                das Durchsetzen des Autorisierungsverfahrens auch
                dann, wenn keine <literal>Require</literal>-Direktiven
                vorhanden sind. Der Standardwert dieser Direktive ist
                <literal>On</literal>.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>AuthzSVNAuthoritative On|Off</literal></term>
            <listitem>

<!--
              <para>Set to <literal>Off</literal> to allow access
                control to be passed along to lower modules.  The
                default value of this directive is
                <literal>On</literal>.</para>
-->
              <para>Auf <literal>Off</literal> gesetzt, wird die
                Weiterleitung der Zugriffskontrolle an tiefere Module
                erlaubt. Der Standardwert dieser Direktive ist
                <literal>On</literal>.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>AuthzSVNNoAuthWhenAnonymousAllowed On|Off</literal></term>
            <listitem>

<!--
              <para>Set to <literal>On</literal> to suppress
                authentication and authorization for requests which
                anonymous users are allowed to perform.  The default
                value of this directive is
                <literal>On</literal>.</para>
-->
              <para>Auf <literal>On</literal> setzen, um die
                Authentifikation und Autorisierung von Anfragen zu
                unterbinden, die anonyme Benutzer durchführen dürfen.
                Der Standardwert dieser Direktive ist
                <literal>On</literal>.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>AuthzSVNReposRelativeAccessFile
              <replaceable>file-path</replaceable></literal></term>
            <listitem>

<!--
              <para>Consult <replaceable>file-path</replaceable> for
                access rules describing the permissions for paths in
                Subversion repository.  Unlike
                <literal>AuthzSVNAccessFile</literal>, the path specified
                for <literal>AuthzSVNReposRelativeAccessFile</literal> is
                relative to the <filename>/conf</filename> directory in
                the repository on
                filesystem.  In other words, the <replaceable>file-path</replaceable>
                specifies a per repository file that must be accessible by
                the relative path for all repositories in a configuration block.
                In a configuration block for a Subversion repository or a collection
                of repositories either this directive or
                <literal>AuthzSVNAccessFile</literal> can be present, but not both.
                This option is available as of Subversion 1.7.</para>
-->
              <para>Für Zugriffsregeln, die die Rechte auf Pfaden im
                Subversion-Projektarchiv beschreiben, soll unter
                <replaceable>file-path</replaceable> nachgesehen werden.
                Anders als bei <literal>AuthzSVNAccessFile</literal>, ist
                der für <literal>AuthzSVNReposRelativeAccessFile</literal>
                angegebene Pfad relativ zum
                <filename>/conf</filename>-Verzeichnis im Projektarchiv auf
                dem Dateisystem. Mit anderen Worten gibt
                <replaceable>file-path</replaceable> eine Datei pro
                Projektarchiv an, die über den relativen Pfad für alle
                Projektarchive eines Konfigurations-Blocks zugänglich sein
                muss. Im Konfigurations-Block eines
                Subversion-Projektarchivs oder einer Gruppe von
                Projektarchiven kann entweder diese Direktive oder
                <literal>AuthzSVNAccessFile</literal> verwendet werden,
                jedoch nicht beide.  Diese Option ist seit Subversion 1.7
                verfügbar.</para>

<!--
              <para>Beginning with Subversion 1.8,
                <literal>AuthzSVNReposRelativeAccessFile</literal> accepts a
                URL to a file
                stored inside a Subversion repository&mdash;either the
                same repository to which the access rules are
                being applied, or an entirely different repository.</para>
-->
              <para>Beginnend mit Subversion 1.8 akzeptiert
                <literal>AuthzSVNReposRelativeAccessFile</literal> einen URL
                auf eine
                Datei, die innerhalb der Subversion-Projektarchivs
                gespeichert ist &ndash; entweder dasselbe Projektarchiv auf das
                die Zugriffsregeln angewendet werden oder in ein ganz anderes
                Projektarchiv.</para>

            </listitem>
          </varlistentry>

        </variablelist>
      </sect3>

    </sect2>
  </sect1>


  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.serverconfig.pathbasedauthz">

<!--
    <title>Path-Based Authorization</title>
-->
    <title>Pfad-basierte Autorisierung</title>

<!--
    <para>Both Apache and <command>svnserve</command> are capable of
      granting (or denying) permissions to users.  Typically this is
      done over the entire repository: a user can read the repository
      (or not), and she can write to the repository (or not).</para>
-->
    <para>Sowohl Apache als auch <command>svnserve</command> können
      Anwendern Zugriffsrechte gewähren (oder verweigern).
      Normalerweise geschieht das für das gesamte Projektarchiv: ein
      Anwender darf das Projektarchiv lesen (oder auch nicht) und ein
      Anwender darf in das Projektarchiv schreiben (oder auch
      nicht).</para>

<!--
    <para>It's also possible, however, to define finer-grained access
      rules.  One set of users may have permission to write to a
      certain directory in the repository, but not others; another
      directory might not even be readable by all but a few special
      people.  It's even possible to restrict access on a per file
      basis.</para>
-->
    <para>Es ist jedoch ebenfalls möglich, feiner abgestufte
      Zugriffsregeln zu definieren.  Ein Anwender dürfte nur in ein
      bestimmtes Verzeichnis des Projektarchivs schreiben, aber in
      kein anderes; ein weiteres Verzeichnis könnte bis auf wenige
      besondere Personen für niemanden lesbar sein.  Es ist sogar
      möglich, den Zugriff dateiabhängig einzurichten.</para>

<!--
    <para>Both Subversion servers use a common file format to describe
      these path-based access rules.  In this section, we will
      explain that file format, as well how to configure your
      Subversion server to use it for managing path-based
      authorization.</para>
-->
    <para>Beide Subversion-Server verwenden ein gemeinsames
      Dateiformat, um diese pfad-basierten Zugriffsregeln zu
      beschreiben. Im diesem Abschnitt erklären wir sowohl dieses
      Dateiformat als auch, wie Ihr Subversion-Server konfiguriert
      werden muss, damit er für pfad-basierte Autorisierung benutzt
      werden kann.</para>

    <sidebar>
<!--
      <title>Do You Really Need Path-Based Access Control?</title>
-->
      <title>Benötigen Sie wirklich pfad-basierte Zugriffskontrolle?</title>

<!--
      <para>A lot of administrators setting up Subversion for the
        first time tend to jump into path-based access control without
        giving it a lot of thought.  The administrator usually knows
        which teams of people are working on which projects, so it's
        easy to jump in and grant certain teams access to certain
        directories and not others.  It seems like a natural thing,
        and it appeases the administrator's desire to maintain tight
        control of the repository.</para>

-->
      <para>Viele Administratoren, die das erste Mal Subversion
        einrichten, neigen dazu, sich auf die pfad-basierte
        Zugriffskontrolle zu stützen, ohne einen weiteren Gedanken
        darüber zu verschwenden. Gewöhnlicherweise ist einem
        Administrator bekannt, welche Entwicklerteams in den einzelnen
        Projekten arbeiten, so dass es einfach ist, nur bestimmten
        Teams Zugriff auf bestimmte Verzeichnisse zu geben. Es scheint
        eine normale Sache zu sein und kommt dem Wunsch des
        Administrators entgegen, eine strenge Kontrolle über das
        Projektarchiv aufrechtzuerhalten.</para>

<!--
      <para>Note, though, that there are often invisible (and
        visible!) costs associated with this feature.  In the visible
        category, the server needs to do a lot more work to ensure
        that the user has the right to read or write each specific
        path; in certain situations, there's very noticeable
        performance loss.  In the invisible category, consider the
        culture you're creating.  Most of the time, while certain
        users <emphasis>shouldn't</emphasis> be committing changes to
        certain parts of the repository, that social contract doesn't
        need to be technologically enforced.  Teams can sometimes
        spontaneously collaborate with each other; someone may want to
        help someone else out by committing to an area she doesn't
        normally work on.  By preventing this sort of thing at the
        server level, you're setting up barriers to unexpected
        collaboration.  You're also creating a bunch of rules that
        need to be maintained as projects develop, new users are
        added, and so on.  It's a bunch of extra work to
        maintain.</para>

-->
      <para>Bedenken Sie jedoch, dass mit dieser Funktionalität oft
        sichtbare (und unsichtbare) Kosten einhergehen. Zur sichtbaren
        Kategorie gehört die erhebliche Mehrarbeit, die ein Server
        leisten muss, um zu gewährleisten, dass der Anwender das
        entsprechende Lese- oder Schreibrecht für jeden Pfad
        besitzt; in bestimmten Situationen führt das zu spürbaren
        Leistungseinbußen. Zur unsichtbaren Kategorie zählt die
        Kultur, die Sie erzeugen. In den meisten Fällen, in denen
        bestimmte Anwender Änderungen in bestimmte Teile des
        Projektarchivs <emphasis>nicht</emphasis> übertragen sollten,
        bedarf diese soziale Übereinkunft keiner technischen
        Erzwingung. Teams können manchmal spontan miteinander
        arbeiten, jemand könnte jemand anderen aushelfen, indem eine
        Übergabe in einem Bereich erfolgt, in dem ersterer
        normalerweise nicht arbeitet. Wenn solche Dinge serverseitig
        unterbunden werden, entstehen Hindernisse für eine ungeplante
        Zusammenarbeit. Sie erzeugen außerdem eine Menge Regeln, die
        gepflegt werden müssen, da Projekte sich weiterentwickeln,
        neue Anwender hinzukommen usw. Die Verwaltung bedeutet jede
        Menge Mehrarbeit.</para>

<!--
        <para>Remember that this is a version control system!  Even if
        somebody accidentally commits a change to something she
        shouldn't, it's easy to undo the change.  And if a user
        commits to the wrong place with deliberate malice, it's a
        social problem anyway, and that the problem needs to be dealt
        with outside Subversion.</para>

-->
       <para>Vergessen Sie nicht, dass es sich hier um ein
         Versions-Kontroll-System handelt! Selbst falls jemand
         versehentlich eine Änderung dorthin übergibt, wo sie
         eigentlich nicht hin sollte, ist es einfach, die Änderung
         rückgängig zu machen. Und sollte ein Anwender mit böser
         Absicht an eine falsche Stelle übertragen, ist es sowieso ein
         sozialen Problem und muss außerhalb von Subversion gelöst
         werden.</para>

<!--
      <para>So, before you begin restricting users' access rights, ask
        yourself whether there's a real, honest need for this, or
        whether it's just something that <quote>sounds good</quote> to
        an administrator.  Decide whether it's worth sacrificing some
        server speed, and remember that there's very little risk
        involved; it's bad to become dependent on technology as a
        crutch for social problems.<footnote><para>A common theme in
        this book!</para></footnote></para>

-->
      <para>Bevor Sie also anfangen, die Zugriffsrechte von Anwendern
        einzuschränken, sollten Sie sich fragen, ob es tatsächlich
        einen triftigen Grund dafür gibt oder ob es sich für einen
        Administrator nur <quote>gut anhört</quote>. Entscheiden Sie,
        ob es sich lohnt, Servergeschwindigkeit zu opfern, und
        vergessen Sie nicht, dass es hier um sehr wenig Risiko geht:
        es ist schlecht, wenn man als Krücke für soziale Probleme von
        Technik abhängig wird.<footnote><para>Ein in diesem Buch
        häufiges Thema!</para></footnote></para>

<!--
      <para>As an example to ponder, consider that the Subversion
        project itself has always had a notion of who is allowed to
        commit where, but it's always been enforced socially.  This is
        a good model of community trust, especially for open source
        projects.  Of course, sometimes there <emphasis>are</emphasis>
        truly legitimate needs for path-based access control; within
        corporations, for example, certain types of data really can be
        sensitive, and access needs to be genuinely restricted to
        small groups of people.</para>

-->
      <para>Als erwägenswertes Beispiel sollten Sie das
        Subversion-Projekt betrachten, das stets eine Vorstellung
        davon hatte, wer etwas wohin übertragen darf, dies jedoch immer
        auf der sozialen Ebene durchsetzte. Dies ist ein passendes
        Modell für Vertrauen in einer Gemeinschaft, besonders bei
        Open-Source-Projekten. Selbstverständlich existiert manchmal
        <emphasis>tatsächlich</emphasis> ein legitimes Erfordernis für
        pfad-basierte Zugriffskontrolle. Im Geschäftsumfeld können
        bestimmte Daten wirklich vertraulich sein, so dass der Zugriff
        darauf auf eine kleine Gruppe beschränkt werden muss.</para>

    </sidebar>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.pathbasedauthz.getting-started">

<!--
      <title>Getting Started with Path-Based Access Control</title>
-->
      <title>Loslegen mit pfad-basierter Zugriffskontrolle</title>

<!--
      <para>Subversion offers path-based access control in Apache via
        the <command>mod_authz_svn</command> module, which must be
        loaded using the <literal>LoadModule</literal> directive
        in <filename>httpd.conf</filename> in the same fashion
        that <command>mod_dav_svn</command> itself is loaded.  To
        enable the use of this module for your repositories, you'll
        add the <literal>AuthzSVNAccessFile</literal> directive (again
        within the <filename>httpd.conf</filename> file) pointing to
        your own access rules file.  (For a full explanation, see
        <xref linkend="svn.serverconfig.httpd.authz.perdir"/>.)</para>
-->
      <para>Subversion bietet pfad-basierte Zugriffskontrolle in Apache
        über das Modul <command>mod_authz_svn</command> an, das mit
        der Direktive <literal>LoadModule</literal> in
        <filename>httpd.conf</filename> geladen werden muss, genau so,
        wie auch <command>mod_dav_svn</command> selbst geladen wird.
        Um die Verwendung dieses Moduls für Ihre Projektarchive zu
        ermöglichen, müssen Sie die Direktive
        <literal>AuthzSVNAccessFile</literal> hinzufügen (auch in der
        Datei <filename>httpd.conf</filename>), die auf Ihre eigene
        Datei mit Zugriffsregeln zeigt. (Für eine vollständige
        Erklärung, siehe
        <xref linkend="svn.serverconfig.httpd.authz.perdir"/>.)</para>

<!--
      <para>To configure path-based authorization
        in <command>svnserve</command>, simply point
        the <literal>authz-db</literal> configuration variable (within
        your <filename>svnserve.conf</filename> file) to your access
        rules file.</para>
-->
      <para>Um pfad-basierte Autorisierung in
        <command>svnserve</command> zu konfigurieren, müssen Sie
        einfach die Konfigurationsvariable <literal>authz-db</literal>
        (in Ihrer Datei <filename>svnserve.conf</filename>e) auf Ihre
        Datei mit den Zugriffsregeln zeigen lassen.</para>

<!--
      <para>Once your server knows where to look for your access
        rules, it's time to define those rules.</para>
-->
      <para>Sobald Ihr Server weiß, wo sich Ihre Zugriffsdatei befindet, ist
        es an der Zeit, die Regeln zu definieren.</para>

<!--
      <para>The syntax of the Subversion access file is the same
        familiar one used by <filename>svnserve.conf</filename> and
        the runtime configuration files.  Lines that start with a hash
        (<literal>#</literal>) are ignored.  In its simplest form,
        each section names a versioned path and, optionally, the
        repository in which that path is found.  In other words,
        except for a few reserved sections, section names are of one
        of two forms: either <literal>[repos-name:path]</literal>
        or <literal>[path]</literal>.  Authenticated usernames are the
        option names within each section, and an option's value
        describes that user's level of access to the repository path:
        either <literal>r</literal> (read-only) or <literal>rw</literal>
        (read/write).  If the user is not mentioned at all, no access is
        allowed.</para>
-->
      <para>Die Syntax der Subversion Zugriffs-Datei ist dieselbe wie
        bei <filename>svnserve.conf</filename> und den
        Laufzeit-Konfigurationsdateien. Zeilen, die mit einer Raute
        (<literal>#</literal>) beginnen, werden ignoriert. In der
        einfachsten Form benennt jeder Abschnitt einen versionierten
        Pfad und, optional, das Projektarchiv in dem dieser Pfad sich
        befindet.  Mit anderen Worten, außer bei ein paar reservierten
        Abschnitten, haben Abschnittsnamen eins von zwei möglichen
        Formaten: entweder
        <literal>[projektarchiv-name:pfad]</literal> oder
        <literal>[pfad]</literal>.  Authentifizierten Anwendernamen
        sind die Optionsnamen innerhalb jedes Abschnitts, und der Wert
        einer Option beschreibt das Zugriffsrecht des Anwenders auf
        den Pfad im Projektarchiv, entweder <literal>r</literal> (nur
        lesend) oder <literal>rw</literal> (lesend und schreibend).
        Wird der Anwender gar nicht erwähnt, ist kein Zugriff
        erlaubt.</para>

      <note>
<!--
        <para>Paths used in access file sections must be specified
          using Subversion's <quote>internal style</quote>, which
          mostly just means that they are encoded in UTF-8 and use
          forward slash (<literal>/</literal>) characters as directory
          separators (even on Windows systems).  Note also that these
          paths do not employ any character escaping mechanism (such
          as URI-encoding)&mdash;spaces in path names should be
          represented exactly as such in access file section names
          (<literal>[repos-name:path&nbsp;with&nbsp;spaces]</literal>,
          e.g.)</para>
-->
        <para>Die in Zugriffs-Dateien verwendeten Pfade müssen im
          <quote>internen Stil</quote> von Subversion angegeben
          werden, was meist nur bedeutet, dass sie in UTF-8 kodiert
          sind und Schrägstriche (<literal>/</literal>) als
          Verzeichnistrenner verwenden (sogar auf Windows-Systemen).
          Beachten Sie ebenfalls, dass diese Pfade keinerlei
          Maskierung einsetzen (etwa URI-Kodierung); Leerzeichen in
          Dateinamen sollen in Abschnittsnamen von Zugriffsdateien
          exakt wiedergegeben werden (z.B.,
          <literal>[repos-name:path&nbsp;with&nbsp;spaces]</literal>),
        </para>
      </note>

<!--
      <para>Here's a simple example demonstrating a piece of the
        access configuration which grants read access Sally, and
        read/write access to Harry, for the
        path <filename>/branches/calc/bug-142</filename> (and all its
        children) in the repository <literal>calc</literal>:</para>
-->
      <para>Hier ist ein einfaches Beispiel eines Teils einer
        Zugriffskonfiguration, die für den Pfad
        <filename>/branches/calc/bug-142</filename> (und allen seiner
        Kinder) im Projektarchiv <literal>calc</literal> Sally
        Lesezugriff und Harry Schreib- und Lesezugriff gewährt:</para>

      <informalexample>
        <programlisting>
[calc:/branches/calc/bug-142]
harry = rw
sally = r
</programlisting>
      </informalexample>

<!--
      <warning>
        <para>Prior to version 1.7, Subversion treated repository names
          and paths in a case-insensitive fashion for the purposes of
          access control, converting them to lower case internally
          before comparing them against the contents of your access
          file.  It now does these comparisons case-sensitively.  If you
          upgraded to Subversion 1.7 from an older version, you should
          review your access files for case correctness.</para>
      </warning>
-->
      <warning>
        <para>Vor Version 1.7 hat Subversion bei
          Namen und Pfaden von Projektarchiven nicht die Groß- oder
          Kleinschreibung beachtet, da sie vor dem Vergleich mit dem Inhalt
          der Zugriffsdatei in Kleinbuchstaben umgewandelt wurden. Nun
          werden Vergleiche unter Berücksichtigung der Groß- und
          Kleinschreibung vorgenommen. Falls Sie eine ältere
          Version auf Subversion 1.7 aktualisiert haben, sollten Sie
          Ihre Zugriffsdateien auf die korrekte Groß- und Kleinschreibung
          überprüfen.</para>
      </warning>

<!--
      <para>The name of a repository as evaluated by the authorization
        subsystem is derived directly from the repository's path.
        Exactly how this happens differs between the two server
        options. <command>mod_dav_svn</command> uses only the basename
        of the repository's root URL<footnote><para>Any human-readable
        name for a repository configured via
        the <literal>SVNReposName</literal> <filename>httpd.conf</filename>
        directive will be ignored by the authorization subsystem.
        Your access control file sections must refer to repositories
        by their server-sensitive paths as previously
        described.</para></footnote>,
        while <command>svnserve</command> uses the entire relative
        path from the serving root (as determined by
        its <option>- -root</option> (<option>-r</option>) command-line
        option) to the repository.</para>
-->
      <para>Der vom Autorisierungs-Subsystem berechnete Name des
        Projektarchivs wird direkt von seinem Pfad abgeleitet. Es
        hängt von zwei Server-Optionen ab, wie das genau geschieht.
        <command>mod_dav_svn</command> verwendet lediglich den
        Basisnamen des Wurzel-URLs vom
        Projektarchiv<footnote><para>Irgendein menschenlesbarer Name
        für ein Projektarchiv, der mit der Direktive
        <literal>SVNReposName</literal> von
        <filename>httpd.conf</filename> konfiguriert wurde, wird vom
        Autorisierungs-Subsystem ignoriert. Die Abschnitte in der
        Zugriffskontrolldatei müssen sich auf Projektarchive über
        deren Pfade beziehen, die für Server ,wie oben beschrieben,
        erkennbar sind.</para></footnote>, während
        <command>svnserve</command> den vollständigen, relativen Pfad
        vom Server-Wurzelverzeichnis (wie in der Befehlszeilen-Option
        <option>--root</option> (<option>-r</option>) angegeben) zum
        Projektarchiv verwendet.</para>

      <warning>
<!--
        <para>The differences in the ways that a repository's name is
          determined by each of <command>mod_dav_svn</command>
          and <command>svnserve</command> can cause problems when
          trying to serve a repository via both servers
          simultaneously.  Naturally, an administrator would prefer to
          point both servers' configurations toward a common access
          file.  However, for this to work, you must ensure that the
          repository name portion of the file's section names are
          compatible with each server's idea of what the repository
          name should be&mdash;for example, by
          configuring <command>svnserve</command>'s root to be the
          same as <command>mod_dav_svn</command>'s configured
          <literal>SVNParentPath</literal>, or by using a different
          access file per repository so that section names needn't
          reference the repository at all.</para>
-->
        <para>Die unterschiedliche Art, auf die
          <command>mod_dav_svn</command> und
          <command>svnserve</command> den Namen eines Projektarchivs
          zu ermitteln versuchen, können zu Problemen führen, falls
          ein Projektarchiv von beiden Servern gleichzeitig bedient
          werden soll. Natürlich würde es ein Administrator
          bevorzugen, für die Konfiguration beider Server nur eine
          gemeinsame Zugriffsdatei zu verwenden. Damit das allerdings
          funktioniert, müssen Sie sicherstellen, dass der Teil mit
          dem Namen des Projektarchivs in den Abschnittsnamen der
          Datei kompatibel zu dem ist, was jeder einzelne Server für
          den Namen des Projektarchivs erachtet &ndash;
          beispielsweise, indem das Wurzelverzeichnis von
          <command>svnserve</command> so definiert wird, dass es
          gleich dem <literal>SVNParentPath</literal> von
          <command>mod_dav_svn</command> ist, oder indem eine
          unterschiedliche Zugriffsdatei für jedes Projektarchiv
          verwendet wird, so dass die Abschnittsnamen sich überhaupt
          nicht auf ein Projektarchiv beziehen müssen.</para>
      </warning>

<!--
      <para>If you're using the <literal>SVNParentPath</literal>
        directive, it's important to specify the repository names in
        your sections.  If you omit them, a section such as
        <literal>[/some/dir]</literal> will match the path
        <filename>/some/dir</filename> in <emphasis>every</emphasis>
        repository.  If you're using the <literal>SVNPath</literal>
        directive, however, it's fine to provide only paths in your
        sections&mdash;after all, there's only one repository.</para>

-->
      <para>Falls Sie die Direktive
        <literal>SVNParentPath</literal> verwenden, ist es wichtig, die
        Namen der Projektarchive in den Abschnitten anzugeben. Falls Sie
        sie weglassen, wird ein Abschnitt wie etwa
        <literal>[/some/dir]</literal> auf den Pfad
        <filename>/some/dir</filename> <emphasis>jedes</emphasis>
        Projektarchivs zutreffen. Falls Sie jedoch die Direktive
        <literal>SVNPath</literal> verwenden, ist es in Ordnung, in den
        Abschnitten nur Pfade anzugeben, da es ja schließlich nur
        ein einziges Projektarchiv gibt.</para>

<!--
      <para>Permissions are inherited from a path's parent directory.
        That means we can specify a subdirectory with a different
        access policy for Sally.  Let's continue our previous
        example, and grant Sally write access to a child of the branch
        that she's otherwise permitted only to read:</para>
-->
      <para>Berechtigungen werden vom Elternverzeichnis ererbt. Das
        bedeutet, dass wir ein Unterverzeichnis mit unterschiedlichen
        Berechtigungen für Sally angeben können. Machen wir mit
        unserem vorigen Beispiel weiter und geben Sally Schreibzugriff
        auf ein Kindverzeichnis des Zweigs, auf dass Sie sonst nur
        lesend zugreifen dürfte:</para>

<!--
      <informalexample>
        <programlisting>
[calc:/branches/calc/bug-142]
harry = rw
sally = r

# give sally write access only to the 'testing' subdir
[calc:/branches/calc/bug-142/testing]
sally = rw
</programlisting>
      </informalexample>
-->
      <informalexample>
        <programlisting>
[calc:/branches/calc/bug-142]
harry = rw
sally = r

# Sally bekommt nur für das Unterverzeichnis 'testing' Schreibrecht
[calc:/branches/calc/bug-142/testing]
sally = rw
</programlisting>
      </informalexample>

<!--
      <para>Now Sally can write to the <filename>testing</filename>
        subdirectory of the branch, but can still only read other parts.
        Harry, meanwhile, continues to have complete read/write access
        to the whole branch.</para>
-->
      <para>Nun kann Sally im Verzeichnis <filename>testing</filename> des
        Zweigs zwar schreiben, an anderen Stellen allerdings immer noch nur
        lesen.  Andererseits besitzt Harry weiterhin vollständigen Lese- und
        Schreibzugriff auf den gesamten Zweig.</para>

<!--
      <para>It's also possible to explicitly deny permission to someone
        via inheritance rules, by setting the username variable to
        nothing:</para>
-->
      <para>Es ist ebenfalls möglich, einer Person über die Vererbungsregeln
        explizit Berechtigungen zu entziehen, indem die Variable mit dem
        Anwendernamen auf den leeren Wert gesetzt wird:</para>

      <informalexample>
        <programlisting>
[calc:/branches/calc/bug-142]
harry = rw
sally = r

[calc:/branches/calc/bug-142/secret]
harry =
</programlisting>
      </informalexample>

<!--
      <para>In this example, Harry has read/write access to the
        entire <filename>bug-142</filename> tree, but has absolutely no
        access at all to the <filename>secret</filename> subdirectory
        within it.</para>

-->
      <para>In diesem Beispiel hat Harry Lese- und Schreibzugriff auf den
        gesamten Baum <filename>bug-142</filename>, jedoch überhaupt keinen
        Zugriff auf das darin befindliche Unterverzeichnis
        <filename>secret</filename>.</para>

      <tip>
<!--
        <para>The thing to remember is that the most specific path
          always matches first.  The server tries to match the path
          itself, and then the parent of the path, then the parent of
          that, and so on.  The net effect is that mentioning a specific
          path in the access file will always override any permissions
          inherited from parent directories.</para>
-->
        <para>Man muss sich nur merken, dass stets zuerst der am
          genauesten angegebene Pfad passt. Der Server versucht
          zunächst, den Pfad selbst abzugleichen, dann das
          Elternverzeichnis hiervon, dann dessen Elternverzeichnis usw.
          Unter dem Strich läuft es darauf hinaus, dass die Erwähnung
          eines bestimmten Pfades in der Zugriffsdatei stets die von
          Elternverzeichnissen ererbten Berechtigungen überdeckt.</para>

<!--
        <para>Similarly, sections that specify a repository name have
          precedence over those that don't: if both
          <literal>[calc:/some/path]</literal> and
          <literal>[/some/path]</literal> are present, the former will be used
          and the latter ignored for <literal>calc</literal>.</para>
-->
        <para>Ähnlich haben Abschnitte, die den Namen eines
          Projektarchivs angeben, Vorrang vor denen ohne: falls sowohl
          <literal>[calc:/irgendein/pfad]</literal> als auch
          <literal>[/irgendein/pfad]</literal> vorkommen, wird für
          <literal>calc</literal> ersterer verwendet und letzterer
          ignoriert.</para>
      </tip>

<!--
      <para>By default, nobody has any access to any repository at all.
        That means that if you're starting with an empty file, you'll
        probably want to give at least read permission to all users at
        the roots of the repositories.  You can do this by using the
        asterisk variable (<literal>*</literal>), which means <quote>all
        users</quote>:</para>

-->
      <para>Standardmäßig hat niemand irgendeine Zugriffsberechtigung
        auf irgendein Projektarchiv. Das bedeutet, wenn mit einer
        leeren Datei begonnen wird, sollte mindestens für alle
        Anwender die Leseberechtigung für die Wurzeln der
        Projektarchive gewährt werden. Das kann mit der
        Stern-Variablen (<literal>*</literal>) erreicht werden, die
        für <quote>alle Anwender</quote> steht:</para>

      <informalexample>
        <programlisting>
[/]
* = r
</programlisting>
      </informalexample>

<!--
      <para>This is a common setup; notice that no repository
        name is mentioned in the section name.  This makes all repositories
        world-readable to all users.  Once all users have read access to
        the repositories, you can give explicit
        <literal>rw</literal> permission to certain users on specific
        subdirectories within specific repositories.</para>
-->
      <para>Dies ist eine verbreitete Einstellung. Beachten Sie, dass im
        Abschnittsnamen kein Projektarchiv erwähnt wird. Das führt dazu, dass
        alle Projektarchive für alle Anwender der Welt lesbar sind.  Sobald
        alle Anwender Lesezugriff auf die Projektarchive haben, können Sie
        bestimmten Anwendern für ausgewählte Verzeichnisse bestimmter
        Projektarchive die Berechtigung <literal>rw</literal> geben.</para>

      <para>Note that while all of the previous examples use
        directories, that's only because defining access rules on
        directories is the most common case.  You may similarly
        restrict access on file paths, too.</para>

      <informalexample>
        <programlisting>
[calendar:/projects/calendar/manager.ics]
harry = rw
sally = r
</programlisting>
      </informalexample>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.pathbasedauthz.groups">

<!--
      <title>Access Control Groups</title>
-->
      <title>Zugriffskontroll-Gruppen</title>

<!--
      <para>The access file also allows you to define whole groups of
        users, much like the Unix <filename>/etc/group</filename>
        file.  To do this, create a <literal>groups</literal> section
        in your access file, and then describe your groups within that
        section: each variable's name defines the name of the group,
        and its value is a comma-delimited list of usernames which
        are part of that group.</para>
-->
      <para>Die Zugriffsdatei erlaubt es Ihnen auch, ganze
        Anwendergruppen zu definieren, ähnlich der Unix-Datei
        <filename>/etc/group</filename>. Dafür erstellen Sie einen
        Abschnitt <literal>groups</literal> in Ihrer Zugriffsdatei und
        beschreiben in diesem Abschnitt anschließend Ihre Gruppen:
        jeder Name einer Variablen definiert den Namen der Gruppe, und
        deren Wert ist eine durch Kommata getrennte Liste aus den
        Anwendernamen der Gruppenmitglieder.</para>

      <informalexample>
        <programlisting>
[groups]
calc-developers = harry, sally, joe
paint-developers = frank, sally, jane
everyone = harry, sally, joe, frank, jane
</programlisting>
      </informalexample>

<!--
      <para>Groups can be granted access control just like users.
        Distinguish them with an <quote>at sign</quote>
        (<literal>@</literal>) prefix:</para>

-->
      <para>Gruppen können ebenso wie Anwendern Zugriffsberechtigungen
        erteilt werden. Sie werden von Anwendern durch einen
        <quote>At-Zeichen</quote>-Präfix (<literal>@</literal>)
        unterschieden:</para>

      <informalexample>
        <programlisting>
[calc:/projects/calc]
@calc-developers = rw

[paint:/projects/paint]
jane = r
@paint-developers = rw
</programlisting>
      </informalexample>

<!--
      <para>Another important fact is that group permissions are not
        overridden by individual user permissions. Rather, the
        <emphasis>combination</emphasis> of all matching permissions is
        granted.  In the prior example, Jane is a member of the
        <literal>paint-developers</literal> group, which has read/write
        access.  Combined with the <literal>jane = r</literal> rule,
        this still gives Jane read/write access.  Permissions for group
        members can only be extended beyond the permissions the group
        already has. Restricting users who are part of a group to less
        than their group's permissions is impossible.</para>

-->
      <para>Ein weiterer wichtiger Punkt ist, dass Gruppenberechtigungen
        nicht durch die Berechtigungen individueller Anwender
        überschrieben werden. Vielmehr wird die
        <emphasis>Kombination</emphasis> aller passender Berechtigungen
        zugesichert. Im vorangehenden Beispiel ist Jane Mitglied der
        Gruppe <literal>paint-developers</literal>, die über Lese- und
        Schreibzugriff verfügt. Kombiniert mit der Regel
        <literal>jane = r</literal> ergibt das immer noch Lese- und
        Schreibzugriff für Jane. Zugriffsrechte für Gruppenmitglieder
        können allenfalls über die Gruppenberechtigungen hinaus
        erweitert werden. Die Einschränkung von Anwendern, die
        Gruppenmitglieder sind auf geringere Berechtigungen als deren
        Gruppenberechtigung ist nicht möglich.</para>

<!--
      <para>Groups can also be defined to contain other groups:</para>

-->
      <para>Gruppen können auch definiert werden, indem sie andere
        Gruppen beinhalten:</para>

      <informalexample>
        <programlisting>
[groups]
calc-developers = harry, sally, joe
paint-developers = frank, sally, jane
everyone = @calc-developers, @paint-developers
</programlisting>
      </informalexample>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.pathbasedauthz.aliases">

<!--
      <title>Username Aliases</title>
-->
      <title>Anwendernamen-Aliase</title>

<!--
      <para>Some authentication systems expect and carry relatively
        short usernames of the sorts we've been describing
        here&mdash;<literal>harry</literal>,
        <literal>sally</literal>, <literal>joe</literal>, and so on.  But
        other authentication systems&mdash;such as those which use LDAP
        stores or SSL client certificates&mdash;may carry much more
        complex usernames.  For example, Harry's username in an
        LDAP-protected system might be <literal>CN=Harold
        Hacker,OU=Engineers,DC=red-bean,DC=com</literal>.  With
        usernames like that, the access file can become quite bloated
        with long or obscure usernames that are easy to
        mistype.</para>
-->
      <para>Einige Authentifikationssysteme erwarten und verwenden
        relativ kurze Anwendernamen, wie wir sie hier bereits
        beschrieben haben: <literal>harry</literal>,
        <literal>sally</literal>, <literal>joe</literal> usw. Andere
        Authentifikationssysteme jedoch, wie solche, die LDAP oder
        SSL-Client-Zertifikate verwenden, könnten wesentlich komplexere
        Anwendernamen verwenden. So könnte beispielsweise Harrys
        Anwendername in einem durch LDAP geschützten System
        <literal>CN=Harold
        Hacker,OU=Engineers,DC=red-bean,DC=com</literal> lauten. Mit
        derartigen Anwendernamen könnte die Zugriffsdatei mit langen
        oder undurchsichtigen Anwendernamen zugemüllt werden, was auch
        leicht zu Tippfehlern führen kann.</para>

<!--
      <para>Fortunately, Subversion 1.5 introduced username aliases to
        the access file syntax.  Username aliases allow you to have to
        type the correct complex username only once, in a statement
        which assigns to it a more easily digestable alias.</para>
  -->
      <para>Glücklicherweise führte Subversion 1.5
        Anwendernamen-Aliase in die Syntax der Zugriffsdatei ein.
        Anwendernamen-Aliase ermöglichen das einmalige Eintippen
        korrekter, komplizierter Anwendernamen in einer Anweisung, die
        diesem ein einfacheres Alias zuteilt.</para>

<!--
      <para>Username aliases are defined in the
        special <literal>aliases</literal> section of the access file,
        with each variable name in that section defining an alias, and
        the value of those variables carrying the real Subversion
        username which is being aliased.</para>
-->
      <para>Anwendernamen-Aliase werden im speziellen Abschnitt
        <literal>aliases</literal> der Zugriffsdatei definiert, wobei
        jeder Variablenname in diesem Abschnitt ein Alias festlegt und
        dessen Wert der tatsächliche Subversion-Anwendername ist, dem
        dieser Alias zugeteilt wird.</para>

      <informalexample>
        <programlisting>
[aliases]
harry = CN=Harold Hacker,OU=Engineers,DC=red-bean,DC=com
sally = CN=Sally Swatterbug,OU=Engineers,DC=red-bean,DC=com
joe = CN=Gerald I. Joseph,OU=Engineers,DC=red-bean,DC=com
&hellip;
</programlisting>
      </informalexample>

<!--
      <para>Once you've defined a set of aliases, you can refer to the
        users elsewhere in the access file via their aliases in all the
        same places you could have instead used their actual usernames.
        Simply prepend an ampersand to the alias to distinguish it from
        a regular username:</para>
-->
      <para>Sobald Sie eine Menge an Aliasen definiert haben, können Sie
        sich an allen Stellen der Zugriffsdatei über die Aliase auf die
        Anwender beziehen, an denen Sie sonst die eigentlichen
        Anwendernamen benutzt hätten. Setzen Sie einfach ein
        kaufmännisches Und vor den Alias, um ihn von einem normalen
        Anwendernamen zu unterscheiden:</para>

      <informalexample>
        <programlisting>
[groups]
calc-developers = &amp;harry, &amp;sally, &amp;joe
paint-developers = &amp;frank, &amp;sally, &amp;jane
everyone = @calc-developers, @paint-developers
</programlisting>
      </informalexample>

<!--
      <para>You might also choose to use aliases if your users'
        usernames change frequently.  Doing so allows you to need to
        update only the aliases table when these username changes occur,
        instead of doing global search-and-replace operations on the
        whole access file.</para>
-->
      <para>Sie könnten sich auch dazu entscheiden, Aliase zu verwenden,
        falls sich die Anwendernamen Ihrer Anwender häufig ändern. In
        diesem Fall müssen Sie bei Änderungen der Anwendernamen
        lediglich die Aliastabelle aktualisieren anstatt eine globale
        Such- und Ersetzungsoperation über die gesamte Zugriffsdatei
        vornehmen zu müssen.</para>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.pathbasedauthz.authclass-tokens">

<!--
      <title>Advanced Access Control Features</title>
-->
      <title>Fortgeschrittene Zugriffskontroll-Funktionen</title>

<!--
      <para>Beginning with Subversion 1.5, the access file syntax also
        supports some <quote>magic</quote> tokens for helping you to
        make rule assignments based on the user's authentication
        class.  One such token is
        the <literal>$authenticated</literal> token.  Use this token
        where you would otherwise specify a username, alias, or group
        name in your authorization rules to declare the permissions
        granted to any user who has authenticated with any username at
        all.  Similarly employed is the <literal>$anonymous</literal>
        token, except that it matches everyone who has
        <emphasis>not</emphasis> authenticated with a username.</para>
  -->
      <para>Beginnend mit Subversion 1.5 unterstützt die Syntax der
        Zugriffsdatei einige <quote>magische</quote> Symbole, die
        Ihnen dabei helfen sollen, Regeln abhängig von der
        Authentifikationsklasse des Anwenders zu vergeben. Ein
        solches Symbol ist <literal>$authenticated</literal>.
        Verwenden Sie dieses Symbol dort, wo Sie ansonsten einen
        Anwendernamen, einen Alias oder einen Gruppennamen in Ihren
        Autorisierungsregeln angeben würden, um die Zugriffsrechte zu
        deklarieren, die ein Anwender erteilt bekommt, der sich schon
        einmal mit einem Anwendernamen anmeldet. Ähnlich wird das
        Symbol <literal>$anonymous</literal> verwendet, mit der
        Ausnahme, dass es auf jeden anwendbar ist, der sich
        <emphasis>nicht</emphasis> mit einem Anwendernamen
        authentifiziert hat.</para>

      <informalexample>
        <programlisting>
[calendar:/projects/calendar]
$anonymous = r
$authenticated = rw
</programlisting>
      </informalexample>

  <!--
      <para>Another handy bit of access file syntax magic is the use
        of the tilde (<literal>~</literal>) character as an exclusion
        marker.  In your authorization rules, prefixing a username,
        alias, group name, or authentication class token with a tilde
        character will cause Subversion to apply the rule to users who
        do <emphasis>not</emphasis> match the rule.  Though somewhat
        unnecessarily obfuscated, the following block is equivalent to
        the one in the previous example:</para>
  -->
      <para>Ein weiteres praktisches Stück magischer
        Zugriffsdatei-Syntax ist die Verwendung der Tilde
        (<literal>~</literal>) als eine Ausschlussmarkierung. Wenn Sie
        in Ihren Autorisierungsregeln einem Anwendernamen, einem Alias,
        einen Gruppennamen oder einem Authentifikationsklassen-Symbol
        eine Tilde voranstellen, gilt diese Regel für Anwender, die
        <emphasis>nicht</emphasis> durch diese Regel erfasst werden.
        Obwohl es unnötigerweise etwas verwirrend erscheint, ist der
        folgende Block äquivalent zu dem aus dem vorangegangenen
        Beispiel:</para>

      <informalexample>
        <programlisting>
[calendar:/projects/calendar]
~$authenticated = r
~$anonymous = rw
</programlisting>
      </informalexample>

<!--
      <para>A less obvious example might be as follows:</para>
-->
      <para>Ein weniger offensichtliches Beispiel könnte wie folgt
        aussehen:</para>

      <informalexample>
        <programlisting>
[groups]
calc-developers = &amp;harry, &amp;sally, &amp;joe
calc-owners = &amp;hewlett, &amp;packard
calc = @calc-developers, @calc-owners
<!--
# Any calc participant has read-write access...
-->
# jeder calc-Teilnehmer hat Lese- und Schreibzugriff...
[calc:/projects/calc]
@calc = rw
<!--
# ...but only allow the owners to make and modify release tags.
-->
# ...doch nur die Eigentümer dürfen Release-Tags erstellen und ändern.
[calc:/projects/calc/tags]
~@calc-owners = r
</programlisting>
      </informalexample>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.pathbasedauthz.gotchas">

<!--
      <title>Some Gotchas with Access Control</title>
-->
      <title>Einige Fallstricke bei der Zugriffskontrolle</title>

<!--
      <para>If you're using Apache as your Subversion server and have
        made certain subdirectories of your repository unreadable to
        certain users, you need to be aware of a possible nonoptimal
        behavior with <command>svn checkout</command>.</para>

-->
      <para>Falls Sie Apache als Ihren Subversion-Server verwenden und
        bestimmte Unterverzeichnisse Ihres Projektarchivs für bestimmte
        Anwender unlesbar gemacht haben, müssen Sie über ein
        mögliches suboptimales Verhalten von <command>svn
        checkout</command> Bescheid wissen.</para>

<!--
      <para>Depending on which HTTP communication library the
        Subversion client is using, it may request that the entire
        payload of a checkout or update be delivered in a single
        (often large) response to the primary checkout/update request.
        When this happens, this single request is the
        <emphasis>only</emphasis> opportunity Apache has to demand
        user authentication.  This has some odd side effects.  For
        example, if a certain subdirectory of the repository is
        readable only by user Sally, and user Harry checks out a
        parent directory, his client will respond to the initial
        authentication challenge as Harry.  As the server generates
        the large response, there's no way it can resend an
        authentication challenge when it reaches the special
        subdirectory; thus the subdirectory is skipped altogether,
        rather than asking the user to reauthenticate as Sally at the
        right moment.</para>
-->
      <para>Abhängig von der vom Client verwendeten Bibliothek zur
        HTTP-Kommunikation, kann es sein, dass er verlangt, die
        kompletten Nutzdaten eines Checkouts oder einer Aktualisierung
        in einer einzigen (oft sehr umfangreichen) Antwort auf die
        Hauptanfrage des Checkouts/der Aktualisierung abzuliefern.
        Wenn das geschieht, ist diese Anfrage die
        <emphasis>einzige</emphasis> Gelegenheit, die
        Authentifikation des Anwenders einzufordern. Das hat einige
        merkwürdige Seiteneffekte. Wenn beispielsweise ein
        Unterverzeichnis des Projektarchivs nur für die Anwenderin
        Sally lesbar ist und der Anwender Harry ein Elternverzeichnis
        auscheckt, wird sein Client auf die initiale Aufforderung zur
        Authentifikation als Harry antworten. Während der Server die
        umfangreiche Antwort erzeugt, besteht keine Möglichkeit beim
        Erreichen des besonderen Verzeichnisses eine erneute
        Aufforderung zu senden; das Verzeichnis wird somit einfach
        übergangen, anstatt den Anwender im passenden Moment
        aufzufordern, sich als Sally zu authentifizieren.</para>

<!--
      <para>In a similar way, if the root of the repository is
        anonymously world-readable, the entire checkout will be done
        without authentication&mdash;again, skipping the unreadable
        directory, rather than asking for authentication partway
        through.<footnote><para>For more on this, see the blog
        post <emphasis>Authz and Anon Authn Agony</emphasis> at
        <ulink url="http://blogs.collab.net/subversion/2007/03/authz_and_anon_/"
        />.</para></footnote></para>
-->
      <para>Auf ähnliche Weise wird der komplette Checkout ohne
        Authentifikation vollzogen, falls das Wurzelverzeichnis des
        Projektarchivs anonym für jeden lesbar ist; auch hier werden
        nicht lesbare Verzeichnisse übergangen, anstatt zwischendurch
        zur Authentifikation aufzufordern.<footnote><para>Mehr hierzu
        im Blog-Post <emphasis>Authz and Anon Authn Agony</emphasis>
        auf
        <ulink url="http://blogs.collab.net/subversion/2007/03/authz_and_anon_/"
        />.</para></footnote></para>
      <!-- TODO: Merge content from the blog post into the book. --> 

    </sect2>
  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.serverconfig.operational-logging">
<!--
    <title>High-level Logging</title>
-->
    <title>Protokollierung auf hohem Niveau</title>

<!--
    <para>Both the Apache <command>httpd</command>
      and <command>svnserve</command> Subversion servers provide
      support for high-level logging of Subversion operations.
      Configuring each of the server options to provide this level of
      logging is done differently, of course, but the output from each
      is designed to conform to a uniform syntax.</para>
-->
    <para>Sowohl der Apache <command>httpd</command>- als auch der
      Subversion <command>svnserve</command>-Server bieten die
      Protokollierung von Subversion-Operationen auf hohem Niveau. Die
      Einstellung jeder dieser Server-Optionen zur Bereitstellung
      dieser Protokollstufe erfolgt natürlich auf unterschiedliche
      Weise; gleichwohl folgt jedes Ausgabeformat einer einheitlichen
      Syntax.</para>

<!--
    <para>To enable high-level logging in <command>svnserve</command>,
      you need only use the <option>- -log-file</option> command-line
      option when starting the server, passing as the value to the
      option the file to which <command>svnserve</command> should
      write its log output.</para>
-->
    <para>Um dieses hohe Protokollierungsniveau in
      <command>svnserve</command> zu ermöglichen, brauchen Sie nur
      beim Start des Servers die Befehlszeilen-Option
      <option>--log-file</option> zu verwenden, deren Wert der Name
      der Datei ist, in die <command>svnserve</command> seine
      Protokollausgaben schreibt.</para>

    <informalexample>
      <screen>
$ svnserve -d -r /path/to/repositories --log-file /var/log/svn.log
</screen>
    </informalexample>

<!--
    <para>Enabling the same in Apache is a bit more involved, but is
      essentially an extension of Apache's stock log output
      configuration mechanisms&mdash;see
      <xref linkend="svn.serverconfig.httpd.extra.logging"/> for
      details.</para>
-->
    <para>Um das Gleiche in Apache einzustellen, ist etwas mehr Arbeit
      notwendig, jedoch handelt es sich um eine Erweiterung von
      Apaches Standard-Konfigurations-Mechanismus für die
      Protokollausgabe (Näheres unter
      <xref linkend="svn.serverconfig.httpd.extra.logging"/>).</para>

<!--
    <para>The following is a list of Subversion action log messages
      produced by its high-level logging mechanism, followed by one or
      more examples of the log message as it appears in the log
      output.</para>
-->
    <para>Es folgt eine eine Liste mit Protokollnachrichten von
      Subversion-Aktionen, die von seinem Protokollierungsmechanismus
      auf hohem Niveau erzeugt werden, gefolgt durch ein oder mehrere
      Beispiele einer Protokollnachricht wie sie in der Ausgabe
      erscheint.</para>

    <variablelist>
      <varlistentry>
<!--
        <term>Checkout or export</term>
-->
        <term>Checkout oder Export</term>
        <listitem>
          <programlisting>
checkout-or-export /path r62 depth=infinity
</programlisting>
        </listitem>
      </varlistentry>
      <varlistentry>
<!--
        <term>Commit</term>
-->
        <term>Übergabe</term>
        <listitem>
          <programlisting>
commit harry r100
</programlisting>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Diffs</term>
        <listitem>
          <programlisting>
diff /path r15:20 depth=infinity ignore-ancestry
diff /path1@15 /path2@20 depth=infinity ignore-ancestry
</programlisting>
        </listitem>
      </varlistentry>
      <varlistentry>
<!--
        <term>Fetch a directory</term>
-->
        <term>Holen eines Verzeichnisses</term>
        <listitem>
          <programlisting>
get-dir /trunk r17 text
</programlisting>
        </listitem>
      </varlistentry>
      <varlistentry>
<!--
        <term>Fetch a file</term>
-->
        <term>Holen einer Datei</term>
        <listitem>
          <programlisting>
get-file /path r20 props
</programlisting>
        </listitem>
      </varlistentry>
      <varlistentry>
<!--
        <term>Fetch a file revision</term>
-->
        <term>Holen einer Dateirevision</term>
        <listitem>
          <programlisting>
get-file-revs /path r12:15 include-merged-revisions
</programlisting>
        </listitem>
      </varlistentry>
      <varlistentry>
<!--
        <term>Fetch merge information</term>
-->
        <term>Holen von Informationen über eine Zusammenführung</term>
        <listitem>
          <programlisting>
get-mergeinfo (/path1 /path2)
</programlisting>
        </listitem>
      </varlistentry>
      <varlistentry>
<!--
        <term>Lock</term>
-->
        <term>Sperre</term>
        <listitem>
          <programlisting>
lock /path steal
</programlisting>
        </listitem>
      </varlistentry>
      <varlistentry>
<!--
        <term>Log</term>
-->
        <term>Protokoll</term>
        <listitem>
          <programlisting>
log (/path1,/path2,/path3) r20:90 discover-changed-paths revprops=()
</programlisting>
        </listitem>
      </varlistentry>
      <varlistentry>
<!--
        <term>Replay revisions (svnsync)</term>
-->
        <term>Wiederholen von Revisionen (svnsync)</term>
        <listitem>
          <programlisting>
replay /path r19
</programlisting>
        </listitem>
      </varlistentry>
      <varlistentry>
<!--
        <term>Revision property change</term>
-->
        <term>Änderung einer Revisions-Eigenschaft</term>
        <listitem>
          <programlisting>
change-rev-prop r50 propertyname
</programlisting>
        </listitem>
      </varlistentry>
      <varlistentry>
<!--
        <term>Revision property list</term>
-->
        <term>Liste von Revisions-Eigenschaften</term>
        <listitem>
          <programlisting>
rev-proplist r34
</programlisting>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Status</term>
        <listitem>
          <programlisting>
status /path r62 depth=infinity
</programlisting>
        </listitem>
      </varlistentry>
      <varlistentry>
<!--
        <term>Switch</term>
-->
        <term>Umschalten</term>
        <listitem>
          <programlisting>
switch /pathA /pathB@50 depth=infinity
</programlisting>
        </listitem>
      </varlistentry>
      <varlistentry>
<!--
        <term>Unlock</term>
-->
        <term>Entsperren</term>
        <listitem>
          <programlisting>
unlock /path break
</programlisting>
        </listitem>
      </varlistentry>
      <varlistentry>
<!--
        <term>Update</term>
-->
        <term>Aktualisieren</term>
        <listitem>
          <programlisting>
update /path r17 send-copyfrom-args
</programlisting>
        </listitem>
      </varlistentry>
    </variablelist>

<!--
    <para>As a convenience to administrators who wish to post-process
      their Subversion high-level logging output (perhaps for
      reporting or analysis purposes), Subversion source code
      distributions provide a Python module (located at
      <filename>tools/server-side/svn_server_log_parse.py</filename>)
      which can be used to parse Subversion's log output.</para>
-->
    <para>Zur Erleichterung der Arbeit von Administratoren, die ihre
      Subversion Protokollausgaben nachbearbeiten möchten (vielleicht
      für Berichte oder zur Analyse), ist den Quelltextpaketen für
      Subversion ein Python-Modul unter
      <filename>tools/server-side/svn_server_log_parse.py</filename>
      beigelegt, das verwendet werden kann, um die Protokollausgaben
      von Subversion zu parsen.</para>

  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.serverconfig.optimization">
<!--
    <title>Server Optimization</title>
-->
    <title>Server-Optimierung</title>

<!--
    <para>Part of the due diligence when offering a service such as a
      Subversion server involves capacity planning and performance
      tuning.  Subversion doesn't tend to be particularly greedy in
      terms of server resources such as CPU cycles and memory, but any
      service can benefit from optimizations, especially when usage of
      the service skyrockets<footnote><para>In Subversion's case, the
      skyrocketing affect is, of course, due to its cool name.  Well,
      that and its popularity, reliability, ease of
      use&hellip;.</para></footnote>.  In this section, we'll discuss
      some ways you can tweak your Subversion server configuration
      to offer even better performance and scalability.</para>
-->
    <para>Ein Teil der gebührenden Fleißarbeit bei der Bereitstellung
      eines Dienstes, wie etwa eines Subversion Servers, umfasst die
      Planung des Leistungsvermögens und der Leistungsverbesserung.
      Subversion neigt nicht dazu, besonders ressourcenhungrig
      hinsichtlich CPU- und Speicherverbrauch zu sein, doch kann jeder
      Dienst Nutzen aus Optimierungen ziehen, insbesondere, wenn die
      Nutzung des Dienstes in die Höhe schnellt<footnote><para>Im Fall
      von Subversion beruht dieser steile Aufstieg natürlich auf dem
      coolen Namen. Okay, das und seine Beliebtheit, Zuverlässigkeit,
      Benutzerfreundlichkeit&hellip;.</para></footnote>. In diesem
      Abschnitt erörtern wir einige Maßnahmen, wie Sie Ihre Subversion
      Server-Konfiguration dergestalt anpassen können, dass eine noch
      bessere Leistung und Erweiterbarkeit verfügbar ist.</para>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.optimization.caching">
<!--
      <title>Data Caching</title>
-->
      <title>Datenpufferung</title>

<!--
      <para>Generally speaking, the most expensive part of a
        Subversion server's job is fetching data from the repository.
        Subversion 1.6 attempted to offset this cost by introducing
        some in-memory caching of certain classes of data read from
        the repository.  But Subversion 1.7 takes this a step further,
        not only caching the results of some of the more costly
        operations, but also by providing in each of the available
        servers the means by which fine-tune the size and some
        behaviors of the cache.</para>
-->
      <para>Im Allgemeinen ist der teuerste Teil der Arbeit eines
        Subversion Servers das Abrufen von Daten aus dem
        Projektarchiv. Subversion 1.6 versuchte, diese Kosten durch
        die Einführung einer Pufferung bestimmter aus dem
        Projektarchiv gelesener Datenklassen im Speicher
        auszugleichen. Subversion 1.7 geht hier jedoch weiter, indem
        nicht nur die Ergebnisse der kostenintensiveren Operationen
        gepuffert werden, sondern außerdem in jedem der verfügbaren
        Server die Werkzeuge zur Feinjustierung der Größe und einiger
        Verhaltensweisen des Puffers zur Verfügung gestellt
        wird.</para>

<!--
      <para>For <command>svnserve</command>, you can specify the size
        of the cache using the <option>- -memory-cache-size</option>
        (<option>-M</option>) command-line option.  You can also
        dictate whether <command>svnserve</command> should attempt to
        cache content fulltexts and deltas via the
        boolean <option>- -cache-fulltexts</option>
        and <option>- -cache-txdeltas</option> options,
        respectively.</para>
-->
      <para>Für <command>svnserve</command> können Sie die Puffergröße
        mit der Kommandozeilenoption
        <option>--memory-cache-size</option> (<option>-M</option>)
        angeben. Sie können über die booleschen Optionen
        <option>--cache-fulltexts</option> und
        <option>--cache-txdeltas</option> auch vorgeben, ob
        <command>svnserve</command> den Volltext bzw. die Deltas von
        Inhalten puffern soll.</para>

      <informalexample>
        <screen>
$ svnserve -d -r /path/to/repositories \
           --memory-cache-size 1024 \
           --cache-txdeltas yes \
           --cache-fulltexts yes
&hellip;
$
</screen>
      </informalexample>

<!--
      <para><command>mod_dav_svn</command> provides the same degree of
        cache configurability via <filename>httpd.conf</filename>
        directives.
        The <literal>SVNInMemoryCacheSize</literal>,
        <literal>SVNCacheFullTexts</literal>,
        and <literal>SVNCacheTextDeltas</literal> directives may be
        used at the server configuration level to control Subversion's
        data cache characteristics:</para>
-->
      <para><command>mod_dav_svn</command> stellt denselben
        Konfigurationsgrad über
        <filename>httpd.conf</filename>-Direktiven zur Verfügung.  Die
        Direktiven <literal>SVNInMemoryCacheSize</literal>,
        <literal>SVNCacheFullTexts</literal> und
        <literal>SVNCacheTextDeltas</literal> können auf der Ebene der
        Server-Konfiguration verwendet werden, um die Charakteristik
        der Datenpufferung von Subversion zu kontrollieren.</para>

      <informalexample>
        <programlisting>
&lt;IfModule dav_svn_module&gt;<!--
  # Enable a 1 Gb Subversion data cache for both fulltext and deltas.
-->
  # Einen 1 Gb Subversion Datenpuffer sowohl für Volltext als auch Deltas bereitstellen.
  SVNInMemoryCacheSize 1048576
  SVNCacheTextDeltas On
  SVNCacheFullTexts On
&lt;/IfModule&gt;
</programlisting>
      </informalexample>

<!--
      <para>So what settings should you use?  Certainly you need to
        consider what resources are available on your server.  To get
        any benefit out of the cache at all, you'll probably want to
        let the cache be at least large enough to hold all the files
        which are most commonly accessed in your repository (for
        example, your project's <filename>trunk</filename> directory
        tree).</para>
-->
      <para>Also, welche Einstellungen sollten Sie verwenden?
        Natürlich müssen Sie die auf Ihrem Server zur Verfügung
        stehenden Ressourcen berücksichtigen. Um überhaupt einen
        Vorteil aus der Pufferung ziehen zu können, sollten Sie den
        Puffer mindestens so groß lassen, dass er alle Dateien, auf
        die am häufigsten zugegriffen wird, aufnehmen kann (z.B. den
        <filename>trunk</filename>-Dateibaum Ihres Projektes).</para>

      <tip>
<!--
        <para>Setting the memory cache size to <literal>0</literal>
          will disable this enhanced caching mechanism and cause
          Subversion to fall back to using the older cache mechanisms
          introduced in Subversion 1.6.</para>
-->
        <para>Wenn Sie die Größe des Puffers im Speicher auf
          <literal>0</literal> setzen, wird der erweiterte
          Puffermechanismus außer Kraft gesetzt und bewirkt, dass
          Subversion auf die alten in Subversion 1.6 eingeführten
          Puffermechanismen zurückgreift.</para>
      </tip>

      <note>
<!--
        <para>Currently, only repositories which make use of the FSFS
          backend data store make use of this data caching
          functionality.</para>
-->
        <para>Momentan verwenden lediglich Projektarchive, die das
          FSFS-Backend benutzen, diese Funktionalität der
          Datenpufferung.</para>
      </note>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.serverconfig.optimization.compression">
<!--
      <title>Network Compression of Data</title>
-->
      <title>Datenkompression über das Netz</title>

<!--
      <para>Compressing the data transmitted across the wire can
        greatly reduce the size of those network transmissions, but
        comes at the cost of server (and client) CPU cycles.
        Depending on your server's CPU capacity, the typical access
        patterns of the clients who use your servers, and the
        bandwidth of the networks between them, you might wish to fine
        tune just how hard your server will work to compress the data
        it sends across the wire.  To assist with this fine tuning
        process, Subversion 1.7 offers
        the <option>- -compression</option> (<option>-c</option>)
        option to <command>svnserve</command> and
        the <literal>SVNCompressionLevel</literal> directive
        for <command>mod_dav_svn</command>.  Both accept a value which
        is an integer between 0 and 9 (inclusive), where 9 offers the
        best compression of wire data, and 0 disables compression
        altogether.</para>
-->
      <para>Die Komprimierung von Daten, die über Draht übertragen
        werden, kann den Umfang dieser Netzwerkübertragungen erheblich
        verringern, geht allerdings auf Kosten der CPU-Leistung des
        Servers (und Clients). Abhängig von der CPU-Kapazität Ihres
        Servers, den typischen Zugriffsmustern der Clients, die Ihren
        Server in Anspruch nehmen und der Bandbreite der dazwischen
        liegenden Netzwerke möchten Sie vielleicht einstellen, welchen
        Aufwand Ihr Server betreiben soll, um die Daten vor dem
        Versand zu komprimieren. Um Sie bei dieser Feineinstellung zu
        unterstützen, bietet Subversion 1.7 für
        <command>svnserve</command> die Option
        <option>--compression</option> (<option>-c</option>) und die
        Direktive <literal>SVNCompressionLevel</literal> für
        <command>mod_dav_svn</command>. Beide akzeptieren einen Wert,
        der eine Ganzzahl zwischen 0 und 9 (einschließlich) ist, wobei
        9 die beste Komprimierung der Daten bietet und 0 die
        Kompression vollständig unterbindet.</para>

<!--
      <para>For example, on a local area network (LAN) with 1-Gigabit
        connections, it might not make sense to have the server
        compress its network transmissions (which also forces the
        clients to decompress them), as the network itself is so fast
        that users won't really benefit from the smaller overall
        network payload.  On the other hand, servers which are
        accessed primarily by clients with low-bandwidth connections
        would be doing those clients a favor by minimizing the overall
        size of its network communications.</para>
-->
      <para>In einem lokalen Netzwerk (LAN) mit 1-Gigabit-Verbindungen
        mag es beispielsweise keinen Sinn ergeben, den Server die
        Übertragungen zu komprimieren (was auch die Clients dazu
        zwingt, sie zu entkomprimieren), da das Netz bereits so
        schnell ist, dass die Anwender von einer verkleinerten
        Nutzlast nicht profitieren würden. Andererseits würden Server,
        auf die in erster Linie von Clients mit Verbindungen geringer
        Bandbreite zugegriffen wird, ihren Clients einen großen
        Gefallen erweisen, wenn sie den Gesamtumfang der
        Netzwerkkommunikation minimieren würden.</para>

    </sect2>

  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.serverconfig.multimethod">

<!--
    <title>Supporting Multiple Repository Access Methods</title>
-->
    <title>Unterstützung mehrerer Zugriffsmethoden auf das Projektarchiv</title>

<!--
    <para>You've seen how a repository can be accessed in many
      different ways.  But is it possible&mdash;or safe&mdash;for your
      repository to be accessed by multiple methods simultaneously?
      The answer is yes, provided you use a bit of foresight.</para>

-->
    <para>Sie haben gesehen, wie auf viele verschiedene Weisen auf ein
      Projektarchiv zugegriffen werden kann. Ist es aber möglich, oder
      sicher, wenn auf Ihr Projektarchiv gleichzeitig mit mehreren
      Methoden zugegriffen wird? Die Antwort lautet: ja,
      vorausgesetzt, sie handeln ein bisschen vorausschauend.</para>

<!--
    <para>At any given time, these processes may require read and
      write access to your repository:</para>

-->
    <para>Diese Prozesse benötigen jederzeit Lese- und Schreibzugriff
      auf Ihr Projektarchiv:</para>

    <itemizedlist>
      <listitem>
<!--
        <para>Regular system users using a Subversion client (as
          themselves) to access the repository directly via
          <literal>file://</literal> URLs</para>
-->
        <para>Gewöhnliche Systemanwender, die einen Subversion-Client
          mit ihrer Kennung verwenden, um direkt über
          <literal>file://</literal> URLs auf das Projektarchiv
          zuzugreifen</para>
      </listitem>
      <listitem>
<!--
        <para>Regular system users connecting to SSH-spawned private
          <command>svnserve</command> processes (running as
          themselves), which access the repository</para>
-->
        <para>Gewöhnliche Systemanwender, die sich über durch SSH
          gestartete private <command>svnserve</command>-Prozesse
          verbinden, die unter ihrer Kennung auf das Projektarchiv
          zugreifen</para>
      </listitem>
      <listitem>
<!--
        <para>An <command>svnserve</command> process&mdash;either a
          daemon or one launched by
          <command>inetd</command>&mdash;running as a particular fixed
          user</para>
-->
        <para>Ein <command>svnserve</command>-Prozess, entweder als
          Daemon oder von <command>inetd</command> gestartet, der
          unter einer bestimmten festen Kennung läuft</para>
      </listitem>
      <listitem>
<!--
        <para>An Apache <command>httpd</command> process, running as a
          particular fixed user</para>
-->
        <para>Ein Apache <command>httpd</command>-Prozess, der unter
          einer bestimmten festen Kennung läuft</para>
      </listitem>
    </itemizedlist>

<!--
    <para>The most common problem administrators run into is
      repository ownership and permissions.  Does every process (or
      user) in the preceding list have the rights to read and write the
      repository's underlying data files?  Assuming you have a
      Unix-like operating system, a straightforward approach might be
      to place every potential repository user into a
      new <literal>svn</literal> group, and make the repository wholly
      owned by that group.  But even that's not enough, because a
      process may write to the database files using an unfriendly
      umask&mdash;one that prevents access by other users.</para>

-->
    <para>Das häufigste Problem, in das Administratoren laufen,
      besteht im Eigentumsverhältnis und den Zugriffsrechten des
      Projektarchivs. Hat jeder Prozess (oder Anwender) aus der obigen
      Liste die Rechte, die dem Projektarchiv zugrunde liegenden
      Dateien zu lesen und zu schreiben? Unter der Annahme, dass Sie
      ein Unix-ähnliches Betriebssystem haben, mag ein einfacher
      Ansatz darin bestehen, jeden möglichen Anwender des
      Projektarchivs in eine neue Gruppe <literal>svn</literal>
      aufzunehmen und dieser Gruppe die Eigentumsrechte über das
      Projektarchiv zu geben. Aber auch das reicht nicht, da ein
      Prozess die Datenbankdateien unter Verwendung einer widrigen
      umask schreiben könnte, so dass anderen Anwendern der Zugriff
      verwehrt würde.</para>

<!--
    <para>So the next step beyond setting up a common group for
      repository users is to force every repository-accessing process
      to use a sane umask.  For users accessing the repository
      directly, you can make the <command>svn</command> program into a
      wrapper script that first runs <userinput>umask 002</userinput> and
      then runs the real <command>svn</command> client program.  You
      can write a similar wrapper script for the
      <command>svnserve</command> program, and add a <userinput>umask
      002</userinput> command to Apache's own startup script,
      <filename>apachectl</filename>.  For example:</para>

-->
    <para>Nach dem Einrichten einer gemeinsamen Gruppe für
      Projektarchiv-Anwender besteht der nächste Schritt darin, jeden
      Prozess, der auf das Projektarchiv zugreift, zu zwingen, eine
      passende umask zu verwenden. Für Anwender, die direkt auf das
      Projektarchiv zugreifen, können Sie das Programm
      <command>svn</command> in ein Skript umwandeln, das zunächst
      <userinput>umask 002</userinput> aufruft und dann das
      eigentliche Client-Programm <command>svn</command> startet. Ein
      ähnliches Skript können Sie für das Programm
      <command>svnserve</command> schreiben, und in das Startskript
      von Apache, <filename>apachectl</filename>, fügen Sie den
      Befehl <userinput>umask 002</userinput> ein. Zum
      Beispiel:</para>

    <informalexample>
      <screen>
$ cat /usr/bin/svn

#!/bin/sh

umask 002
/usr/bin/svn-real "$@"
</screen>
    </informalexample>

<!--
    <para>Another common problem is often encountered on Unix-like
      systems.  If your repository is backed by Berkeley DB, for
      example, it occasionally creates new log files to journal its
      actions.  Even if the Berkeley DB repository is wholly owned by
      the <command>svn</command> group, these newly created log files
      won't necessarily be owned by that same group, which then
      creates more permissions problems for your users.  A good
      workaround is to set the group SUID bit on the
      repository's <filename>db</filename> directory.  This causes all
      newly created log files to have the same group owner as the
      parent directory.</para>

-->
    <para>Ein weiteres bekanntes Problem tritt häufig auf
      Unix-ähnlichen Systemen auf. Wenn Ihr Projektarchiv
      beispielsweise auf Berkeley-DB aufsetzt, werden gelegentlich
      neue Dateien angelegt, um die Aktivitäten zu protokollieren.
      Selbst wenn die Gruppe <command>svn</command> vollständiger
      Eigentümer des Projektarchivs ist, müssen diese neu erstellten
      Protokolldateien nicht notwendigerweise derselben Gruppe
      gehören, was weitere Zugriffsprobleme für Ihre Anwender nach
      sich zieht. Ein guter Behelf besteht darin, das Gruppen-SUID-Bit
      für das Verzeichnis <filename>db</filename> des Projektarchivs
      zu setzen, was dazu führt, das alle neu erstellten
      Protokolldateien  derselben Gruppe gehören wie das
      Elternverzeichnis.</para>

<!--
    <para>Once you've jumped through these hoops, your repository
      should be accessible by all the necessary processes.  It may
      seem a bit messy and complicated, but the problems of having
      multiple users sharing write access to common files are classic
      ones that are not often elegantly solved.</para>

-->
    <para>Sobald Sie diese Hürden genommen haben, sollten alle
      notwendigen Prozesse auf Ihr Projektarchiv zugreifen können. Es
      scheint vielleicht etwas chaotisch und kompliziert, doch die
      Probleme, die bei gemeinsamen Zugriff mehrerer Anwender auf
      gemeinsame Dateien entstehen, sind Klassiker, die sich oft nicht
      elegant lösen lassen.</para>

<!--
    <para>Fortunately, most repository administrators will never
      <emphasis>need</emphasis> to have such a complex configuration.
      Users who wish to access repositories that live on the same
      machine are not limited to using <literal>file://</literal>
      access URLs&mdash;they can typically contact the Apache HTTP
      server or <command>svnserve</command> using
      <literal>localhost</literal> for the server name in their
      <literal>http://</literal> or <literal>svn://</literal> URL.
      And maintaining multiple server processes for your Subversion
      repositories is likely to be more of a headache than necessary.
      We recommend that you choose a single server that best meets your
      needs and stick with it!</para>

-->
    <para>Glücklicherweise werden die meisten Administratoren von
      Projektarchiven niemals eine solch komplexe Konfiguration
      <emphasis>benötigen</emphasis>. Anwender, die auf Projektarchive
      des Rechners zugreifen möchten, an dem sie sich angemeldet
      haben, sind nicht auf URLs der Form <literal>file://</literal>
      beschränkt, sondern können den
      Apache-Server oder <command>svnserve</command> mit
      <literal>localhost</literal> als Server-Namen in deren
      <literal>http://</literal> oder <literal>svn://</literal> URL
      verwenden. Darüber hinaus wird das Betreiben mehrfacher
      Server-Prozesse für Ihr Projektarchiv Ihnen mehr Kopfschmerzen
      bereiten als nötig ist. Wir empfehlen, einen einzigen Server zu
      wählen, der Ihren Bedürfnissen am nächsten kommt und dabei zu
      bleiben!</para>

    <sidebar>
<!--
      <title>The svn+ssh:// Server Checklist</title>
-->
      <title>Die Checkliste für svn+ssh://-Server</title>

<!--
      <para>It can be quite tricky to get a bunch of users with
        existing SSH accounts to share a repository without
        permissions problems.  If you're confused about all the things
        that you (as an administrator) need to do on a Unix-like
        system, here's a quick checklist that resummarizes some of the
        topics discussed in this section:</para>

-->
      <para>Es kann recht verzwickt sein, es hinzubekommen, dass sich
        ein Haufen Anwender mit bestehenden SSH-Konten ohne Zugriffsprobleme
        ein Projektarchiv teilt. Falls Sie von all den Dingen, die Sie
        (als Administrator) auf einem Unix-ähnlichen System erledigen
        müssen, verwirrt sind: Hier ist eine kurze Checkliste die noch
        einmal einige der in diesem Abschnitt besprochenen Themen
        zusammenfasst:</para>

      <itemizedlist>
        <listitem>
<!--
          <para>All of your SSH users need to be able to read and
            write to the repository, so put all the SSH users into a
            single group.</para>
-->
          <para>Alle Ihrer SSH-Anwender müssen in der Lage sein, das
            Projektarchiv zu lesen und zu schreiben. Fassen Sie also
            alle SSH-Anwender in einer einzelnen Gruppe
            zusammen.</para>
        </listitem>
        <listitem>
<!--
          <para>Make the repository wholly owned by that group.</para>
-->
          <para>
            Machen Sie das Projektarchiv vollständig zum Eigentum dieser Gruppe.
          </para>
        </listitem>
        <listitem>
<!--
          <para>Set the group permissions to read/write.</para>
-->
          <para>Setzen Sie die Gruppenrechte auf lesen/schreiben.</para>
        </listitem>
        <listitem>
<!--
          <para>Your users need to use a sane umask when accessing the
            repository, so make sure <command>svnserve</command>
            (<filename>/usr/bin/svnserve</filename>, or wherever it
            lives in <literal>$PATH</literal>) is actually a wrapper
            script that runs <userinput>umask 002</userinput> and
            executes the real <command>svnserve</command>
            binary.</para>
-->
          <para>Ihre Anwender benötigen eine sinnvolle umask, wenn sie
            auf das Projektarchiv zugreifen. Also sollten sie
            sicherstellen, dass <command>svnserve</command>
            (<filename>/usr/bin/svnserve</filename> oder wo es sonst
            im <literal>$PATH</literal> liegt) tatsächlich ein
            Wrapper-Skript ist, dass <userinput>umask 002</userinput>
            aufruft und dann das eigentliche Programm
            <command>svnserve</command> startet.</para>
        </listitem>
        <listitem>
<!--
          <para>Take similar measures when using
            <command>svnlook</command> and
            <command>svnadmin</command>.  Either run them with a sane
            umask or wrap them as just described.</para>
-->
          <para>Ergreifen Sie ähnliche Maßnahmen bei Verwendung von
            <command>svnlook</command> und
            <command>svnadmin</command>. Starten Sie sie entweder mit
            einer sinnvollen umask oder verpacken sie wie eben
            beschrieben.</para>
        </listitem>
      </itemizedlist>

    </sidebar>

  </sect1>
</chapter>

<!--
local variables:
sgml-parent-document: ("book.xml" "chapter")
end:
-->
