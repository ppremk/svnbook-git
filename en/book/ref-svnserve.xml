<!-- -*- sgml -*- -->

<reference id="svn.ref.svnserve">
  <title>svnserve Reference&mdash;Custom Subversion Server</title>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <refentry id="svn.ref.svnserve.re">

    <indexterm>
      <primary>svnserve</primary>
    </indexterm>

    <refnamediv>
      <refname>svnserve</refname>
      <refpurpose>Serve Subversion repositories via Subversion's
        custom network protocol</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <para><literal>svnserve [-d | -i | -t | -X] OPTIONS...</literal></para>
    </refsynopsisdiv>

    <!-- =============================================================== -->
    <refsect1 id="svn.ref.svnserve.re.desc">
      <title>Description</title>

      <para><command>svnserve</command> allows access to Subversion
        repositories using Subversion's custom network
        protocol.</para>

      <para>You can run <command>svnserve</command> as a standalone
        server process (for clients that are using the
        <literal>svn://</literal> access method); you can have a
        daemon such as <command>inetd</command>
        or <command>xinetd</command> launch it for you on demand (also
        for <literal>svn://</literal>), or you can have
        <command>sshd</command> launch it on demand for the
        <literal>svn+ssh://</literal> access method.</para>

      <para>Regardless of the access method, once the client has
        selected a repository by transmitting its URL,
        <command>svnserve</command> reads a file named
        <filename>conf/svnserve.conf</filename> in the repository
        directory to determine repository-specific settings such as
        what authentication database to use and what authorization
        policies to apply.  See
        <xref linkend="svn.serverconfig.svnserve"/> for details of the
        <filename>svnserve.conf</filename> file.</para>

    </refsect1>

    <!-- =============================================================== -->
    <refsect1 id="svn.ref.svnserve.re.options">
      <title>Options</title>
    
      <para>Unlike the previous commands we've
        described, <command>svnserve</command> has no
        subcommands&mdash;it is controlled exclusively by
        options.</para>

      <variablelist>

        <varlistentry id="svn.ref.svnserve.sw.cache_fulltexts">
          <term><option>--cache-fulltexts</option> <replaceable>ARG</replaceable></term>
          <listitem>
            <para>Toggles support for fulltext file content caching (in
              FSFS repositories only).</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.cache_txdeltas">
          <term><option>--cache-txdeltas</option> <replaceable>ARG</replaceable></term>
          <listitem>
            <para>Toggles support for file content delta caching (in
              FSFS repositories only).</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.compression">
          <term><option>--compression</option> <replaceable>LEVEL</replaceable></term>
          <listitem>
            <para>Specifies the level of compression used for wire
              transmissions as an integer beween 0 and 9, inclusive.
              A value of <literal>9</literal> offers the best
              compression, <literal>5</literal> is the default value,
              and <literal>0</literal> disables compression
              altogether.</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.daemon">
          <term><option>--daemon</option> (<option>-d</option>)</term>
          <listitem>
            <para>Causes <command>svnserve</command> to run in daemon
              mode.  <command>svnserve</command> backgrounds itself
              and accepts and serves TCP/IP connections on
              the <literal>svn</literal> port (3690, by
              default).</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.foreground">
          <term><option>--foreground</option></term>
          <listitem>
            <para>When used together with <option>-d</option>,
              causes <command>svnserve</command> to stay in the
              foreground.  This is mainly useful for debugging.</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.inetd">
          <term><option>--inetd</option> (<option>-i</option>)</term>
          <listitem>
            <para>Causes <command>svnserve</command> to use the
              <filename>stdin</filename> and <filename>stdout</filename> file descriptors, as is appropriate for a
              daemon running out of <command>inetd</command>.</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.help">
          <term><option>--help</option> (<option>-h</option>)</term>
          <listitem>
            <para>Displays a usage summary and exits.</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.listen_host">
          <term><option>--listen-host</option> <replaceable>HOST</replaceable></term>
          <listitem>
            <para>Causes <command>svnserve</command> to listen on the
              interface specified by <replaceable>HOST</replaceable>,
              which may be either a hostname or an IP address.</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.listen_once">
          <term><option>--listen-once</option> (<option>-X</option>)</term>
          <listitem>
            <para>Causes <command>svnserve</command> to accept one
              connection on the <literal>svn</literal> port, serve it,
              and exit.  This option is mainly useful for
              debugging.</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.listen_port">
          <term><option>--listen-port</option> <replaceable>PORT</replaceable></term>
          <listitem>
            <para>Causes <command>svnserve</command> to listen on
              <replaceable>PORT</replaceable> when run in daemon mode.
              (FreeBSD daemons listen only on tcp6 by default&mdash;this
              option tells them to also listen on tcp4.)</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.log_file">
          <term><option>--log-file</option> <replaceable>FILENAME</replaceable></term>
          <listitem>
            <para>Instructs <command>svnserve</command> to create (if
              necessary) and use the file located
              at <replaceable>FILENAME</replaceable> for Subversion
              operational log output of the same sort
              that <command>mod_dav_svn</command> generates.  See
              <xref linkend="svn.serverconfig.operational-logging" />
              for details.</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.memory_cache_size">
          <term><option>--memory-cache-size</option> (<option>-M</option>) <replaceable>ARG</replaceable></term>
          <listitem>
            <para>Configures the size (in Megabytes) of the extra
              in-memory cache used to minimize redundant operations.
              The default value is <literal>16</literal>.  (This cache
              is used for FSFS-backed repositories only.)</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.pid_file">
          <term><option>--pid-file</option> <replaceable>FILENAME</replaceable></term>
          <listitem>
            <para>Causes <command>svnserve</command> to write its
              process ID to <replaceable>FILENAME</replaceable>, which
              must be writable by the user under
              which <command>svnserve</command> is running.</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.prefer_ipv6">
          <term><option>--prefer-ipv6</option> (<option>-6</option></term>
          <listitem>
            <para>When resolving the listen hostname, prever an IPv6
              answer over an IPv4 one.  IPv4 is preferred by
              default.</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.quiet">
          <term><option>--quiet</option></term>
          <listitem>
            <para>Disables progress notifications.  Error output will
              still be printed.</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.root">
          <term><option>--root</option> (<option>-r</option>) <replaceable>ROOT</replaceable></term>
          <listitem>
            <para>Sets the virtual root for repositories served by
              <command>svnserve</command>.  The pathname in URLs
              provided by the client will be interpreted relative to
              this root and will not be allowed to escape this
              root.</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.threads">
          <term><option>--threads</option> (<option>-T</option>)</term>
          <listitem>
            <para>When running in daemon mode, causes
              <command>svnserve</command> to spawn a thread instead of
              a process for each connection (e.g., for when running on
              Windows).  The <command>svnserve</command> process still
              backgrounds itself at startup time.</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.tunnel">
          <term><option>--tunnel</option> (<option>-t</option>)</term>
          <listitem>
            <para>Causes <command>svnserve</command> to run in tunnel
              mode, which is just like the <command>inetd</command>
              mode of operation (both modes serve one connection over
              <filename>stdin</filename>/<filename>stdout</filename>, and then exit), except that the connection
              is considered to be preauthenticated with the username
              of the current UID.  This flag is automatically passed
              for you by the client when running over a tunnel agent
              such as <command>ssh</command>.  That means there's
              rarely any need for <emphasis>you</emphasis> to pass
              this option to <command>svnserve</command>.  So, if you
              find yourself
              typing <literal>svnserve --tunnel</literal> on the
              command line and wondering what to do next, see
              <xref linkend="svn.serverconfig.svnserve.sshauth"/>.</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.tunnel_user">
          <term><option>--tunnel-user</option> <replaceable>NAME</replaceable></term>
          <listitem>
            <para>Used in conjunction with the <option>--tunnel</option>
              option, tells <command>svnserve</command> to assume that
              <replaceable>NAME</replaceable> is the authenticated
              user, rather than the UID of the <command>svnserve</command>
              process.  This is useful for users wishing to share a single
              system account over SSH, but to maintain separate commit
              identities.</para>
          </listitem>
        </varlistentry>

        <varlistentry id="svn.ref.svnserve.sw.version">
          <term><option>--version</option></term>
          <listitem>
            <para>Displays version information and a list of repository
            backend modules available, and then exits.</para>
          </listitem>
        </varlistentry>

      </variablelist>

    </refsect1>
  </refentry>
</reference>

<!--
local variables: 
sgml-parent-document: ("book.xml" "reference")
end:
-->
